# Example Makefile for developer convenience
#
# There's nothing here you can't do the long way. This is just a collection of (hopefully intuitive) shortcuts
# to ease common development tasks.
#
# To use this file:
#
#   % ln -s Makefile.example Makefile
#
# Examples:
#
#   # build all the docker db containers from scratch
#   % make build
#
#   # reset the dbs to the latest schema + seeds
#   % make reset
#
#   # run the dev server
#   % make run
#
#   # run all the linting tasks
#   % make lint security
#
#   # if you add a .git/hooks/pre-commit like this:
#   #!/bin/sh
#   exec make lint security
#
#   # then you can make sure all your code is lint-free on every commit.
#   # You can turn it off with:
#   % make unsafe
#
#   # and re-enable with
#   % make safe
#
#   # pulled latest from github? try:
#   % make install migrate
#
# Hopefully the targets are easy enough to remember to make this useful to others.
#
.DEFAULT_GOAL := help

whats-next:
	scripts/whats-next

ready:
	h=`docker-compose ps | grep healthy`; while [ "$$h" == "" ]; do h=`docker-compose ps | grep healthy`; echo $$h; sleep 1; done

up:  ## Start the docker containers
	docker-compose up -d

run: up ready
	foreman start

test: clean
	bundle exec rake

clean:  ## Clean logs, compiled webpack assets, and temporary files
	rm -f log/vacols.log
	rm -f log/test.log
	rm -f app/assets/javascripts/*webpack*
	rm -rf tmp/capybara

vacols:
	docker exec --tty -i VACOLS_DB bash

facols:
	sqlplus "VACOLS_DEV/VACOLS_DEV@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=1521))(CONNECT_DATA=(SID=BVAP)))"

build: clean
	bundle exec rake local:destroy local:build

lint:  ## Run linter for javascript and ruby
	bundle exec rake lint

jslint:  ## Run linter for javascript
	cd client && yarn run lint

security:
	bundle exec rake security

check: test lint

logs:
	docker-compose logs -f

db:
	bundle exec rails dbconsole

c:  ## Start rails console
	bundle exec rails console

migrate:  ## Migrate rails database
	bundle exec rake db:migrate

rollback:  ## Rollback rails database
	bundle exec rake db:rollback

fresh:
	git fresh

reset:  ## Resets databases
	bundle exec rake db:drop db:create db:schema:load local:vacols:seed db:seed
	bundle exec rails runner scripts/enable_features_dev.rb

bundle-install:  ## Installs ruby dependencies
	bundle check || bundle install

client-install:  ## Installs javascript dependencies
	cd client && yarn install

install: bundle-install client-install  ## Installs all dependencies

update: fresh install migrate

client-test:  ## Runs javascript tests
	cd client && yarn run build:test

one-test:
	bundle exec rspec $$T

unsafe:
	mv .git/hooks/pre-commit .git/hooks/pre-commit-linter

safe:
	mv .git/hooks/pre-commit-linter .git/hooks/pre-commit

clear-eps:
	redis-cli KEYS "end_product_records_development:*" | xargs redis-cli DEL

karma:
	cd client && node_modules/.bin/karma start

# Self-documented makefile from https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html
help:  ## Shows help
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

.PHONY: test run clean lint check logs db update one-test client-test security build ready help
