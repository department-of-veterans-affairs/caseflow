# Example Makefile for developer convenience
#
# There's nothing here you can't do the long way. This is just a collection of (hopefully intuitive) shortcuts
# to ease common development tasks.
#
# To use this file:
#
#   % cp Makefile.example Makefile
#
# Examples:
#
#   # build all the docker db containers from scratch
#   % make build
#
#   # reset the dbs to the latest schema + seeds
#   % make reset
#
#   # run the dev server
#   % make run
#
#   # run all the linting tasks
#   % make lint security
#
#   # if you add a .git/hooks/pre-commit like this:
#   #!/bin/sh
#   exec make lint security
#
#   # then you can make sure all your code is lint-free on every commit.
#   # You can turn it off with:
#   % make unsafe
#
#   # and re-enable with
#   % make safe
#
#   # pulled latest from github? try:
#   % make install migrate
#
# Hopefully the targets are easy enough to remember to make this useful to others.
#

ready:
	h=`docker-compose ps | grep healthy`; while [ "$$h" == "" ]; do h=`docker-compose ps | grep healthy`; echo $$h; sleep 1; done

up:
	docker-compose up -d

run: up ready
	foreman start

test: clean
	bundle exec rake

clean:
	rm -f log/vacols.log
	rm -f log/test.log
	rm -f app/assets/javascripts/*webpack*
	rm -rf tmp/capybara

vacols:
	docker exec --tty -i VACOLS_DB bash

facols:
	sqlplus "VACOLS_DEV/VACOLS_DEV@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=1521))(CONNECT_DATA=(SID=BVAP)))"

build: clean
	bundle exec rake local:destroy local:build

lint:
	bundle exec rake lint

jslint:
	cd client && yarn run lint

security:
	bundle exec rake security_caseflow

check: test lint

logs:
	docker-compose logs -f

db:
	bundle exec rails dbconsole

c:
	bundle exec rails console

migrate:
	bundle exec rake db:migrate

rollback:
	bundle exec rake db:rollback

fresh:
	git fresh

reset:
	bundle exec rake db:reset
	bundle exec rails runner scripts/enable_features_dev.rb

bundle-install:
	bundle check || bundle install

client-install:
	cd client && yarn install

install: bundle-install client-install

update: fresh install migrate

client-test:
	cd client && yarn run build:test

one-test:
	bundle exec rspec $$T

unsafe:
	mv .git/hooks/pre-commit .git/hooks/pre-commit-linter

safe:
	mv .git/hooks/pre-commit-linter .git/hooks/pre-commit

clear-eps:
	redis-cli KEYS "end_product_records_development:*" | xargs redis-cli DEL

karma:
	cd client && node_modules/.bin/karma start


.PHONY: test run clean lint check logs db update one-test client-test security build ready
