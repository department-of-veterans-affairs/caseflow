version: 2
jobs:
  build:
    docker:
      # The first image listed is the image that all steps run inside of.
      # This can be modified by steps, or can be built as a separate
      # customized container.
      - image: 008577686731.dkr.ecr.us-gov-west-1.amazonaws.com/circleci:latest
        environment:
          - RAILS_ENV: test
          - NODE_ENV: test
          - MOCHA_FILE: /home/circleci/test-results/mocha/mocha.xml
          - BUNDLE_PATH: vendor/bundle
          - KARMA_JUNIT_OUTPUT_DIR: /home/circleci/karma-test-results/karma
          - KARMA_JUNIT_OUTPUT_FILE: /home/circleci/karma-test-results/karma/karma.xml
          - COVERAGE_DIR: /home/circleci/coverage
          - POSTGRES_HOST: localhost
          - POSTGRES_USER: root
      # This is the circleci provided Postgres container. We can
      # configure it via environment variables.
      - image: circleci/postgres:10.2
        environment:
          - POSTGRES_USER: root
            POSTGRES_DB: caseflow_certification_test

      # This is our homespun VACOLS container. An oracle db with some special sauce.
      - image: 008577686731.dkr.ecr.us-gov-west-1.amazonaws.com/facols:latest

      # This is the circleci provided Redis container.
      - image: circleci/redis:4.0.8
    parallelism: 5
    steps:
      - checkout

      - run:
          name: Setup testfiles directory
          command: mkdir -p ~/project/tmp/testfiles

      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ arch }}-{{ .Branch }}
            - gem-cache
            
      - run: bundle install --path vendor/bundle
      
      - save_cache:
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          name: Restore yarn cache
          key: dot-cache-yarn-{{ checksum "client/yarn.lock" }}

      - run:
          name: yarn install
          command: cd client && yarn install --frozen-lockfile

      - save_cache:
          key: dot-cache-yarn-{{ checksum "client/yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Database setup
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load

      - run:
          name: Wait for FACOLS to be ready
          command: |
            bundle exec rake local:vacols:wait_for_connection

      - run:
          name: Mocha
          command: |
            mkdir -p ~/test-results/mocha
            pushd client
            testfiles=$(circleci tests glob "test/node/**/*.js" | circleci tests split --split-by timings)
            echo $testfiles > ~/project/tmp/testfiles/mocha_testfiles.txt
            node_modules/.bin/mocha --reporter mocha-junit-reporter --recursive --compilers jsx:babel-core/register test/node/setup.js ${testfiles}

      - run:
          name: RSpec
          command: |
            mkdir -p ~/test-results/rspec
            testfiles=$(circleci tests glob "spec/**/*.rb" | circleci tests split --split-by timings)
            echo $testfiles > ~/project/tmp/testfiles/rspec_testfiles.txt
            bundle exec rspec --no-color --format progress --format RspecJunitFormatter -o ~/test-results/rspec/rspec.xml -- ${testfiles}

      - store_test_results:
          name: Store test results as summary
          path: ~/test-results

      - store_artifacts:
          name: Store test results as artifact
          path: ~/test-results

      - store_artifacts:
          name: Store code coverage
          path: ~/coverage

      - store_artifacts:
          name: Store capybara screenshots
          path: ~/project/tmp/capybara

      - store_artifacts:
          name: Store testfile ordering
          path: ~/project/tmp/testfiles

      # Karma JavaScript tests are a deploy step because currently they are not
      # able to be run in parallel.
      - deploy:
          name: Karma
          command: |
            mkdir -p ~/karma-test-results/karma
            pushd client
            node_modules/.bin/karma start --reporters junit

      # Karma gets its own test results directory because otherwise
      # we would upload the test results directory twice, doubling
      # the perceived test count.
      - store_test_results:
          path: ~/karma-test-results

      - deploy:
          name: Danger
          command: |
            bundle exec danger

      - deploy:
          name: Lint
          command: |
            bundle exec rake lint

      - deploy:
          name: Security
          command: |
            bundle exec rake security_caseflow

      - deploy:
          name: Verify code coverage
          command: |
            bundle exec rake ci:circleci_verify_code_coverage
