{
  "ignored_warnings": [
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "140e07405ecb20ab6aa52f2f41aeeef0ed7830d781698d6b752ee3d8b0a9c065",
      "check_name": "SendFile",
      "message": "Model attribute used in file name",
      "file": "app/controllers/hearings/schedule_periods_controller.rb",
      "line": 57,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "send_file(SchedulePeriod.find(params[:schedule_period_id]).spreadsheet_location, :type => \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", :disposition => (\"attachment; filename='#{SchedulePeriod.find(params[:schedule_period_id]).file_name}'\"))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Hearings::SchedulePeriodsController",
        "method": "download"
      },
      "user_input": "SchedulePeriod.find(params[:schedule_period_id]).spreadsheet_location",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Request Forgery",
      "warning_code": 86,
      "fingerprint": "2494532c77b2833cf67088a95d0a7b9b9c66b4b2277cbfa04ea936cd0bb25c24",
      "check_name": "ForgerySetting",
      "message": "`protect_from_forgery` should be configured with `with: :exception`",
      "file": "app/controllers/api/application_controller.rb",
      "line": 4,
      "link": "https://brakemanscanner.org/docs/warning_types/cross-site_request_forgery/",
      "code": "protect_from_forgery(:with => :null_session)",
      "render_path": null,
      "location": {
        "type": "controller",
        "controller": "Api::ApplicationController"
      },
      "user_input": null,
      "confidence": "Medium",
      "note": "Because it's an API, :null_session is the appropriate CSRF protection"
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "2634aabd9d9e0db706787681879ec9f759417bb967a833a0a3bef30c6f42ed0b",
      "check_name": "SendFile",
      "message": "Parameter value used in file name",
      "file": "app/controllers/dispatch/establish_claims_controller.rb",
      "line": 35,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "send_file(task.appeal.decisions[params[:decision_number].to_i].serve, :type => \"application/pdf\", :disposition => \"inline\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Dispatch::EstablishClaimsController",
        "method": "pdf"
      },
      "user_input": "params[:decision_number]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "51625fbaea06d71b4cf619f3192432518766296d1356e21eb5f31f3d517a1c7a",
      "check_name": "SendFile",
      "message": "Model attribute used in file name",
      "file": "app/controllers/document_controller.rb",
      "line": 33,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "send_file(Document.find(params[:id]).serve, :type => \"application/pdf\", :disposition => ((\"inline\" or \"attachment; filename='#{params[:type]}-#{params[:id]}.pdf'\")))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "DocumentController",
        "method": "pdf"
      },
      "user_input": "Document.find(params[:id]).serve",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "62eee76f337de2ef652f6755165cf76c318d170b2a3a13a5da6c92dd7a2f18d7",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/vacols/case.rb",
      "line": 336,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute(\"insert all #{vacols_ids.map do\n sanitize_sql_array([\"into PRIORLOC (LOCDOUT, LOCDTO, LOCSTTO, LOCSTOUT, LOCKEY) values (SYSDATE, SYSDATE, ?, ?, ?)\", location, (RequestStore.store[:current_user].vacols_uniq_id or \"DSUSER\").upcase, vacols_id])\n end.join(\" \")} select 1 from dual\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "VACOLS::Case",
        "method": "VACOLS::Case.batch_update_vacols_location"
      },
      "user_input": "vacols_ids.map do\n sanitize_sql_array([\"into PRIORLOC (LOCDOUT, LOCDTO, LOCSTTO, LOCSTOUT, LOCKEY) values (SYSDATE, SYSDATE, ?, ?, ?)\", location, (RequestStore.store[:current_user].vacols_uniq_id or \"DSUSER\").upcase, vacols_id])\n end.join(\" \")",
      "confidence": "Medium",
      "note": "False positive, all input is sanitized by sanitize_sql_array"
    },
    {
      "warning_type": "Missing Encryption",
      "warning_code": 109,
      "fingerprint": "6a26086cd2400fbbfb831b2f8d7291e320bcc2b36984d2abc359e41b3b63212b",
      "check_name": "ForceSSL",
      "message": "The application does not force use of HTTPS: `config.force_ssl` is not enabled",
      "file": "config/environments/production.rb",
      "line": 1,
      "link": "https://brakemanscanner.org/docs/warning_types/missing_encryption/",
      "code": null,
      "render_path": null,
      "location": null,
      "user_input": null,
      "confidence": "High",
      "note": "We're not sure yet of the implications of turning on SSL"
    }
  ],
  "updated": "2019-05-24 10:04:33 -0400",
  "brakeman_version": "4.5.1"
}
