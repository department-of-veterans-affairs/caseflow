// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HearingTypeConversion Matches snapshot with default props 1`] = `
<withRouter(Connect(HearingTypeConversion))
  appeal={
    Object {
      "appellantAddress": Object {
        "address_line_1": "9999 MISSION ST",
        "address_line_2": "UBER",
        "address_line_3": "APT 2",
        "city": "SAN FRANCISCO",
        "country": "USA",
        "state": "CA",
        "zip": "94103",
      },
      "appellantFullName": "Abellona Valtas",
      "appellantIsNotVeteran": false,
      "appellantRelationship": "Spouse",
      "assignedAttorney": null,
      "assignedJudge": null,
      "assignedToLocation": "Hearing Admin",
      "attorneyCaseRewriteDetails": Object {
        "note_from_attorney": null,
        "untimely_evidence": null,
      },
      "availableHearingLocations": Array [],
      "canEditDocumentId": false,
      "canEditRequestIssues": false,
      "caseReviewId": null,
      "caseType": "Original",
      "caseflowVeteranId": 541,
      "certificationDate": null,
      "closestRegionalOffice": null,
      "closestRegionalOfficeLabel": "Nashville Regional office",
      "completedHearingOnPreviousAppeal": false,
      "decisionDate": null,
      "decisionIssues": Array [],
      "docketName": "Legacy",
      "docketNumber": "200805-541",
      "documentID": null,
      "externalId": "1234456",
      "hearings": Array [],
      "id": "1",
      "isAdvancedOnDocket": false,
      "isLegacyAppeal": true,
      "isPaperCase": false,
      "issueCount": 0,
      "issues": Array [],
      "nodDate": "2020-08-05",
      "overtime": false,
      "powerOfAttorney": Object {
        "representative_address": Object {
          "address_line_1": "9999 MISSION ST",
          "address_line_2": "UBER",
          "address_line_3": "APT 2",
          "city": "SAN FRANCISCO",
          "country": "USA",
          "state": "CA",
          "zip": "94103",
        },
        "representative_email_address": "tom.brady@caseflow.gov",
        "representative_name": "Attorney McAttorneyFace",
        "representative_type": "Attorney",
      },
      "readableHearingRequestType": "Travel",
      "readableOriginalHearingRequestType": "Travel",
      "regionalOffice": null,
      "removed": false,
      "status": "not_distributed",
      "vacateType": null,
      "veteranFileNumber": "123456789",
      "veteranFullName": "Abellona Valtas",
      "veteranInfo": Object {
        "veteran": Object {
          "address": Object {
            "address_line_1": "1234 Main Street",
            "address_line_2": null,
            "address_line_3": null,
            "city": "Orlando",
            "country": "USA",
            "state": "FL",
            "zip": "12345",
          },
          "date_of_birth": "01/10/1935",
          "date_of_death": null,
          "email_address": "Abellona.Valtas@test.com",
          "full_name": "Abellona Valtas",
          "gender": "M",
        },
      },
      "withdrawn": false,
    }
  }
  type="Virtual"
>
  <Connect(HearingTypeConversion)
    appeal={
      Object {
        "appellantAddress": Object {
          "address_line_1": "9999 MISSION ST",
          "address_line_2": "UBER",
          "address_line_3": "APT 2",
          "city": "SAN FRANCISCO",
          "country": "USA",
          "state": "CA",
          "zip": "94103",
        },
        "appellantFullName": "Abellona Valtas",
        "appellantIsNotVeteran": false,
        "appellantRelationship": "Spouse",
        "assignedAttorney": null,
        "assignedJudge": null,
        "assignedToLocation": "Hearing Admin",
        "attorneyCaseRewriteDetails": Object {
          "note_from_attorney": null,
          "untimely_evidence": null,
        },
        "availableHearingLocations": Array [],
        "canEditDocumentId": false,
        "canEditRequestIssues": false,
        "caseReviewId": null,
        "caseType": "Original",
        "caseflowVeteranId": 541,
        "certificationDate": null,
        "closestRegionalOffice": null,
        "closestRegionalOfficeLabel": "Nashville Regional office",
        "completedHearingOnPreviousAppeal": false,
        "decisionDate": null,
        "decisionIssues": Array [],
        "docketName": "Legacy",
        "docketNumber": "200805-541",
        "documentID": null,
        "externalId": "1234456",
        "hearings": Array [],
        "id": "1",
        "isAdvancedOnDocket": false,
        "isLegacyAppeal": true,
        "isPaperCase": false,
        "issueCount": 0,
        "issues": Array [],
        "nodDate": "2020-08-05",
        "overtime": false,
        "powerOfAttorney": Object {
          "representative_address": Object {
            "address_line_1": "9999 MISSION ST",
            "address_line_2": "UBER",
            "address_line_3": "APT 2",
            "city": "SAN FRANCISCO",
            "country": "USA",
            "state": "CA",
            "zip": "94103",
          },
          "representative_email_address": "tom.brady@caseflow.gov",
          "representative_name": "Attorney McAttorneyFace",
          "representative_type": "Attorney",
        },
        "readableHearingRequestType": "Travel",
        "readableOriginalHearingRequestType": "Travel",
        "regionalOffice": null,
        "removed": false,
        "status": "not_distributed",
        "vacateType": null,
        "veteranFileNumber": "123456789",
        "veteranFullName": "Abellona Valtas",
        "veteranInfo": Object {
          "veteran": Object {
            "address": Object {
              "address_line_1": "1234 Main Street",
              "address_line_2": null,
              "address_line_3": null,
              "city": "Orlando",
              "country": "USA",
              "state": "FL",
              "zip": "12345",
            },
            "date_of_birth": "01/10/1935",
            "date_of_death": null,
            "email_address": "Abellona.Valtas@test.com",
            "full_name": "Abellona Valtas",
            "gender": "M",
          },
        },
        "withdrawn": false,
      }
    }
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
    type="Virtual"
  >
    <HearingTypeConversion
      deleteAppeal={[Function]}
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        }
      }
      match={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      showErrorMessage={[Function]}
      showSuccessMessage={[Function]}
      type="Virtual"
    >
      <HearingTypeConversionForm
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        isLoading={false}
        onCancel={[Function]}
        onSubmit={[Function]}
        type="Virtual"
      >
        <AppSegment
          filledBackground={true}
        >
          <section
            className="cf-app-segment cf-app-segment--alt"
            role="main"
          >
            <h1
              className="cf-margin-bottom-0"
            >
              Convert Hearing To Virtual
            </h1>
            <p
              dangerouslySetInnerHTML={
                Object {
                  "__html": "The hearing request will appear in the scheduling queue for the appropriate regional office.",
                }
              }
            />
            <HelperText
              label="Review and update the following information in VBMS if needed. Caseflow won't send email notifications until you schedule the hearing."
            >
              <span
                data-css-tgxxqt=""
              >
                Review and update the following information in VBMS if needed. Caseflow won't send email notifications until you schedule the hearing.
              </span>
            </HelperText>
            <AppellantSection
              appellantTitle="Veteran"
              hearing={
                Object {
                  "appellantFullName": undefined,
                  "appellantIsNotVeteran": undefined,
                  "representative": undefined,
                  "representativeType": undefined,
                  "veteranFullName": undefined,
                }
              }
              readOnly={true}
              showDivider={false}
              showMissingEmailAlert={true}
              showOnlyAppellantName={true}
              type="Virtual"
              virtualHearing={
                Object {
                  "appellantEmail": undefined,
                  "representativeEmail": undefined,
                }
              }
            >
              <VirtualHearingSection
                hide={false}
                label="Veteran"
                showDivider={false}
              >
                <div
                  data-css-1jfbwxw=""
                />
                <h2>
                  Veteran
                </h2>
                <ReadOnly
                  label="Veteran Name"
                  text="undefined undefined"
                >
                  <div
                    data-css-1a5irm0=""
                  >
                    <strong>
                      Veteran Name
                    </strong>
                    <pre>
                      undefined undefined
                    </pre>
                  </div>
                </ReadOnly>
                <div
                  className="usa-grid css-1jfbwxw"
                  id="email-section"
                >
                  <div
                    className="usa-width-one-half css-uplrl8"
                  >
                    <VirtualHearingEmail
                      emailType="appellantEmail"
                      label="Veteran Email"
                      readOnly={true}
                      required={true}
                      type="Virtual"
                    >
                      <ReadOnly
                        label="Veteran Email"
                        text="None"
                      >
                        <div
                          data-css-1a5irm0=""
                        >
                          <strong>
                            Veteran Email
                          </strong>
                          <pre>
                            None
                          </pre>
                        </div>
                      </ReadOnly>
                    </VirtualHearingEmail>
                    <div>
                      <Alert
                        fixed={false}
                        message="If you have the Veteran's email address, enter it in VBMS. The email will be required to send notifications when you schedule the hearing."
                        scrollOnAlert={false}
                        type="info"
                      >
                        <div
                          className="usa-alert usa-alert-info usa-alert-slim"
                          role="alert"
                        >
                          <div
                            className="usa-alert-body"
                          >
                            <h2
                              className="usa-alert-heading"
                            />
                            <div
                              className="usa-alert-text"
                            >
                              If you have the Veteran's email address, enter it in VBMS. The email will be required to send notifications when you schedule the hearing.
                            </div>
                          </div>
                        </div>
                      </Alert>
                    </div>
                  </div>
                </div>
              </VirtualHearingSection>
            </AppellantSection>
            <RepresentativeSection
              appellantTitle="Veteran"
              hearing={
                Object {
                  "appellantFullName": undefined,
                  "appellantIsNotVeteran": undefined,
                  "representative": undefined,
                  "representativeType": undefined,
                  "veteranFullName": undefined,
                }
              }
              readOnly={true}
              showDivider={false}
              showMissingEmailAlert={true}
              showOnlyAppellantName={true}
              type="Virtual"
              virtualHearing={
                Object {
                  "appellantEmail": undefined,
                  "representativeEmail": undefined,
                }
              }
            >
              <VirtualHearingSection
                hide={false}
                label="Power of Attorney"
                showDivider={true}
              >
                <div
                  className="cf-help-divider"
                />
                <h2>
                  Power of Attorney
                </h2>
                <ReadOnly
                  text="The Veteran does not have a representative recorded in VBMS"
                >
                  <div
                    data-css-1a5irm0=""
                  >
                    <pre>
                      The Veteran does not have a representative recorded in VBMS
                    </pre>
                  </div>
                </ReadOnly>
                <div
                  className="usa-grid css-1jfbwxw"
                >
                  <div
                    className="usa-width-one-half css-uplrl8"
                  >
                    <VirtualHearingEmail
                      emailType="representativeEmail"
                      label="POA/Representative Email"
                      readOnly={true}
                      type="Virtual"
                    >
                      <ReadOnly
                        label="POA/Representative Email"
                        text="None"
                      >
                        <div
                          data-css-1a5irm0=""
                        >
                          <strong>
                            POA/Representative Email
                          </strong>
                          <pre>
                            None
                          </pre>
                        </div>
                      </ReadOnly>
                    </VirtualHearingEmail>
                  </div>
                </div>
              </VirtualHearingSection>
            </RepresentativeSection>
          </section>
        </AppSegment>
        <div
          data-css-1jfbwxw=""
        >
          <Button
            classNames={
              Array [
                "cf-submit",
              ]
            }
            linkStyling={true}
            loading={false}
            name="Cancel"
            onClick={[Function]}
            styling={
              Object {
                "data-css-14x0t8z": "",
              }
            }
            type="button"
            willNeverBeLoading={false}
          >
            <span>
              <button
                className="cf-submit cf-btn-link usa-button"
                data-css-14x0t8z=""
                id="button-Cancel"
                onClick={[Function]}
                type="button"
              >
                Cancel
              </button>
            </span>
          </Button>
          <span
            data-css-jf1dde=""
          >
            <Button
              className="usa-button"
              classNames={
                Array [
                  "cf-submit",
                ]
              }
              linkStyling={false}
              loading={false}
              name="Convert Hearing To Virtual"
              onClick={[Function]}
              type="button"
              willNeverBeLoading={false}
            >
              <span>
                <button
                  className="cf-submit usa-button"
                  id="button-Convert-Hearing-To-Virtual"
                  onClick={[Function]}
                  type="button"
                >
                  Convert Hearing To Virtual
                </button>
              </span>
            </Button>
          </span>
        </div>
      </HearingTypeConversionForm>
    </HearingTypeConversion>
  </Connect(HearingTypeConversion)>
</withRouter(Connect(HearingTypeConversion))>
`;
