// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailsForm Matches snapshot with default props when passed in 1`] = `
<DocumentFragment>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Hearing Details
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-1fmltfu=""
      >
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-judgeDropdown"
          >
            <label
              class="question-label"
              for="judge-dropdown"
              id="judge-dropdown-label"
            >
              <strong>
                <span>
                  VLJ
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__single-value css-1uccc91-singleValue"
                    />
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="judge-dropdown-label"
                          aria-owns="judge-dropdown-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="judge-dropdown"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="judgeDropdown"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-hearingCoordinatorDropdown"
          >
            <label
              class="question-label"
              for="hearing-coordinator-dropdown"
              id="hearing-coordinator-dropdown-label"
            >
              <strong>
                <span>
                  Hearing Coordinator
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__single-value css-1uccc91-singleValue"
                    />
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="hearing-coordinator-dropdown-label"
                          aria-owns="hearing-coordinator-dropdown-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="hearing-coordinator-dropdown"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="hearingCoordinatorDropdown"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-hearingRoomDropdown"
          >
            <label
              class="question-label"
              for="hearing-room-dropdown"
              id="hearing-room-dropdown-label"
            >
              <strong>
                <span>
                  Hearing Room
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__single-value css-1uccc91-singleValue"
                    >
                      1 (1W200A)
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="hearing-room-dropdown-label"
                          aria-owns="hearing-room-dropdown-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="hearing-room-dropdown"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="hearingRoomDropdown"
                  type="hidden"
                  value="1"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        data-css-1fmltfu=""
      >
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-hearingType"
            data-css-vzv9iy=""
          >
            <label
              class="question-label"
              for="hearing-type"
              id="hearing-type-label"
            >
              <strong>
                <span>
                  Hearing Type
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__placeholder css-1wa3eu0-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="hearing-type-label"
                          aria-owns="hearing-type-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="hearing-type"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="hearingType"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div>
          <strong>
            Waive 90 Day Evidence Hold
          </strong>
          <div
            class="checkbox-wrapper-evidenceWindowWaived cf-form-checkboxes"
          >
            <div
              class="cf-form-checkbox"
            >
              <input
                aria-label="evidenceWindowWaived"
                id="evidenceWindowWaived"
                name="evidenceWindowWaived"
                type="checkbox"
              />
              <label
                for="evidenceWindowWaived"
              >
                <span
                  class=""
                >
                  Yes, Waive 90 Day Evidence Hold
                </span>
                 
              </label>
            </div>
          </div>
        </div>
        <div />
      </div>
      <div>
        <div
          class="cf-form-textarea"
          data-css-d0z96=""
        >
          <label
            class="question-label"
            for="Notes"
          >
            <strong>
              <span>
                Notes
              </span>
            </strong>
          </label>
          <textarea
            id="Notes"
            maxlength="1000"
            name="Notes"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Email Notifications
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        class="usa-grid"
        id="email-section"
      >
        <div
          class="usa-width-one-third"
          data-css-150oin1=""
        >
          <div
            class=""
          >
            <div
              data-css-19plkw7=""
              data-css-1fmltfu=""
            >
              <LinkContainer
                hearing={
                  Object {
                    "advanceOnDocketMotion": null,
                    "aod": false,
                    "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
                    "appealId": 613,
                    "appellantAddressLine1": "9999 MISSION ST",
                    "appellantCity": "SAN FRANCISCO",
                    "appellantEmailAddress": "tom.brady@caseflow.gov",
                    "appellantFirstName": "Tom",
                    "appellantIsNotVeteran": false,
                    "appellantLastName": "Brady",
                    "appellantRelationship": "Spouse",
                    "appellantState": "CA",
                    "appellantTz": "America/Los_Angeles",
                    "appellantZip": "94103",
                    "availableHearingLocations": Object {},
                    "bvaPoc": null,
                    "caseType": "Original",
                    "centralOfficeTimeString": "04:00",
                    "claimantId": 604,
                    "closestRegionalOffice": null,
                    "conferenceProvider": "pexip",
                    "currentIssueCount": 0,
                    "disposition": null,
                    "dispositionEditable": true,
                    "docketName": "hearing",
                    "docketNumber": "200624-614",
                    "emailEvents": Array [],
                    "evidenceWindowWaived": false,
                    "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                    "hearingDayId": 11,
                    "id": 10,
                    "isVirtual": false,
                    "judge": Object {
                      "createdAt": "2020-06-25T11:00:43.257-04:00",
                      "cssId": "BVAAABSHIRE",
                      "displayName": "BVAAABSHIRE (VACO)",
                      "efolderDocumentsFetchedAt": null,
                      "email": null,
                      "fullName": "Aaron Judge_HearingsAndCases Abshire",
                      "id": 3,
                      "lastLoginAt": null,
                      "roles": Object {},
                      "selectedRegionalOffice": null,
                      "stationId": "101",
                      "status": "active",
                      "statusUpdatedAt": null,
                      "updatedAt": "2020-06-25T11:00:43.257-04:00",
                    },
                    "judgeId": "3",
                    "location": null,
                    "militaryService": "",
                    "notes": null,
                    "paperCase": false,
                    "poaName": "AMERICAN LEGION",
                    "prepped": null,
                    "readableLocation": null,
                    "readableRequestType": "Video",
                    "regionalOfficeKey": "RO17",
                    "regionalOfficeName": "St. Petersburg regional office",
                    "regionalOfficeTimezone": "America/New_York",
                    "representative": "PARALYZED VETERANS OF AMERICA, INC.",
                    "representativeAddress": Object {
                      "addressLine1": "9999 MISSION ST",
                      "city": "SAN FRANCISCO",
                      "state": "CA",
                      "zip": "94103",
                    },
                    "representativeEmailAddress": "tom.brady@caseflow.gov",
                    "representativeName": null,
                    "representativeTz": "America/Los_Angeles",
                    "room": "1",
                    "scheduledFor": "2020-07-06T06:00:00.000-04:00",
                    "scheduledForIsPast": false,
                    "scheduledTime": "2000-01-01T06:00:00.000-05:00",
                    "scheduledTimeString": "06:00",
                    "summary": null,
                    "transcriptRequested": null,
                    "transcription": Object {},
                    "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                    "veteranAge": 85,
                    "veteranEmailAddress": "John.Smith@test.com",
                    "veteranFileNumber": "100000005",
                    "veteranFirstName": "John",
                    "veteranGender": "M",
                    "veteranLastName": "Smith",
                    "virtualHearing": null,
                    "wasVirtual": false,
                    "witness": null,
                    "worksheetIssues": Object {},
                  }
                }
                isVirtual={false}
                label="Guest Link"
                linkText="Join Hearing"
                role="Guest"
                user={
                  Object {
                    "addressCity": "Washington",
                    "addressLine1": "123 Fake St.",
                    "addressState": "DC",
                    "addressZip": "20001",
                    "name": "John Smith",
                  }
                }
                virtualHearing={null}
                wasVirtual={false}
              >
                <div
                  data-css-tx10g=""
                  id="guest-hearings-link"
                >
                  <strong>
                    Guest Link
                    :
                  </strong>
                  <VirtualHearingLinkDetails
                    hearing={
                      Object {
                        "advanceOnDocketMotion": null,
                        "aod": false,
                        "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
                        "appealId": 613,
                        "appellantAddressLine1": "9999 MISSION ST",
                        "appellantCity": "SAN FRANCISCO",
                        "appellantEmailAddress": "tom.brady@caseflow.gov",
                        "appellantFirstName": "Tom",
                        "appellantIsNotVeteran": false,
                        "appellantLastName": "Brady",
                        "appellantRelationship": "Spouse",
                        "appellantState": "CA",
                        "appellantTz": "America/Los_Angeles",
                        "appellantZip": "94103",
                        "availableHearingLocations": Object {},
                        "bvaPoc": null,
                        "caseType": "Original",
                        "centralOfficeTimeString": "04:00",
                        "claimantId": 604,
                        "closestRegionalOffice": null,
                        "conferenceProvider": "pexip",
                        "currentIssueCount": 0,
                        "disposition": null,
                        "dispositionEditable": true,
                        "docketName": "hearing",
                        "docketNumber": "200624-614",
                        "emailEvents": Array [],
                        "evidenceWindowWaived": false,
                        "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                        "hearingDayId": 11,
                        "id": 10,
                        "isVirtual": false,
                        "judge": Object {
                          "createdAt": "2020-06-25T11:00:43.257-04:00",
                          "cssId": "BVAAABSHIRE",
                          "displayName": "BVAAABSHIRE (VACO)",
                          "efolderDocumentsFetchedAt": null,
                          "email": null,
                          "fullName": "Aaron Judge_HearingsAndCases Abshire",
                          "id": 3,
                          "lastLoginAt": null,
                          "roles": Object {},
                          "selectedRegionalOffice": null,
                          "stationId": "101",
                          "status": "active",
                          "statusUpdatedAt": null,
                          "updatedAt": "2020-06-25T11:00:43.257-04:00",
                        },
                        "judgeId": "3",
                        "location": null,
                        "militaryService": "",
                        "notes": null,
                        "paperCase": false,
                        "poaName": "AMERICAN LEGION",
                        "prepped": null,
                        "readableLocation": null,
                        "readableRequestType": "Video",
                        "regionalOfficeKey": "RO17",
                        "regionalOfficeName": "St. Petersburg regional office",
                        "regionalOfficeTimezone": "America/New_York",
                        "representative": "PARALYZED VETERANS OF AMERICA, INC.",
                        "representativeAddress": Object {
                          "addressLine1": "9999 MISSION ST",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip": "94103",
                        },
                        "representativeEmailAddress": "tom.brady@caseflow.gov",
                        "representativeName": null,
                        "representativeTz": "America/Los_Angeles",
                        "room": "1",
                        "scheduledFor": "2020-07-06T06:00:00.000-04:00",
                        "scheduledForIsPast": false,
                        "scheduledTime": "2000-01-01T06:00:00.000-05:00",
                        "scheduledTimeString": "06:00",
                        "summary": null,
                        "transcriptRequested": null,
                        "transcription": Object {},
                        "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                        "veteranAge": 85,
                        "veteranEmailAddress": "John.Smith@test.com",
                        "veteranFileNumber": "100000005",
                        "veteranFirstName": "John",
                        "veteranGender": "M",
                        "veteranLastName": "Smith",
                        "virtualHearing": null,
                        "wasVirtual": false,
                        "witness": null,
                        "worksheetIssues": Object {},
                      }
                    }
                    isVirtual={false}
                    label="Join Hearing"
                    role="Guest"
                    user={
                      Object {
                        "addressCity": "Washington",
                        "addressLine1": "123 Fake St.",
                        "addressState": "DC",
                        "addressZip": "20001",
                        "name": "John Smith",
                      }
                    }
                    virtualHearing={null}
                    wasVirtual={false}
                  >
                    <span>
                      N/A
                    </span>
                    <div
                      data-css-1abghdv=""
                    >
                      <strong>
                        Conference Room:
                      </strong>
                      N/A
                    </div>
                    <div
                      data-css-6aejb2=""
                    >
                      <strong>
                        PIN:
                      </strong>
                      N/A
                    </div>
                    <CopyTextButton
                      ariaLabel="Copy Guest Link"
                      label=""
                      styling={Object {}}
                      text="Copy Guest Link"
                      textToCopy={null}
                    >
                      <Tooltip
                        id="tooltip-Copy Guest Link"
                        position="bottom"
                        text="Click to copy"
                      >
                        <CopyToClipboard
                          aria-describedby="tooltip-Copy Guest Link"
                          aria-label=""
                          data-event="focus mouseenter"
                          data-event-off="mouseleave keydown"
                          data-for="tooltip-Copy Guest Link"
                          data-tip={true}
                          tabIndex={0}
                          text="Copy Guest Link"
                        >
                          <button
                            aria-describedby="tooltip-Copy Guest Link"
                            aria-label=""
                            className="cf-apppeal-id"
                            data-css-p6dv0b=""
                            data-event="focus mouseenter"
                            data-event-off="mouseleave keydown"
                            data-for="tooltip-Copy Guest Link"
                            data-tip={true}
                            disabled={true}
                            onClick={[Function]}
                            tabIndex={0}
                            type="submit"
                          >
                            Copy Guest Link
                             
                            <ClipboardIcon
                              className=""
                              color="#5b616b"
                              size={17}
                            >
                              <svg
                                className=""
                                height={17}
                                viewBox="0 0 21 21"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M13.346 2.578h-2.664v-1.29C10.682.585 10.08 0 9.35 0H6.66c-.728 0-1.33.584-1.33 1.29v1.288H2.663v2.577h10.682V2.578zm-4.02 0H6.66v-1.29h2.665v1.29zm6.685 3.89V3.234a.665.665 0 0 0-.678-.656H14v1.29h.68v2.576H6.66v9.046H1.333V3.867h.68v-1.29H.678a.665.665 0 0 0-.68.657v12.913c0 .365.302.656.68.656h6.006v3.867h9.35l3.996-3.867V6.468h-4.02zm0 12.378v-2.043h2.112l-2.11 2.043zm2.665-3.356H14.68v3.867H7.992v-11.6h10.682v7.733z"
                                  fill="#5b616b"
                                  fillRule="evenodd"
                                />
                              </svg>
                            </ClipboardIcon>
                          </button>
                        </CopyToClipboard>
                        <span
                          data-css-1qgqh7a=""
                        >
                          <ReactTooltip
                            className="cf-tooltip"
                            clickable={false}
                            effect="solid"
                            id="tooltip-Copy Guest Link"
                            insecure={true}
                            multiline={true}
                            offset={Object {}}
                            place="bottom"
                            resizeHide={true}
                            role="tooltip"
                            wrapper="div"
                          >
                            <div
                              className="__react_component_tooltip t00000000-0000-0000-0000-000000000000 place-bottom type-dark"
                              data-id="tooltip"
                              id="tooltip-Copy Guest Link"
                              role="tooltip"
                            >
                              <style
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "
  	.t00000000-0000-0000-0000-000000000000 {
	    color: #fff;
	    background: #222;
	    border: 1px solid transparent;
  	}

  	.t00000000-0000-0000-0000-000000000000.place-top {
        margin-top: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::before {
        border-top: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        bottom: -6px;
        left: 50%;
        margin-left: -8px;
        border-top-color: #222;
        border-top-style: solid;
        border-top-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-bottom {
        margin-top: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::before {
        border-bottom: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        top: -6px;
        left: 50%;
        margin-left: -8px;
        border-bottom-color: #222;
        border-bottom-style: solid;
        border-bottom-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-left {
        margin-left: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::before {
        border-left: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        right: -6px;
        top: 50%;
        margin-top: -4px;
        border-left-color: #222;
        border-left-style: solid;
        border-left-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-right {
        margin-left: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::before {
        border-right: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        left: -6px;
        top: 50%;
        margin-top: -4px;
        border-right-color: #222;
        border-right-style: solid;
        border-right-width: 6px;
    }
  ",
                                  }
                                }
                              />
                              Click to copy
                            </div>
                          </ReactTooltip>
                        </span>
                      </Tooltip>
                    </CopyTextButton>
                  </VirtualHearingLinkDetails>
                </div>
              </LinkContainer>
            </div>
          </HearingLinks>
        </div>
      </div>
    </ContentSection>
  </VirtualHearingFields>
  <EmailNotificationFields
    header="Email Notifications"
    hearing={
      Object {
        "advanceOnDocketMotion": null,
        "aod": false,
        "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
        "appealId": 613,
        "appellantAddressLine1": "9999 MISSION ST",
        "appellantCity": "SAN FRANCISCO",
        "appellantEmailAddress": "tom.brady@caseflow.gov",
        "appellantFirstName": "Tom",
        "appellantIsNotVeteran": false,
        "appellantLastName": "Brady",
        "appellantRelationship": "Spouse",
        "appellantState": "CA",
        "appellantTz": "America/Los_Angeles",
        "appellantZip": "94103",
        "availableHearingLocations": Object {},
        "bvaPoc": null,
        "caseType": "Original",
        "centralOfficeTimeString": "04:00",
        "claimantId": 604,
        "closestRegionalOffice": null,
        "conferenceProvider": "pexip",
        "currentIssueCount": 0,
        "disposition": null,
        "dispositionEditable": true,
        "docketName": "hearing",
        "docketNumber": "200624-614",
        "emailEvents": Array [],
        "evidenceWindowWaived": false,
        "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
        "hearingDayId": 11,
        "id": 10,
        "isVirtual": false,
        "judge": Object {
          "createdAt": "2020-06-25T11:00:43.257-04:00",
          "cssId": "BVAAABSHIRE",
          "displayName": "BVAAABSHIRE (VACO)",
          "efolderDocumentsFetchedAt": null,
          "email": null,
          "fullName": "Aaron Judge_HearingsAndCases Abshire",
          "id": 3,
          "lastLoginAt": null,
          "roles": Object {},
          "selectedRegionalOffice": null,
          "stationId": "101",
          "status": "active",
          "statusUpdatedAt": null,
          "updatedAt": "2020-06-25T11:00:43.257-04:00",
        },
        "judgeId": "3",
        "location": null,
        "militaryService": "",
        "notes": null,
        "paperCase": false,
        "poaName": "AMERICAN LEGION",
        "prepped": null,
        "readableLocation": null,
        "readableRequestType": "Video",
        "regionalOfficeKey": "RO17",
        "regionalOfficeName": "St. Petersburg regional office",
        "regionalOfficeTimezone": "America/New_York",
        "representative": "PARALYZED VETERANS OF AMERICA, INC.",
        "representativeAddress": Object {
          "addressLine1": "9999 MISSION ST",
          "city": "SAN FRANCISCO",
          "state": "CA",
          "zip": "94103",
        },
        "representativeEmailAddress": "tom.brady@caseflow.gov",
        "representativeName": null,
        "representativeTz": "America/Los_Angeles",
        "room": "1",
        "scheduledFor": "2020-07-06T06:00:00.000-04:00",
        "scheduledForIsPast": false,
        "scheduledTime": "2000-01-01T06:00:00.000-05:00",
        "scheduledTimeString": "06:00",
        "summary": null,
        "transcriptRequested": null,
        "transcription": Object {},
        "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
        "veteranAge": 85,
        "veteranEmailAddress": "John.Smith@test.com",
        "veteranFileNumber": "100000005",
        "veteranFirstName": "John",
        "veteranGender": "M",
        "veteranLastName": "Smith",
        "virtualHearing": null,
        "wasVirtual": false,
        "witness": null,
        "worksheetIssues": Object {},
      }
    }
    requestType="Video"
    roTimezone="America/New_York"
    time="06:00"
  >
    <h2
      data-css-3rhuy2=""
    >
      Hearing Links
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-tx10g=""
      >
        <strong>
          Pexip Hearing
        </strong>
      </div>
      <div
        data-css-19plkw7=""
        data-css-1fmltfu=""
        data-testid="link-containers"
      >
        <div
          data-css-tx10g=""
          id="guest-hearings-link"
        >
          <strong>
            Guest Link:
          </strong>
          <span>
            N/A
          </span>
          <div
            data-css-1abghdv=""
          >
            <strong>
              Conference Room:
            </strong>
            N/A
          </div>
          <div
            data-css-6aejb2=""
          >
            <strong>
              PIN:
            </strong>
            N/A
          </div>
          <button
            aria-describedby="tooltip-Copy Guest Link"
            aria-label=""
            class="cf-apppeal-id"
            currentitem="false"
            data-css-p6dv0b=""
            data-event="focus mouseenter"
            data-event-off="mouseleave keydown"
            data-for="tooltip-Copy Guest Link"
            data-tip="true"
            disabled=""
            tabindex="0"
            type="submit"
          >
            Copy Guest Link 
            <svg
              class=""
              height="17"
              viewBox="0 0 21 21"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13.346 2.578h-2.664v-1.29C10.682.585 10.08 0 9.35 0H6.66c-.728 0-1.33.584-1.33 1.29v1.288H2.663v2.577h10.682V2.578zm-4.02 0H6.66v-1.29h2.665v1.29zm6.685 3.89V3.234a.665.665 0 0 0-.678-.656H14v1.29h.68v2.576H6.66v9.046H1.333V3.867h.68v-1.29H.678a.665.665 0 0 0-.68.657v12.913c0 .365.302.656.68.656h6.006v3.867h9.35l3.996-3.867V6.468h-4.02zm0 12.378v-2.043h2.112l-2.11 2.043zm2.665-3.356H14.68v3.867H7.992v-11.6h10.682v7.733z"
                fill="#5b616b"
                fill-rule="evenodd"
              />
            </svg>
          </button>
          <span
            data-css-1qgqh7a=""
            data-testid="tooltip-testid"
          >
            <div
              class="__react_component_tooltip t00000000-0000-0000-0000-000000000000 place-bottom type-dark"
              data-id="tooltip"
              id="tooltip-Copy Guest Link"
              role="tooltip"
            >
              <style>

  	.t00000000-0000-0000-0000-000000000000 {
	    color: #fff;
	    background: #222;
	    border: 1px solid transparent;
  	}

  	.t00000000-0000-0000-0000-000000000000.place-top {
        margin-top: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::before {
        border-top: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        bottom: -6px;
        left: 50%;
        margin-left: -8px;
        border-top-color: #222;
        border-top-style: solid;
        border-top-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-bottom {
        margin-top: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::before {
        border-bottom: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        top: -6px;
        left: 50%;
        margin-left: -8px;
        border-bottom-color: #222;
        border-bottom-style: solid;
        border-bottom-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-left {
        margin-left: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::before {
        border-left: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        right: -6px;
        top: 50%;
        margin-top: -4px;
        border-left-color: #222;
        border-left-style: solid;
        border-left-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-right {
        margin-left: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::before {
        border-right: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        left: -6px;
        top: 50%;
        margin-top: -4px;
        border-right-color: #222;
        border-right-style: solid;
        border-right-width: 6px;
    }

              </style>
              Click to copy
            </div>
          </span>
        </div>
      </div>
    </div>
  </div>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Email Notifications
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        class="usa-grid"
        id="email-section"
      >
        <div
          class="usa-width-one-third"
          data-css-150oin1=""
        >
          <div
            class=""
          >
            <div
              class="cf-form-dropdown dropdown-appellantTz"
              data-css-1dzedb9=""
            >
              <label
                class="question-label"
                for="appellant-tz"
                id="appellant-tz-label"
              >
                <strong>
                  <span>
                    Veteran Timezone
                    <span
                      class="cf-optional"
                    >
                      Optional
                    </span>
                  </span>
                </strong>
              </label>
              <div
                class="cf-select"
              >
                <div
                  class=" css-2b097c-container"
                >
                  <div
                    class="cf-select__control css-yk16xz-control"
                  >
                    <div
                      class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                    >
                      <div
                        class="cf-select__single-value css-1uccc91-singleValue"
                      >
                        Pacific Time (US & Canada) (3:00 AM)
                      </div>
                      <div
                        class="css-81nyic-Input"
                      >
                        <div
                          class="cf-select__input"
                          style="display: inline-block;"
                        >
                          <input
                            aria-autocomplete="list"
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-labelledby="appellant-tz-label"
                            aria-owns="appellant-tz-listbox"
                            autocapitalize="none"
                            autocomplete="off"
                            autocorrect="off"
                            id="appellant-tz"
                            role="combobox"
                            spellcheck="false"
                            style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                            tabindex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                      >
                        <svg
                          aria-hidden="true"
                          class="css-6q0nyr-Svg"
                          focusable="false"
                          height="20"
                          viewBox="0 0 20 20"
                          width="20"
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <input
                    name="appellantTz"
                    type="hidden"
                    value="America/Los_Angeles"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="helper-text"
          >
            The hearing time in email notifications is calculated based on the timezone.
          </div>
        </div>
        <div
          class="usa-width-one-third"
        >
          <div
            class="cf-form-textinput cf-inline-field   "
          >
            <label
              for="Veteran Email"
            >
              <strong>
                <span>
                  Veteran Email
                  <span
                    class="cf-optional"
                  >
                    Optional
                  </span>
                </span>
              </strong>
            </label>
            <div
              class="input-container"
            >
              <input
                aria-readonly="false"
                class="cf-form-textinput cf-inline-field"
                id="Veteran Email"
                name="Veteran Email"
                type="text"
                value="tom.brady@caseflow.gov"
              />
            </div>
          </div>
          <div
            class="helper-text"
          >
            This email address will be used to send notifications for this hearing only.
          </div>
        </div>
      </div>
      <div
        class="cf-help-divider"
      />
      <div
        class="usa-grid css-1jfbwxw"
      >
        <div
          class="usa-width-one-third"
          data-css-150oin1=""
        >
          <div
            class=""
          >
            <div
              class="cf-form-dropdown dropdown-representativeTz"
              data-css-1dzedb9=""
            >
              <label
                class="question-label"
                for="representative-tz"
                id="representative-tz-label"
              >
                <strong>
                  <span>
                    POA/Representative Timezone
                    <span
                      class="cf-required"
                    >
                      Required
                    </span>
                  </span>
                </strong>
              </label>
              <div
                class="cf-select"
              >
                <div
                  class=" css-2b097c-container"
                >
                  <div
                    class="cf-select__control css-yk16xz-control"
                  >
                    <div
                      class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                    >
                      <div
                        class="cf-select__single-value css-1uccc91-singleValue"
                      >
                        Pacific Time (US & Canada) (3:00 AM)
                      </div>
                      <div
                        class="css-81nyic-Input"
                      >
                        <div
                          class="cf-select__input"
                          style="display: inline-block;"
                        >
                          <input
                            aria-autocomplete="list"
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-labelledby="representative-tz-label"
                            aria-owns="representative-tz-listbox"
                            autocapitalize="none"
                            autocomplete="off"
                            autocorrect="off"
                            id="representative-tz"
                            role="combobox"
                            spellcheck="false"
                            style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                            tabindex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                      >
                        <svg
                          aria-hidden="true"
                          class="css-6q0nyr-Svg"
                          focusable="false"
                          height="20"
                          viewBox="0 0 20 20"
                          width="20"
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <input
                    name="representativeTz"
                    type="hidden"
                    value="America/Los_Angeles"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="helper-text"
          >
            The hearing time in email notifications is calculated based on the timezone.
          </div>
        </div>
        <div
          class="usa-width-one-third"
        >
          <div
            class="cf-form-textinput cf-inline-field   "
          >
            <label
              for="POA/Representative Email"
            >
              <strong>
                <span>
                  POA/Representative Email
                  <span
                    class="cf-optional"
                  >
                    Optional
                  </span>
                </span>
              </strong>
            </label>
            <div
              class="input-container"
            >
              <input
                aria-readonly="false"
                class="cf-form-textinput cf-inline-field"
                id="POA/Representative Email"
                name="POA/Representative Email"
                type="text"
                value="tom.brady@caseflow.gov"
              />
            </div>
          </div>
          <div
            class="helper-text"
          >
            This email address will be used to send notifications for this hearing only.
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Transcription Details
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-1fmltfu=""
        data-testid="transcription-details-inputs"
      >
        <div
          class="cf-form-textinput   "
        >
          <label
            for="taskNumber"
          >
            <strong>
              <span>
                Task #
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="taskNumber"
              name="taskNumber"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-transcriber"
          >
            <label
              class="question-label"
              for="transcriber"
              id="transcriber-label"
            >
              <strong>
                <span>
                  Transcriber
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__placeholder css-1wa3eu0-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="transcriber-label"
                          aria-owns="transcriber-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="transcriber"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="transcriber"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div />
      </div>
      <div
        data-css-1fmltfu=""
        data-testid="transcription-details-date-inputs"
      >
        <div
          class="cf-form-textinput   "
        >
          <label
            for="sentToTranscriberDate"
          >
            <strong>
              <span>
                Sent to Transcriber
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="sentToTranscriberDate"
              max="9999-12-31"
              name="sentToTranscriberDate"
              placeholder="mm/dd/yyyy"
              type="date"
              value=""
            />
          </div>
        </div>
        <div
          class="cf-form-textinput   "
        >
          <label
            for="expectedReturnDate"
          >
            <strong>
              <span>
                Expected Return Date
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="expectedReturnDate"
              max="9999-12-31"
              name="expectedReturnDate"
              placeholder="mm/dd/yyyy"
              type="date"
              value=""
            />
          </div>
        </div>
        <div
          class="cf-form-textinput   "
        >
          <label
            for="uploadedToVbmsDate"
          >
            <strong>
              <span>
                Transcript Uploaded to VBMS
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="uploadedToVbmsDate"
              max="9999-12-31"
              name="uploadedToVbmsDate"
              placeholder="mm/dd/yyyy"
              type="date"
              value=""
            />
          </div>
        </div>
      </div>
      <div
        class="cf-help-divider"
      />
      <h3>
        Transcription Problem
      </h3>
      <div
        data-css-1fmltfu=""
        data-testid="transcription-problem-inputs"
      >
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-problemType"
          >
            <label
              class="question-label"
              for="problem-type"
              id="problem-type-label"
            >
              <strong>
                <span>
                  Transcription Problem Type
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__placeholder css-1wa3eu0-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="problem-type-label"
                          aria-owns="problem-type-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="problem-type"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="problemType"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class="cf-form-textinput   "
        >
          <label
            for="problemNoticeSentDate"
          >
            <strong>
              <span>
                Problem Notice Sent
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              aria-readonly="true"
              class="cf-form-textinput"
              id="problemNoticeSentDate"
              max="9999-12-31"
              name="problemNoticeSentDate"
              placeholder="mm/dd/yyyy"
              readonly=""
              type="date"
              value=""
            />
          </div>
        </div>
        <fieldset
          class="usa-fieldset-inputs cf-form-radio "
        >
          <legend
            class=""
          >
            <strong>
              <span>
                Requested Remedy 
              </span>
            </strong>
          </legend>
          <div
            class="cf-form-radio-options"
          >
            <div
              class="cf-form-radio-option"
            >
              <input
                disabled=""
                id="requestedRemedy_Proceed without transcript"
                name="requestedRemedy"
                type="radio"
                value="Proceed without transcript"
              />
              <label
                class="disabled"
                for="requestedRemedy_Proceed without transcript"
              >
                Proceed without transcript
              </label>
            </div>
            <div
              class="cf-form-radio-option"
            >
              <input
                disabled=""
                id="requestedRemedy_Proceed with partial transcript"
                name="requestedRemedy"
                type="radio"
                value="Proceed with partial transcript"
              />
              <label
                class="disabled"
                for="requestedRemedy_Proceed with partial transcript"
              >
                Proceed with partial transcript
              </label>
            </div>
            <div
              class="cf-form-radio-option"
            >
              <input
                disabled=""
                id="requestedRemedy_New hearing"
                name="requestedRemedy"
                type="radio"
                value="New hearing"
              />
              <label
                class="disabled"
                for="requestedRemedy_New hearing"
              >
                New hearing
              </label>
            </div>
            <div
              class="cf-form-radio-option"
            >
              <input
                checked=""
                disabled=""
                id="requestedRemedy_"
                name="requestedRemedy"
                type="radio"
                value=""
              />
              <label
                class="disabled"
                for="requestedRemedy_"
              >
                None
              </label>
            </div>
          </div>
        </fieldset>
      </div>
      <div
        class="cf-help-divider"
      />
      <h3>
        Transcription Request
      </h3>
      <div
        data-css-1fmltfu=""
        data-testid="transcription-request-inputs"
      >
        <div>
          <strong>
            Copy Requested by Appellant/Rep
          </strong>
          <div
            class="checkbox-wrapper-copyRequested cf-form-checkboxes"
          >
            <div
              class="cf-form-checkbox"
            >
              <input
                aria-label="copyRequested"
                id="copyRequested"
                name="copyRequested"
                type="checkbox"
              />
              <label
                for="copyRequested"
              >
                <span
                  class=""
                >
                  Yes, Transcript Requested
                </span>
                 
              </label>
            </div>
          </div>
        </div>
        <div
          class="cf-form-textinput   "
        >
          <label
            for="copySentDate"
          >
            <strong>
              <span>
                Copy Sent to Appellant/Rep
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="copySentDate"
              max="9999-12-31"
              name="copySentDate"
              placeholder="mm/dd/yyyy"
              type="date"
              value=""
            />
          </div>
        </div>
        <div />
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`DetailsForm Matches snapshot with for AMA hearing 1`] = `
<DetailsForm
  hearing={
    Object {
      "advanceOnDocketMotion": null,
      "aod": false,
      "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
      "appealId": 613,
      "appellantAddressLine1": "9999 MISSION ST",
      "appellantCity": "SAN FRANCISCO",
      "appellantEmailAddress": "tom.brady@caseflow.gov",
      "appellantFirstName": "Tom",
      "appellantIsNotVeteran": false,
      "appellantLastName": "Brady",
      "appellantRelationship": "Spouse",
      "appellantState": "CA",
      "appellantTz": "America/Los_Angeles",
      "appellantZip": "94103",
      "availableHearingLocations": Object {},
      "bvaPoc": null,
      "caseType": "Original",
      "centralOfficeTimeString": "04:00",
      "claimantId": 604,
      "closestRegionalOffice": null,
      "conferenceProvider": "pexip",
      "currentIssueCount": 0,
      "disposition": null,
      "dispositionEditable": true,
      "docketName": "hearing",
      "docketNumber": "200624-614",
      "emailEvents": Array [],
      "evidenceWindowWaived": false,
      "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
      "hearingDayId": 11,
      "id": 10,
      "isVirtual": false,
      "judge": Object {
        "createdAt": "2020-06-25T11:00:43.257-04:00",
        "cssId": "BVAAABSHIRE",
        "displayName": "BVAAABSHIRE (VACO)",
        "efolderDocumentsFetchedAt": null,
        "email": null,
        "fullName": "Aaron Judge_HearingsAndCases Abshire",
        "id": 3,
        "lastLoginAt": null,
        "roles": Object {},
        "selectedRegionalOffice": null,
        "stationId": "101",
        "status": "active",
        "statusUpdatedAt": null,
        "updatedAt": "2020-06-25T11:00:43.257-04:00",
      },
      "judgeId": "3",
      "location": null,
      "militaryService": "",
      "notes": null,
      "paperCase": false,
      "poaName": "AMERICAN LEGION",
      "prepped": null,
      "readableLocation": null,
      "readableRequestType": "Video",
      "regionalOfficeKey": "RO17",
      "regionalOfficeName": "St. Petersburg regional office",
      "regionalOfficeTimezone": "America/New_York",
      "representative": "PARALYZED VETERANS OF AMERICA, INC.",
      "representativeAddress": Object {
        "addressLine1": "9999 MISSION ST",
        "city": "SAN FRANCISCO",
        "state": "CA",
        "zip": "94103",
      },
      "representativeEmailAddress": "tom.brady@caseflow.gov",
      "representativeName": null,
      "representativeTz": "America/Los_Angeles",
      "room": "1",
      "scheduledFor": "2020-07-06T06:00:00.000-04:00",
      "scheduledForIsPast": false,
      "scheduledTime": "2000-01-01T06:00:00.000-05:00",
      "scheduledTimeString": "06:00",
      "summary": null,
      "transcriptRequested": null,
      "transcription": Object {},
      "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
      "veteranAge": 85,
      "veteranEmailAddress": "John.Smith@test.com",
      "veteranFileNumber": "100000005",
      "veteranFirstName": "John",
      "veteranGender": "M",
      "veteranLastName": "Smith",
      "virtualHearing": null,
      "wasVirtual": false,
      "witness": null,
      "worksheetIssues": Object {},
    }
  }
  isLegacy={false}
>
  <ContentSection
    header="Hearing Details"
  >
    <h2
      data-css-3rhuy2=""
    >
      Hearing Details
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-1fmltfu=""
      >
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-judgeDropdown"
          >
            <label
              class="question-label"
              for="judge-dropdown"
              id="judge-dropdown-label"
            >
              <strong>
                <span>
                  VLJ
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__single-value css-1uccc91-singleValue"
                    />
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="judge-dropdown-label"
                          aria-owns="judge-dropdown-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="judge-dropdown"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="judgeDropdown"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-hearingCoordinatorDropdown"
          >
            <label
              class="question-label"
              for="hearing-coordinator-dropdown"
              id="hearing-coordinator-dropdown-label"
            >
              <strong>
                <span>
                  Hearing Coordinator
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__single-value css-1uccc91-singleValue"
                    />
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="hearing-coordinator-dropdown-label"
                          aria-owns="hearing-coordinator-dropdown-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="hearing-coordinator-dropdown"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="hearingCoordinatorDropdown"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-hearingRoomDropdown"
          >
            <label
              class="question-label"
              for="hearing-room-dropdown"
              id="hearing-room-dropdown-label"
            >
              <strong>
                <span>
                  Hearing Room
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__single-value css-1uccc91-singleValue"
                    >
                      1 (1W200A)
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="hearing-room-dropdown-label"
                          aria-owns="hearing-room-dropdown-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="hearing-room-dropdown"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="hearingRoomDropdown"
                  type="hidden"
                  value="1"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        data-css-1fmltfu=""
      >
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-hearingType"
            data-css-vzv9iy=""
          >
            <label
              class="question-label"
              for="hearing-type"
              id="hearing-type-label"
            >
              <strong>
                <span>
                  Hearing Type
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__placeholder css-1wa3eu0-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="hearing-type-label"
                          aria-owns="hearing-type-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="hearing-type"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="hearingType"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div>
          <strong>
            Waive 90 Day Evidence Hold
          </strong>
          <div
            class="checkbox-wrapper-evidenceWindowWaived cf-form-checkboxes"
          >
            <div
              class="cf-form-checkbox"
            >
              <input
                aria-label="evidenceWindowWaived"
                id="evidenceWindowWaived"
                name="evidenceWindowWaived"
                type="checkbox"
              />
              <label
                for="evidenceWindowWaived"
              >
                <span
                  class=""
                >
                  Yes, Waive 90 Day Evidence Hold
                </span>
                 
              </label>
            </div>
          </div>
        </div>
        <div />
      </div>
      <div>
        <div
          class="cf-form-textarea"
          data-css-d0z96=""
        >
          <label
            class="question-label"
            for="Notes"
          >
            <strong>
              <span>
                Notes
              </span>
            </strong>
          </label>
          <textarea
            id="Notes"
            maxlength="1000"
            name="Notes"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Transcription Details
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-1fmltfu=""
      >
        <div
          class="cf-form-textinput   "
        >
          <label
            for="taskNumber"
          >
            <strong>
              <span>
                Task #
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <div
              data-css-19plkw7=""
              data-css-1fmltfu=""
            >
              <LinkContainer
                hearing={
                  Object {
                    "advanceOnDocketMotion": null,
                    "aod": false,
                    "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
                    "appealId": 613,
                    "appellantAddressLine1": "9999 MISSION ST",
                    "appellantCity": "SAN FRANCISCO",
                    "appellantEmailAddress": "tom.brady@caseflow.gov",
                    "appellantFirstName": "Tom",
                    "appellantIsNotVeteran": false,
                    "appellantLastName": "Brady",
                    "appellantRelationship": "Spouse",
                    "appellantState": "CA",
                    "appellantTz": "America/Los_Angeles",
                    "appellantZip": "94103",
                    "availableHearingLocations": Object {},
                    "bvaPoc": null,
                    "caseType": "Original",
                    "centralOfficeTimeString": "04:00",
                    "claimantId": 604,
                    "closestRegionalOffice": null,
                    "conferenceProvider": "pexip",
                    "currentIssueCount": 0,
                    "disposition": null,
                    "dispositionEditable": true,
                    "docketName": "hearing",
                    "docketNumber": "200624-614",
                    "emailEvents": Array [],
                    "evidenceWindowWaived": false,
                    "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                    "hearingDayId": 11,
                    "id": 10,
                    "isVirtual": false,
                    "judge": Object {
                      "createdAt": "2020-06-25T11:00:43.257-04:00",
                      "cssId": "BVAAABSHIRE",
                      "displayName": "BVAAABSHIRE (VACO)",
                      "efolderDocumentsFetchedAt": null,
                      "email": null,
                      "fullName": "Aaron Judge_HearingsAndCases Abshire",
                      "id": 3,
                      "lastLoginAt": null,
                      "roles": Object {},
                      "selectedRegionalOffice": null,
                      "stationId": "101",
                      "status": "active",
                      "statusUpdatedAt": null,
                      "updatedAt": "2020-06-25T11:00:43.257-04:00",
                    },
                    "judgeId": "3",
                    "location": null,
                    "militaryService": "",
                    "notes": null,
                    "paperCase": false,
                    "poaName": "AMERICAN LEGION",
                    "prepped": null,
                    "readableLocation": null,
                    "readableRequestType": "Video",
                    "regionalOfficeKey": "RO17",
                    "regionalOfficeName": "St. Petersburg regional office",
                    "regionalOfficeTimezone": "America/New_York",
                    "representative": "PARALYZED VETERANS OF AMERICA, INC.",
                    "representativeAddress": Object {
                      "addressLine1": "9999 MISSION ST",
                      "city": "SAN FRANCISCO",
                      "state": "CA",
                      "zip": "94103",
                    },
                    "representativeEmailAddress": "tom.brady@caseflow.gov",
                    "representativeName": null,
                    "representativeTz": "America/Los_Angeles",
                    "room": "1",
                    "scheduledFor": "2020-07-06T06:00:00.000-04:00",
                    "scheduledForIsPast": false,
                    "scheduledTime": "2000-01-01T06:00:00.000-05:00",
                    "scheduledTimeString": "06:00",
                    "summary": null,
                    "transcriptRequested": null,
                    "transcription": Object {},
                    "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                    "veteranAge": 85,
                    "veteranEmailAddress": "John.Smith@test.com",
                    "veteranFileNumber": "100000005",
                    "veteranFirstName": "John",
                    "veteranGender": "M",
                    "veteranLastName": "Smith",
                    "virtualHearing": null,
                    "wasVirtual": false,
                    "witness": null,
                    "worksheetIssues": Object {},
                  }
                }
                isVirtual={false}
                label="Guest Link"
                linkText="Join Hearing"
                role="Guest"
                user={
                  Object {
                    "addressCity": "Washington",
                    "addressLine1": "123 Fake St.",
                    "addressState": "DC",
                    "addressZip": "20001",
                    "name": "John Smith",
                  }
                }
                virtualHearing={null}
                wasVirtual={false}
              >
                <div
                  data-css-tx10g=""
                  id="guest-hearings-link"
                >
                  <strong>
                    Guest Link
                    :
                  </strong>
                  <VirtualHearingLinkDetails
                    hearing={
                      Object {
                        "advanceOnDocketMotion": null,
                        "aod": false,
                        "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
                        "appealId": 613,
                        "appellantAddressLine1": "9999 MISSION ST",
                        "appellantCity": "SAN FRANCISCO",
                        "appellantEmailAddress": "tom.brady@caseflow.gov",
                        "appellantFirstName": "Tom",
                        "appellantIsNotVeteran": false,
                        "appellantLastName": "Brady",
                        "appellantRelationship": "Spouse",
                        "appellantState": "CA",
                        "appellantTz": "America/Los_Angeles",
                        "appellantZip": "94103",
                        "availableHearingLocations": Object {},
                        "bvaPoc": null,
                        "caseType": "Original",
                        "centralOfficeTimeString": "04:00",
                        "claimantId": 604,
                        "closestRegionalOffice": null,
                        "conferenceProvider": "pexip",
                        "currentIssueCount": 0,
                        "disposition": null,
                        "dispositionEditable": true,
                        "docketName": "hearing",
                        "docketNumber": "200624-614",
                        "emailEvents": Array [],
                        "evidenceWindowWaived": false,
                        "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                        "hearingDayId": 11,
                        "id": 10,
                        "isVirtual": false,
                        "judge": Object {
                          "createdAt": "2020-06-25T11:00:43.257-04:00",
                          "cssId": "BVAAABSHIRE",
                          "displayName": "BVAAABSHIRE (VACO)",
                          "efolderDocumentsFetchedAt": null,
                          "email": null,
                          "fullName": "Aaron Judge_HearingsAndCases Abshire",
                          "id": 3,
                          "lastLoginAt": null,
                          "roles": Object {},
                          "selectedRegionalOffice": null,
                          "stationId": "101",
                          "status": "active",
                          "statusUpdatedAt": null,
                          "updatedAt": "2020-06-25T11:00:43.257-04:00",
                        },
                        "judgeId": "3",
                        "location": null,
                        "militaryService": "",
                        "notes": null,
                        "paperCase": false,
                        "poaName": "AMERICAN LEGION",
                        "prepped": null,
                        "readableLocation": null,
                        "readableRequestType": "Video",
                        "regionalOfficeKey": "RO17",
                        "regionalOfficeName": "St. Petersburg regional office",
                        "regionalOfficeTimezone": "America/New_York",
                        "representative": "PARALYZED VETERANS OF AMERICA, INC.",
                        "representativeAddress": Object {
                          "addressLine1": "9999 MISSION ST",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip": "94103",
                        },
                        "representativeEmailAddress": "tom.brady@caseflow.gov",
                        "representativeName": null,
                        "representativeTz": "America/Los_Angeles",
                        "room": "1",
                        "scheduledFor": "2020-07-06T06:00:00.000-04:00",
                        "scheduledForIsPast": false,
                        "scheduledTime": "2000-01-01T06:00:00.000-05:00",
                        "scheduledTimeString": "06:00",
                        "summary": null,
                        "transcriptRequested": null,
                        "transcription": Object {},
                        "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                        "veteranAge": 85,
                        "veteranEmailAddress": "John.Smith@test.com",
                        "veteranFileNumber": "100000005",
                        "veteranFirstName": "John",
                        "veteranGender": "M",
                        "veteranLastName": "Smith",
                        "virtualHearing": null,
                        "wasVirtual": false,
                        "witness": null,
                        "worksheetIssues": Object {},
                      }
                    }
                    isVirtual={false}
                    label="Join Hearing"
                    role="Guest"
                    user={
                      Object {
                        "addressCity": "Washington",
                        "addressLine1": "123 Fake St.",
                        "addressState": "DC",
                        "addressZip": "20001",
                        "name": "John Smith",
                      }
                    }
                    virtualHearing={null}
                    wasVirtual={false}
                  >
                    <span>
                      N/A
                    </span>
                    <div
                      data-css-1abghdv=""
                    >
                      <strong>
                        Conference Room:
                      </strong>
                      N/A
                    </div>
                    <div
                      data-css-6aejb2=""
                    >
                      <strong>
                        PIN:
                      </strong>
                      N/A
                    </div>
                    <CopyTextButton
                      ariaLabel="Copy Guest Link"
                      label=""
                      styling={Object {}}
                      text="Copy Guest Link"
                      textToCopy={null}
                    >
                      <Tooltip
                        id="tooltip-Copy Guest Link"
                        position="bottom"
                        text="Click to copy"
                      >
                        <CopyToClipboard
                          aria-describedby="tooltip-Copy Guest Link"
                          aria-label=""
                          data-event="focus mouseenter"
                          data-event-off="mouseleave keydown"
                          data-for="tooltip-Copy Guest Link"
                          data-tip={true}
                          tabIndex={0}
                          text="Copy Guest Link"
                        >
                          <button
                            aria-describedby="tooltip-Copy Guest Link"
                            aria-label=""
                            className="cf-apppeal-id"
                            data-css-p6dv0b=""
                            data-event="focus mouseenter"
                            data-event-off="mouseleave keydown"
                            data-for="tooltip-Copy Guest Link"
                            data-tip={true}
                            disabled={true}
                            onClick={[Function]}
                            tabIndex={0}
                            type="submit"
                          >
                            Copy Guest Link
                             
                            <ClipboardIcon
                              className=""
                              color="#5b616b"
                              size={17}
                            >
                              <svg
                                className=""
                                height={17}
                                viewBox="0 0 21 21"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M13.346 2.578h-2.664v-1.29C10.682.585 10.08 0 9.35 0H6.66c-.728 0-1.33.584-1.33 1.29v1.288H2.663v2.577h10.682V2.578zm-4.02 0H6.66v-1.29h2.665v1.29zm6.685 3.89V3.234a.665.665 0 0 0-.678-.656H14v1.29h.68v2.576H6.66v9.046H1.333V3.867h.68v-1.29H.678a.665.665 0 0 0-.68.657v12.913c0 .365.302.656.68.656h6.006v3.867h9.35l3.996-3.867V6.468h-4.02zm0 12.378v-2.043h2.112l-2.11 2.043zm2.665-3.356H14.68v3.867H7.992v-11.6h10.682v7.733z"
                                  fill="#5b616b"
                                  fillRule="evenodd"
                                />
                              </svg>
                            </ClipboardIcon>
                          </button>
                        </CopyToClipboard>
                        <span
                          data-css-1qgqh7a=""
                        >
                          <ReactTooltip
                            className="cf-tooltip"
                            clickable={false}
                            effect="solid"
                            id="tooltip-Copy Guest Link"
                            insecure={true}
                            multiline={true}
                            offset={Object {}}
                            place="bottom"
                            resizeHide={true}
                            role="tooltip"
                            wrapper="div"
                          >
                            <div
                              className="__react_component_tooltip t00000000-0000-0000-0000-000000000000 place-bottom type-dark"
                              data-id="tooltip"
                              id="tooltip-Copy Guest Link"
                              role="tooltip"
                            >
                              <style
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "
  	.t00000000-0000-0000-0000-000000000000 {
	    color: #fff;
	    background: #222;
	    border: 1px solid transparent;
  	}

  	.t00000000-0000-0000-0000-000000000000.place-top {
        margin-top: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::before {
        border-top: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        bottom: -6px;
        left: 50%;
        margin-left: -8px;
        border-top-color: #222;
        border-top-style: solid;
        border-top-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-bottom {
        margin-top: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::before {
        border-bottom: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        top: -6px;
        left: 50%;
        margin-left: -8px;
        border-bottom-color: #222;
        border-bottom-style: solid;
        border-bottom-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-left {
        margin-left: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::before {
        border-left: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        right: -6px;
        top: 50%;
        margin-top: -4px;
        border-left-color: #222;
        border-left-style: solid;
        border-left-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-right {
        margin-left: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::before {
        border-right: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        left: -6px;
        top: 50%;
        margin-top: -4px;
        border-right-color: #222;
        border-right-style: solid;
        border-right-width: 6px;
    }
  ",
                                  }
                                }
                              />
                              Click to copy
                            </div>
                          </ReactTooltip>
                        </span>
                      </Tooltip>
                    </CopyTextButton>
                  </VirtualHearingLinkDetails>
                </div>
              </LinkContainer>
            </div>
          </HearingLinks>
        </div>
      </div>
    </ContentSection>
  </VirtualHearingFields>
  <EmailNotificationFields
    header="Email Notifications"
    hearing={
      Object {
        "advanceOnDocketMotion": null,
        "aod": false,
        "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
        "appealId": 613,
        "appellantAddressLine1": "9999 MISSION ST",
        "appellantCity": "SAN FRANCISCO",
        "appellantEmailAddress": "tom.brady@caseflow.gov",
        "appellantFirstName": "Tom",
        "appellantIsNotVeteran": false,
        "appellantLastName": "Brady",
        "appellantRelationship": "Spouse",
        "appellantState": "CA",
        "appellantTz": "America/Los_Angeles",
        "appellantZip": "94103",
        "availableHearingLocations": Object {},
        "bvaPoc": null,
        "caseType": "Original",
        "centralOfficeTimeString": "04:00",
        "claimantId": 604,
        "closestRegionalOffice": null,
        "conferenceProvider": "pexip",
        "currentIssueCount": 0,
        "disposition": null,
        "dispositionEditable": true,
        "docketName": "hearing",
        "docketNumber": "200624-614",
        "emailEvents": Array [],
        "evidenceWindowWaived": false,
        "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
        "hearingDayId": 11,
        "id": 10,
        "isVirtual": false,
        "judge": Object {
          "createdAt": "2020-06-25T11:00:43.257-04:00",
          "cssId": "BVAAABSHIRE",
          "displayName": "BVAAABSHIRE (VACO)",
          "efolderDocumentsFetchedAt": null,
          "email": null,
          "fullName": "Aaron Judge_HearingsAndCases Abshire",
          "id": 3,
          "lastLoginAt": null,
          "roles": Object {},
          "selectedRegionalOffice": null,
          "stationId": "101",
          "status": "active",
          "statusUpdatedAt": null,
          "updatedAt": "2020-06-25T11:00:43.257-04:00",
        },
        "judgeId": "3",
        "location": null,
        "militaryService": "",
        "notes": null,
        "paperCase": false,
        "poaName": "AMERICAN LEGION",
        "prepped": null,
        "readableLocation": null,
        "readableRequestType": "Video",
        "regionalOfficeKey": "RO17",
        "regionalOfficeName": "St. Petersburg regional office",
        "regionalOfficeTimezone": "America/New_York",
        "representative": "PARALYZED VETERANS OF AMERICA, INC.",
        "representativeAddress": Object {
          "addressLine1": "9999 MISSION ST",
          "city": "SAN FRANCISCO",
          "state": "CA",
          "zip": "94103",
        },
        "representativeEmailAddress": "tom.brady@caseflow.gov",
        "representativeName": null,
        "representativeTz": "America/Los_Angeles",
        "room": "1",
        "scheduledFor": "2020-07-06T06:00:00.000-04:00",
        "scheduledForIsPast": false,
        "scheduledTime": "2000-01-01T06:00:00.000-05:00",
        "scheduledTimeString": "06:00",
        "summary": null,
        "transcriptRequested": null,
        "transcription": Object {},
        "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
        "veteranAge": 85,
        "veteranEmailAddress": "John.Smith@test.com",
        "veteranFileNumber": "100000005",
        "veteranFirstName": "John",
        "veteranGender": "M",
        "veteranLastName": "Smith",
        "virtualHearing": null,
        "wasVirtual": false,
        "witness": null,
        "worksheetIssues": Object {},
      }
    }
    requestType="Video"
    roTimezone="America/New_York"
    time="06:00"
  >
    <h2
      data-css-3rhuy2=""
    >
      Hearing Links
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-tx10g=""
      >
        <strong>
          Pexip Hearing
        </strong>
      </div>
      <div
        data-css-19plkw7=""
        data-css-1fmltfu=""
        data-testid="link-containers"
      >
        <div
          data-css-tx10g=""
          id="guest-hearings-link"
        >
          <strong>
            Guest Link:
          </strong>
          <span>
            N/A
          </span>
          <div
            data-css-1abghdv=""
          >
            <strong>
              Conference Room:
            </strong>
            N/A
          </div>
          <div
            data-css-6aejb2=""
          >
            <strong>
              PIN:
            </strong>
            N/A
          </div>
          <button
            aria-describedby="tooltip-Copy Guest Link"
            aria-label=""
            class="cf-apppeal-id"
            currentitem="false"
            data-css-p6dv0b=""
            data-event="focus mouseenter"
            data-event-off="mouseleave keydown"
            data-for="tooltip-Copy Guest Link"
            data-tip="true"
            disabled=""
            tabindex="0"
            type="submit"
          >
            Copy Guest Link 
            <svg
              class=""
              height="17"
              viewBox="0 0 21 21"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13.346 2.578h-2.664v-1.29C10.682.585 10.08 0 9.35 0H6.66c-.728 0-1.33.584-1.33 1.29v1.288H2.663v2.577h10.682V2.578zm-4.02 0H6.66v-1.29h2.665v1.29zm6.685 3.89V3.234a.665.665 0 0 0-.678-.656H14v1.29h.68v2.576H6.66v9.046H1.333V3.867h.68v-1.29H.678a.665.665 0 0 0-.68.657v12.913c0 .365.302.656.68.656h6.006v3.867h9.35l3.996-3.867V6.468h-4.02zm0 12.378v-2.043h2.112l-2.11 2.043zm2.665-3.356H14.68v3.867H7.992v-11.6h10.682v7.733z"
                fill="#5b616b"
                fill-rule="evenodd"
              />
            </svg>
          </button>
          <span
            data-css-1qgqh7a=""
            data-testid="tooltip-testid"
          >
            <div
              class="__react_component_tooltip t00000000-0000-0000-0000-000000000000 place-bottom type-dark"
              data-id="tooltip"
              id="tooltip-Copy Guest Link"
              role="tooltip"
            >
              <style>

  	.t00000000-0000-0000-0000-000000000000 {
	    color: #fff;
	    background: #222;
	    border: 1px solid transparent;
  	}

  	.t00000000-0000-0000-0000-000000000000.place-top {
        margin-top: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::before {
        border-top: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        bottom: -6px;
        left: 50%;
        margin-left: -8px;
        border-top-color: #222;
        border-top-style: solid;
        border-top-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-bottom {
        margin-top: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::before {
        border-bottom: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        top: -6px;
        left: 50%;
        margin-left: -8px;
        border-bottom-color: #222;
        border-bottom-style: solid;
        border-bottom-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-left {
        margin-left: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::before {
        border-left: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        right: -6px;
        top: 50%;
        margin-top: -4px;
        border-left-color: #222;
        border-left-style: solid;
        border-left-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-right {
        margin-left: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::before {
        border-right: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        left: -6px;
        top: 50%;
        margin-top: -4px;
        border-right-color: #222;
        border-right-style: solid;
        border-right-width: 6px;
    }

              </style>
              Click to copy
            </div>
          </span>
        </div>
      </div>
    </div>
  </div>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Email Notifications
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        class="usa-grid"
        id="email-section"
      >
        <div
          class="usa-width-one-third"
          data-css-150oin1=""
        >
          <div
            class=""
          >
            <div
              class="cf-form-dropdown dropdown-appellantTz"
              data-css-1dzedb9=""
            >
              <label
                class="question-label"
                for="appellant-tz"
                id="appellant-tz-label"
              >
                <strong>
                  <span>
                    Veteran Timezone
                    <span
                      class="cf-optional"
                    >
                      <input
                        aria-label="copyRequested"
                        checked={false}
                        id="copyRequested"
                        name="copyRequested"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <label
                        htmlFor="copyRequested"
                      >
                        <span
                          className=""
                        >
                          Yes, Transcript Requested
                        </span>

                      </label>
                    </div>
                  </div>
                </Checkbox>
              </div>
              <DateSelector
                label="Copy Sent to Appellant/Rep"
                name="copySentDate"
                onChange={[Function]}
                strongLabel={true}
                type="date"
              >
                <TextField
                  className={
                    Array [
                      "cf-form-textinput",
                    ]
                  }
                  label="Copy Sent to Appellant/Rep"
                  max="9999-12-31"
                  name="copySentDate"
                  onChange={[Function]}
                  optional={false}
                  placeholder="mm/dd/yyyy"
                  required={false}
                  strongLabel={true}
                  type="date"
                  useAriaLabel={false}
                  validationError={null}
                >
                  <div
                    className="cf-form-textinput   "
                  >
                    <label
                      htmlFor="copySentDate"
                    >
                      <strong>
                        <FormLabel
                          label="Copy Sent to Appellant/Rep"
                          name="copySentDate"
                          optional={false}
                          required={false}
                        >
                          <span>
                            Copy Sent to Appellant/Rep
                          </span>
                        </FormLabel>
                      </strong>
                    </label>
                    <div
                      className="input-container"
                    >
                      <input
                        className={
                          Array [
                            "cf-form-textinput",
                          ]
                        }
                        id="copySentDate"
                        max="9999-12-31"
                        name="copySentDate"
                        onBlur={[Function]}
                        onChange={[Function]}
                        placeholder="mm/dd/yyyy"
                        type="date"
                      />
                    </div>
                  </div>
                </TextField>
              </DateSelector>
              <div />
            </div>
          </TranscriptionRequestInputs>
        </div>
      </div>
    </ContentSection>
  </TranscriptionFormSection>
</DetailsForm>
`;

exports[`DetailsForm Matches snapshot with for legacy hearing 1`] = `
<DetailsForm
  hearing={
    Object {
      "advanceOnDocketMotion": null,
      "aod": false,
      "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
      "appealId": 613,
      "appellantAddressLine1": "9999 MISSION ST",
      "appellantCity": "SAN FRANCISCO",
      "appellantEmailAddress": "tom.brady@caseflow.gov",
      "appellantFirstName": "Tom",
      "appellantIsNotVeteran": false,
      "appellantLastName": "Brady",
      "appellantRelationship": "Spouse",
      "appellantState": "CA",
      "appellantTz": "America/Los_Angeles",
      "appellantZip": "94103",
      "availableHearingLocations": Object {},
      "bvaPoc": null,
      "caseType": "Original",
      "centralOfficeTimeString": "04:00",
      "claimantId": 604,
      "closestRegionalOffice": null,
      "conferenceProvider": "pexip",
      "currentIssueCount": 0,
      "disposition": null,
      "dispositionEditable": true,
      "docketName": "hearing",
      "docketNumber": "200624-614",
      "emailEvents": Array [],
      "evidenceWindowWaived": false,
      "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
      "hearingDayId": 11,
      "id": 10,
      "isVirtual": false,
      "judge": Object {
        "createdAt": "2020-06-25T11:00:43.257-04:00",
        "cssId": "BVAAABSHIRE",
        "displayName": "BVAAABSHIRE (VACO)",
        "efolderDocumentsFetchedAt": null,
        "email": null,
        "fullName": "Aaron Judge_HearingsAndCases Abshire",
        "id": 3,
        "lastLoginAt": null,
        "roles": Object {},
        "selectedRegionalOffice": null,
        "stationId": "101",
        "status": "active",
        "statusUpdatedAt": null,
        "updatedAt": "2020-06-25T11:00:43.257-04:00",
      },
      "judgeId": "3",
      "location": null,
      "militaryService": "",
      "notes": null,
      "paperCase": false,
      "poaName": "AMERICAN LEGION",
      "prepped": null,
      "readableLocation": null,
      "readableRequestType": "Video",
      "regionalOfficeKey": "RO17",
      "regionalOfficeName": "St. Petersburg regional office",
      "regionalOfficeTimezone": "America/New_York",
      "representative": "PARALYZED VETERANS OF AMERICA, INC.",
      "representativeAddress": Object {
        "addressLine1": "9999 MISSION ST",
        "city": "SAN FRANCISCO",
        "state": "CA",
        "zip": "94103",
      },
      "representativeEmailAddress": "tom.brady@caseflow.gov",
      "representativeName": null,
      "representativeTz": "America/Los_Angeles",
      "room": "1",
      "scheduledFor": "2020-07-06T06:00:00.000-04:00",
      "scheduledForIsPast": false,
      "scheduledTime": "2000-01-01T06:00:00.000-05:00",
      "scheduledTimeString": "06:00",
      "summary": null,
      "transcriptRequested": null,
      "transcription": Object {},
      "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
      "veteranAge": 85,
      "veteranEmailAddress": "John.Smith@test.com",
      "veteranFileNumber": "100000005",
      "veteranFirstName": "John",
      "veteranGender": "M",
      "veteranLastName": "Smith",
      "virtualHearing": null,
      "wasVirtual": false,
      "witness": null,
      "worksheetIssues": Object {},
    }
  }
  isLegacy={true}
>
  <ContentSection
    header="Hearing Details"
  >
    <div
      className="cf-app-segment"
    >
      <h2
        data-css-3rhuy2=""
      >
        Hearing Details
      </h2>
      <div
        data-css-1571z6o=""
      >
        <div
          data-css-1fmltfu=""
        >
          <Connect(JudgeDropdown)
            name="judgeDropdown"
            onChange={[Function]}
            value="3"
          >
            <JudgeDropdown
              judges={Object {}}
              label="VLJ"
              name="judgeDropdown"
              onChange={[Function]}
              onFetchDropdownData={[Function]}
              onReceiveDropdownData={[Function]}
              value="3"
            >
              <SearchableDropdown
                clearOnSelect={false}
                label="VLJ"
                loading={false}
                name="judgeDropdown"
                onChange={[Function]}
                strongLabel={true}
                value={
                  Object {
                    "label": null,
                    "value": null,
                  }
                }
              >
                <div
                  className=""
                >
                  <div
                    className="cf-form-dropdown dropdown-judgeDropdown"
                  >
                    <label
                      className="question-label"
                      htmlFor="judge-dropdown"
                      id="judge-dropdown-label"
                    >
                      <strong>
                        <FormLabel
                          label="VLJ"
                          name="VLJ"
                        >
                          <span>
                            VLJ
                          </span>
                        </FormLabel>
                      </strong>
                    </label>
                    <div
                      className="cf-select"
                    >
                      <StateManager
                        cache={false}
                        classNamePrefix="cf-select"
                        components={
                          Object {
                            "Input": [Function],
                            "MenuList": [Function],
                            "Option": [Function],
                          }
                        }
                        defaultInputValue=""
                        defaultMenuIsOpen={false}
                        defaultValue={null}
                        inputId="judge-dropdown"
                        isLoading={false}
                        isSearchable={true}
                        name="judgeDropdown"
                        noOptionsMessage={[Function]}
                        onBlurResetsInput={false}
                        onChange={[Function]}
                        onMenuClose={[Function]}
                        onMenuOpen={[Function]}
                        shouldKeyDownEventCreateNewOption={[Function]}
                        styles={
                          Object {
                            "input": [Function],
                          }
                        }
                        value={
                          Object {
                            "label": null,
                            "value": null,
                          }
                        }
                      >
                        <Select
                          backspaceRemovesValue={true}
                          blurInputOnSelect={true}
                          cache={false}
                          captureMenuScroll={false}
                          classNamePrefix="cf-select"
                          closeMenuOnScroll={false}
                          closeMenuOnSelect={true}
                          components={
                            Object {
                              "Input": [Function],
                              "MenuList": [Function],
                              "Option": [Function],
                            }
                          }
                          controlShouldRenderValue={true}
                          escapeClearsValue={false}
                          filterOption={[Function]}
                          formatGroupLabel={[Function]}
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          inputId="judge-dropdown"
                          inputValue=""
                          isDisabled={false}
                          isLoading={false}
                          isMulti={false}
                          isOptionDisabled={[Function]}
                          isRtl={false}
                          isSearchable={true}
                          loadingMessage={[Function]}
                          maxMenuHeight={300}
                          menuIsOpen={false}
                          menuPlacement="bottom"
                          menuPosition="absolute"
                          menuShouldBlockScroll={false}
                          menuShouldScrollIntoView={true}
                          minMenuHeight={140}
                          name="judgeDropdown"
                          noOptionsMessage={[Function]}
                          onBlurResetsInput={false}
                          onChange={[Function]}
                          onInputChange={[Function]}
                          onMenuClose={[Function]}
                          onMenuOpen={[Function]}
                          openMenuOnClick={true}
                          openMenuOnFocus={false}
                          options={Array []}
                          pageSize={5}
                          placeholder="Select..."
                          screenReaderStatus={[Function]}
                          shouldKeyDownEventCreateNewOption={[Function]}
                          styles={
                            Object {
                              "input": [Function],
                            }
                          }
                          tabIndex="0"
                          tabSelectsValue={true}
                          value={
                            Object {
                              "label": null,
                              "value": null,
                            }
                          }
                        >
                          <SelectContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            innerProps={
                              Object {
                                "id": undefined,
                                "onKeyDown": [Function],
                              }
                            }
                            isDisabled={false}
                            isFocused={false}
                            isMulti={false}
                            isRtl={false}
                            options={Array []}
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {
                                  "Input": [Function],
                                  "MenuList": [Function],
                                  "Option": [Function],
                                },
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "judge-dropdown",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "name": "judgeDropdown",
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": null,
                                  "value": null,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className=""
                              css={
                                Object {
                                  "boxSizing": "border-box",
                                  "direction": null,
                                  "label": "container",
                                  "pointerEvents": null,
                                  "position": "relative",
                                }
                              }
                              onKeyDown={[Function]}
                            >
                              <div
                                className=" css-2b097c-container"
                                onKeyDown={[Function]}
                              >
                                <Control
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  menuIsOpen={false}
                                  options={Array []}
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {
                                        "Input": [Function],
                                        "MenuList": [Function],
                                        "Option": [Function],
                                      },
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "judge-dropdown",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "name": "judgeDropdown",
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": null,
                                        "value": null,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    className="cf-select__control"
                                    css={
                                      Object {
                                        "&:hover": Object {
                                          "borderColor": "hsl(0, 0%, 70%)",
                                        },
                                        "alignItems": "center",
                                        "backgroundColor": "hsl(0, 0%, 100%)",
                                        "borderColor": "hsl(0, 0%, 80%)",
                                        "borderRadius": 4,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "boxShadow": null,
                                        "boxSizing": "border-box",
                                        "cursor": "default",
                                        "display": "flex",
                                        "flexWrap": "wrap",
                                        "justifyContent": "space-between",
                                        "label": "control",
                                        "minHeight": 38,
                                        "outline": "0 !important",
                                        "position": "relative",
                                        "transition": "all 100ms",
                                      }
                                    }
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <div
                                      className="cf-select__control css-yk16xz-control"
                                      onMouseDown={[Function]}
                                      onTouchEnd={[Function]}
                                    >
                                      <ValueContainer
                                        clearValue={[Function]}
                                        cx={[Function]}
                                        getStyles={[Function]}
                                        getValue={[Function]}
                                        hasValue={true}
                                        isDisabled={false}
                                        isMulti={false}
                                        isRtl={false}
                                        options={Array []}
                                        selectOption={[Function]}
                                        selectProps={
                                          Object {
                                            "backspaceRemovesValue": true,
                                            "blurInputOnSelect": true,
                                            "cache": false,
                                            "captureMenuScroll": false,
                                            "classNamePrefix": "cf-select",
                                            "closeMenuOnScroll": false,
                                            "closeMenuOnSelect": true,
                                            "components": Object {
                                              "Input": [Function],
                                              "MenuList": [Function],
                                              "Option": [Function],
                                            },
                                            "controlShouldRenderValue": true,
                                            "defaultOptions": undefined,
                                            "escapeClearsValue": false,
                                            "filterOption": [Function],
                                            "formatGroupLabel": [Function],
                                            "getOptionLabel": [Function],
                                            "getOptionValue": [Function],
                                            "inputId": "judge-dropdown",
                                            "inputValue": "",
                                            "isClearable": undefined,
                                            "isDisabled": false,
                                            "isLoading": false,
                                            "isMulti": false,
                                            "isOptionDisabled": [Function],
                                            "isRtl": false,
                                            "isSearchable": true,
                                            "loadOptions": undefined,
                                            "loadingMessage": [Function],
                                            "maxMenuHeight": 300,
                                            "menuIsOpen": false,
                                            "menuPlacement": "bottom",
                                            "menuPosition": "absolute",
                                            "menuShouldBlockScroll": false,
                                            "menuShouldScrollIntoView": true,
                                            "minMenuHeight": 140,
                                            "name": "judgeDropdown",
                                            "noOptionsMessage": [Function],
                                            "onBlurResetsInput": false,
                                            "onChange": [Function],
                                            "onInputChange": [Function],
                                            "onMenuClose": [Function],
                                            "onMenuOpen": [Function],
                                            "openMenuOnClick": true,
                                            "openMenuOnFocus": false,
                                            "options": Array [],
                                            "pageSize": 5,
                                            "placeholder": "Select...",
                                            "screenReaderStatus": [Function],
                                            "searchable": undefined,
                                            "shouldKeyDownEventCreateNewOption": [Function],
                                            "styles": Object {
                                              "input": [Function],
                                            },
                                            "tabIndex": "0",
                                            "tabSelectsValue": true,
                                            "value": Object {
                                              "label": null,
                                              "value": null,
                                            },
                                          }
                                        }
                                        setValue={[Function]}
                                        theme={
                                          Object {
                                            "borderRadius": 4,
                                            "colors": Object {
                                              "danger": "#DE350B",
                                              "dangerLight": "#FFBDAD",
                                              "neutral0": "hsl(0, 0%, 100%)",
                                              "neutral10": "hsl(0, 0%, 90%)",
                                              "neutral20": "hsl(0, 0%, 80%)",
                                              "neutral30": "hsl(0, 0%, 70%)",
                                              "neutral40": "hsl(0, 0%, 60%)",
                                              "neutral5": "hsl(0, 0%, 95%)",
                                              "neutral50": "hsl(0, 0%, 50%)",
                                              "neutral60": "hsl(0, 0%, 40%)",
                                              "neutral70": "hsl(0, 0%, 30%)",
                                              "neutral80": "hsl(0, 0%, 20%)",
                                              "neutral90": "hsl(0, 0%, 10%)",
                                              "primary": "#2684FF",
                                              "primary25": "#DEEBFF",
                                              "primary50": "#B2D4FF",
                                              "primary75": "#4C9AFF",
                                            },
                                            "spacing": Object {
                                              "baseUnit": 4,
                                              "controlHeight": 38,
                                              "menuGutter": 8,
                                            },
                                          }
                                        }
                                      >
                                        <EmotionCssPropInternal
                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                          className="cf-select__value-container cf-select__value-container--has-value"
                                          css={
                                            Object {
                                              "WebkitOverflowScrolling": "touch",
                                              "alignItems": "center",
                                              "boxSizing": "border-box",
                                              "display": "flex",
                                              "flex": 1,
                                              "flexWrap": "wrap",
                                              "overflow": "hidden",
                                              "padding": "2px 8px",
                                              "position": "relative",
                                            }
                                          }
                                        >
                                          <div
                                            className="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                                          >
                                            <SingleValue
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              data={
                                                Object {
                                                  "label": null,
                                                  "value": null,
                                                }
                                              }
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              isDisabled={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={Array []}
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "judge-dropdown",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "judgeDropdown",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": null,
                                                    "value": null,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                className="cf-select__single-value"
                                                css={
                                                  Object {
                                                    "boxSizing": "border-box",
                                                    "color": "hsl(0, 0%, 20%)",
                                                    "label": "singleValue",
                                                    "marginLeft": 2,
                                                    "marginRight": 2,
                                                    "maxWidth": "calc(100% - 8px)",
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "textOverflow": "ellipsis",
                                                    "top": "50%",
                                                    "transform": "translateY(-50%)",
                                                    "whiteSpace": "nowrap",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="cf-select__single-value css-1uccc91-singleValue"
                                                />
                                              </EmotionCssPropInternal>
                                            </SingleValue>
                                            <CustomInput
                                              aria-autocomplete="list"
                                              autoCapitalize="none"
                                              autoComplete="off"
                                              autoCorrect="off"
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              id="judge-dropdown"
                                              innerRef={[Function]}
                                              isDisabled={false}
                                              isHidden={false}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "judge-dropdown",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "judgeDropdown",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": null,
                                                    "value": null,
                                                  },
                                                }
                                              }
                                              spellCheck="false"
                                              tabIndex="0"
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                              type="text"
                                              value=""
                                            >
                                              <Input
                                                aria-autocomplete="list"
                                                aria-expanded={false}
                                                aria-haspopup={true}
                                                aria-labelledby="judge-dropdown-label"
                                                aria-owns="judge-dropdown-listbox"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                id="judge-dropdown"
                                                innerRef={[Function]}
                                                isDisabled={false}
                                                isHidden={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                role="combobox"
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cache": false,
                                                    "captureMenuScroll": false,
                                                    "classNamePrefix": "cf-select",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "Input": [Function],
                                                      "MenuList": [Function],
                                                      "Option": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputId": "judge-dropdown",
                                                    "inputValue": "",
                                                    "isClearable": undefined,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadOptions": undefined,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "judgeDropdown",
                                                    "noOptionsMessage": [Function],
                                                    "onBlurResetsInput": false,
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "searchable": undefined,
                                                    "shouldKeyDownEventCreateNewOption": [Function],
                                                    "styles": Object {
                                                      "input": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": Object {
                                                      "label": null,
                                                      "value": null,
                                                    },
                                                  }
                                                }
                                                spellCheck="false"
                                                tabIndex="0"
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                                type="text"
                                                value=""
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  css={
                                                    Object {
                                                      "height": "44px",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="css-81nyic-Input"
                                                  >
                                                    <AutosizeInput
                                                      aria-autocomplete="list"
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      aria-labelledby="judge-dropdown-label"
                                                      aria-owns="judge-dropdown-listbox"
                                                      autoCapitalize="none"
                                                      autoComplete="off"
                                                      autoCorrect="off"
                                                      className="cf-select__input"
                                                      disabled={false}
                                                      id="judge-dropdown"
                                                      injectStyles={true}
                                                      inputRef={[Function]}
                                                      inputStyle={
                                                        Object {
                                                          "background": 0,
                                                          "border": 0,
                                                          "color": "inherit",
                                                          "fontSize": "inherit",
                                                          "label": "input",
                                                          "opacity": 1,
                                                          "outline": 0,
                                                          "padding": 0,
                                                        }
                                                      }
                                                      minWidth={1}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      role="combobox"
                                                      spellCheck="false"
                                                      tabIndex="0"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="cf-select__input"
                                                        style={
                                                          Object {
                                                            "display": "inline-block",
                                                          }
                                                        }
                                                      >
                                                        <input
                                                          aria-autocomplete="list"
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          aria-labelledby="judge-dropdown-label"
                                                          aria-owns="judge-dropdown-listbox"
                                                          autoCapitalize="none"
                                                          autoComplete="off"
                                                          autoCorrect="off"
                                                          disabled={false}
                                                          id="judge-dropdown"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          role="combobox"
                                                          spellCheck="false"
                                                          style={
                                                            Object {
                                                              "background": 0,
                                                              "border": 0,
                                                              "boxSizing": "content-box",
                                                              "color": "inherit",
                                                              "fontSize": "inherit",
                                                              "label": "input",
                                                              "opacity": 1,
                                                              "outline": 0,
                                                              "padding": 0,
                                                              "width": "2px",
                                                            }
                                                          }
                                                          tabIndex="0"
                                                          type="text"
                                                          value=""
                                                        />
                                                        <div
                                                          style={
                                                            Object {
                                                              "height": 0,
                                                              "left": 0,
                                                              "overflow": "scroll",
                                                              "position": "absolute",
                                                              "top": 0,
                                                              "visibility": "hidden",
                                                              "whiteSpace": "pre",
                                                            }
                                                          }
                                                        />
                                                      </div>
                                                    </AutosizeInput>
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </Input>
                                            </CustomInput>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </ValueContainer>
                                      <IndicatorsContainer
                                        clearValue={[Function]}
                                        cx={[Function]}
                                        getStyles={[Function]}
                                        getValue={[Function]}
                                        hasValue={true}
                                        isDisabled={false}
                                        isMulti={false}
                                        isRtl={false}
                                        options={Array []}
                                        selectOption={[Function]}
                                        selectProps={
                                          Object {
                                            "backspaceRemovesValue": true,
                                            "blurInputOnSelect": true,
                                            "cache": false,
                                            "captureMenuScroll": false,
                                            "classNamePrefix": "cf-select",
                                            "closeMenuOnScroll": false,
                                            "closeMenuOnSelect": true,
                                            "components": Object {
                                              "Input": [Function],
                                              "MenuList": [Function],
                                              "Option": [Function],
                                            },
                                            "controlShouldRenderValue": true,
                                            "defaultOptions": undefined,
                                            "escapeClearsValue": false,
                                            "filterOption": [Function],
                                            "formatGroupLabel": [Function],
                                            "getOptionLabel": [Function],
                                            "getOptionValue": [Function],
                                            "inputId": "judge-dropdown",
                                            "inputValue": "",
                                            "isClearable": undefined,
                                            "isDisabled": false,
                                            "isLoading": false,
                                            "isMulti": false,
                                            "isOptionDisabled": [Function],
                                            "isRtl": false,
                                            "isSearchable": true,
                                            "loadOptions": undefined,
                                            "loadingMessage": [Function],
                                            "maxMenuHeight": 300,
                                            "menuIsOpen": false,
                                            "menuPlacement": "bottom",
                                            "menuPosition": "absolute",
                                            "menuShouldBlockScroll": false,
                                            "menuShouldScrollIntoView": true,
                                            "minMenuHeight": 140,
                                            "name": "judgeDropdown",
                                            "noOptionsMessage": [Function],
                                            "onBlurResetsInput": false,
                                            "onChange": [Function],
                                            "onInputChange": [Function],
                                            "onMenuClose": [Function],
                                            "onMenuOpen": [Function],
                                            "openMenuOnClick": true,
                                            "openMenuOnFocus": false,
                                            "options": Array [],
                                            "pageSize": 5,
                                            "placeholder": "Select...",
                                            "screenReaderStatus": [Function],
                                            "searchable": undefined,
                                            "shouldKeyDownEventCreateNewOption": [Function],
                                            "styles": Object {
                                              "input": [Function],
                                            },
                                            "tabIndex": "0",
                                            "tabSelectsValue": true,
                                            "value": Object {
                                              "label": null,
                                              "value": null,
                                            },
                                          }
                                        }
                                        setValue={[Function]}
                                        theme={
                                          Object {
                                            "borderRadius": 4,
                                            "colors": Object {
                                              "danger": "#DE350B",
                                              "dangerLight": "#FFBDAD",
                                              "neutral0": "hsl(0, 0%, 100%)",
                                              "neutral10": "hsl(0, 0%, 90%)",
                                              "neutral20": "hsl(0, 0%, 80%)",
                                              "neutral30": "hsl(0, 0%, 70%)",
                                              "neutral40": "hsl(0, 0%, 60%)",
                                              "neutral5": "hsl(0, 0%, 95%)",
                                              "neutral50": "hsl(0, 0%, 50%)",
                                              "neutral60": "hsl(0, 0%, 40%)",
                                              "neutral70": "hsl(0, 0%, 30%)",
                                              "neutral80": "hsl(0, 0%, 20%)",
                                              "neutral90": "hsl(0, 0%, 10%)",
                                              "primary": "#2684FF",
                                              "primary25": "#DEEBFF",
                                              "primary50": "#B2D4FF",
                                              "primary75": "#4C9AFF",
                                            },
                                            "spacing": Object {
                                              "baseUnit": 4,
                                              "controlHeight": 38,
                                              "menuGutter": 8,
                                            },
                                          }
                                        }
                                      >
                                        <EmotionCssPropInternal
                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                          className="cf-select__indicators"
                                          css={
                                            Object {
                                              "alignItems": "center",
                                              "alignSelf": "stretch",
                                              "boxSizing": "border-box",
                                              "display": "flex",
                                              "flexShrink": 0,
                                            }
                                          }
                                        >
                                          <div
                                            className="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                                          >
                                            <IndicatorSeparator
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              isDisabled={false}
                                              isFocused={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={Array []}
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "judge-dropdown",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "judgeDropdown",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": null,
                                                    "value": null,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                className="cf-select__indicator-separator"
                                                css={
                                                  Object {
                                                    "alignSelf": "stretch",
                                                    "backgroundColor": "hsl(0, 0%, 80%)",
                                                    "boxSizing": "border-box",
                                                    "label": "indicatorSeparator",
                                                    "marginBottom": 8,
                                                    "marginTop": 8,
                                                    "width": 1,
                                                  }
                                                }
                                              >
                                                <span
                                                  className="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                                                />
                                              </EmotionCssPropInternal>
                                            </IndicatorSeparator>
                                            <DropdownIndicator
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              innerProps={
                                                Object {
                                                  "aria-hidden": "true",
                                                  "onMouseDown": [Function],
                                                  "onTouchEnd": [Function],
                                                }
                                              }
                                              isDisabled={false}
                                              isFocused={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={Array []}
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "judge-dropdown",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "judgeDropdown",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": null,
                                                    "value": null,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                aria-hidden="true"
                                                className="cf-select__indicator cf-select__dropdown-indicator"
                                                css={
                                                  Object {
                                                    ":hover": Object {
                                                      "color": "hsl(0, 0%, 60%)",
                                                    },
                                                    "boxSizing": "border-box",
                                                    "color": "hsl(0, 0%, 80%)",
                                                    "display": "flex",
                                                    "label": "indicatorContainer",
                                                    "padding": 8,
                                                    "transition": "color 150ms",
                                                  }
                                                }
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <div
                                                  aria-hidden="true"
                                                  className="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                  onMouseDown={[Function]}
                                                  onTouchEnd={[Function]}
                                                >
                                                  <DownChevron>
                                                    <Svg
                                                      size={20}
                                                    >
                                                      <EmotionCssPropInternal
                                                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                        aria-hidden="true"
                                                        css={
                                                          Object {
                                                            "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGljYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0JJIiwiZmlsZSI6ImluZGljYXRvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyB0eXBlIE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3gsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgdHlwZSB7IENvbW1vblByb3BzLCBUaGVtZSB9IGZyb20gJy4uL3R5cGVzJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBEcm9wZG93biAmIENsZWFyIEljb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuY29uc3QgU3ZnID0gKHsgc2l6ZSwgLi4ucHJvcHMgfTogeyBzaXplOiBudW1iZXIgfSkgPT4gKFxuICA8c3ZnXG4gICAgaGVpZ2h0PXtzaXplfVxuICAgIHdpZHRoPXtzaXplfVxuICAgIHZpZXdCb3g9XCIwIDAgMjAgMjBcIlxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgZm9jdXNhYmxlPVwiZmFsc2VcIlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBmaWxsOiAnY3VycmVudENvbG9yJyxcbiAgICAgIGxpbmVIZWlnaHQ6IDEsXG4gICAgICBzdHJva2U6ICdjdXJyZW50Q29sb3InLFxuICAgICAgc3Ryb2tlV2lkdGg6IDAsXG4gICAgfX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pO1xuXG5leHBvcnQgY29uc3QgQ3Jvc3NJY29uID0gKHByb3BzOiBhbnkpID0+IChcbiAgPFN2ZyBzaXplPXsyMH0gey4uLnByb3BzfT5cbiAgICA8cGF0aCBkPVwiTTE0LjM0OCAxNC44NDljLTAuNDY5IDAuNDY5LTEuMjI5IDAuNDY5LTEuNjk3IDBsLTIuNjUxLTMuMDMwLTIuNjUxIDMuMDI5Yy0wLjQ2OSAwLjQ2OS0xLjIyOSAwLjQ2OS0xLjY5NyAwLTAuNDY5LTAuNDY5LTAuNDY5LTEuMjI5IDAtMS42OTdsMi43NTgtMy4xNS0yLjc1OS0zLjE1MmMtMC40NjktMC40NjktMC40NjktMS4yMjggMC0xLjY5N3MxLjIyOC0wLjQ2OSAxLjY5NyAwbDIuNjUyIDMuMDMxIDIuNjUxLTMuMDMxYzAuNDY5LTAuNDY5IDEuMjI4LTAuNDY5IDEuNjk3IDBzMC40NjkgMS4yMjkgMCAxLjY5N2wtMi43NTggMy4xNTIgMi43NTggMy4xNWMwLjQ2OSAwLjQ2OSAwLjQ2OSAxLjIyOSAwIDEuNjk4elwiIC8+XG4gIDwvU3ZnPlxuKTtcbmV4cG9ydCBjb25zdCBEb3duQ2hldnJvbiA9IChwcm9wczogYW55KSA9PiAoXG4gIDxTdmcgc2l6ZT17MjB9IHsuLi5wcm9wc30+XG4gICAgPHBhdGggZD1cIk00LjUxNiA3LjU0OGMwLjQzNi0wLjQ0NiAxLjA0My0wLjQ4MSAxLjU3NiAwbDMuOTA4IDMuNzQ3IDMuOTA4LTMuNzQ3YzAuNTMzLTAuNDgxIDEuMTQxLTAuNDQ2IDEuNTc0IDAgMC40MzYgMC40NDUgMC40MDggMS4xOTcgMCAxLjYxNS0wLjQwNiAwLjQxOC00LjY5NSA0LjUwMi00LjY5NSA0LjUwMi0wLjIxNyAwLjIyMy0wLjUwMiAwLjMzNS0wLjc4NyAwLjMzNXMtMC41Ny0wLjExMi0wLjc4OS0wLjMzNWMwIDAtNC4yODctNC4wODQtNC42OTUtNC41MDJzLTAuNDM2LTEuMTcgMC0xLjYxNXpcIiAvPlxuICA8L1N2Zz5cbik7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRHJvcGRvd24gJiBDbGVhciBCdXR0b25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IHR5cGUgSW5kaWNhdG9yUHJvcHMgPSBDb21tb25Qcm9wcyAmIHtcbiAgLyoqIFRoZSBjaGlsZHJlbiB0byBiZSByZW5kZXJlZCBpbnNpZGUgdGhlIGluZGljYXRvci4gKi9cbiAgY2hpbGRyZW46IE5vZGUsXG4gIC8qKiBQcm9wcyB0aGF0IHdpbGwgYmUgcGFzc2VkIG9uIHRvIHRoZSBjaGlsZHJlbi4gKi9cbiAgaW5uZXJQcm9wczogYW55LFxuICAvKiogVGhlIGZvY3VzZWQgc3RhdGUgb2YgdGhlIHNlbGVjdC4gKi9cbiAgaXNGb2N1c2VkOiBib29sZWFuLFxuICAvKiogV2hldGhlciB0aGUgdGV4dCBpcyByaWdodCB0byBsZWZ0ICovXG4gIGlzUnRsOiBib29sZWFuLFxufTtcblxuY29uc3QgYmFzZUNTUyA9ICh7XG4gIGlzRm9jdXNlZCxcbiAgdGhlbWU6IHtcbiAgICBzcGFjaW5nOiB7IGJhc2VVbml0IH0sXG4gICAgY29sb3JzLFxuICB9LFxufTogSW5kaWNhdG9yUHJvcHMpID0+ICh7XG4gIGxhYmVsOiAnaW5kaWNhdG9yQ29udGFpbmVyJyxcbiAgY29sb3I6IGlzRm9jdXNlZCA/IGNvbG9ycy5uZXV0cmFsNjAgOiBjb2xvcnMubmV1dHJhbDIwLFxuICBkaXNwbGF5OiAnZmxleCcsXG4gIHBhZGRpbmc6IGJhc2VVbml0ICogMixcbiAgdHJhbnNpdGlvbjogJ2NvbG9yIDE1MG1zJyxcblxuICAnOmhvdmVyJzoge1xuICAgIGNvbG9yOiBpc0ZvY3VzZWQgPyBjb2xvcnMubmV1dHJhbDgwIDogY29sb3JzLm5ldXRyYWw0MCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgZHJvcGRvd25JbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xuZXhwb3J0IGNvbnN0IERyb3Bkb3duSW5kaWNhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGN4LCBnZXRTdHlsZXMsIGlubmVyUHJvcHMgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2Ryb3Bkb3duSW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnZHJvcGRvd24taW5kaWNhdG9yJzogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbiB8fCA8RG93bkNoZXZyb24gLz59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgY2xlYXJJbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xuZXhwb3J0IGNvbnN0IENsZWFySW5kaWNhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGN4LCBnZXRTdHlsZXMsIGlubmVyUHJvcHMgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2NsZWFySW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnY2xlYXItaW5kaWNhdG9yJzogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbiB8fCA8Q3Jvc3NJY29uIC8+fVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTZXBhcmF0b3Jcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG50eXBlIFNlcGFyYXRvclN0YXRlID0geyBpc0Rpc2FibGVkOiBib29sZWFuIH07XG5cbmV4cG9ydCBjb25zdCBpbmRpY2F0b3JTZXBhcmF0b3JDU1MgPSAoe1xuICBpc0Rpc2FibGVkLFxuICB0aGVtZToge1xuICAgIHNwYWNpbmc6IHsgYmFzZVVuaXQgfSxcbiAgICBjb2xvcnMsXG4gIH0sXG59OiBDb21tb25Qcm9wcyAmIFNlcGFyYXRvclN0YXRlKSA9PiAoe1xuICBsYWJlbDogJ2luZGljYXRvclNlcGFyYXRvcicsXG4gIGFsaWduU2VsZjogJ3N0cmV0Y2gnLFxuICBiYWNrZ3JvdW5kQ29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDEwIDogY29sb3JzLm5ldXRyYWwyMCxcbiAgbWFyZ2luQm90dG9tOiBiYXNlVW5pdCAqIDIsXG4gIG1hcmdpblRvcDogYmFzZVVuaXQgKiAyLFxuICB3aWR0aDogMSxcbn0pO1xuXG5leHBvcnQgY29uc3QgSW5kaWNhdG9yU2VwYXJhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNsYXNzTmFtZSwgY3gsIGdldFN0eWxlcywgaW5uZXJQcm9wcyB9ID0gcHJvcHM7XG4gIHJldHVybiAoXG4gICAgPHNwYW5cbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2luZGljYXRvclNlcGFyYXRvcicsIHByb3BzKX1cbiAgICAgIGNsYXNzTmFtZT17Y3goeyAnaW5kaWNhdG9yLXNlcGFyYXRvcic6IHRydWUgfSwgY2xhc3NOYW1lKX1cbiAgICAvPlxuICApO1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMb2FkaW5nXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuY29uc3QgbG9hZGluZ0RvdEFuaW1hdGlvbnMgPSBrZXlmcmFtZXNgXG4gIDAlLCA4MCUsIDEwMCUgeyBvcGFjaXR5OiAwOyB9XG4gIDQwJSB7IG9wYWNpdHk6IDE7IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBsb2FkaW5nSW5kaWNhdG9yQ1NTID0gKHtcbiAgaXNGb2N1c2VkLFxuICBzaXplLFxuICB0aGVtZToge1xuICAgIGNvbG9ycyxcbiAgICBzcGFjaW5nOiB7IGJhc2VVbml0IH0sXG4gIH0sXG59OiB7XG4gIGlzRm9jdXNlZDogYm9vbGVhbixcbiAgc2l6ZTogbnVtYmVyLFxuICB0aGVtZTogVGhlbWUsXG59KSA9PiAoe1xuICBsYWJlbDogJ2xvYWRpbmdJbmRpY2F0b3InLFxuICBjb2xvcjogaXNGb2N1c2VkID8gY29sb3JzLm5ldXRyYWw2MCA6IGNvbG9ycy5uZXV0cmFsMjAsXG4gIGRpc3BsYXk6ICdmbGV4JyxcbiAgcGFkZGluZzogYmFzZVVuaXQgKiAyLFxuICB0cmFuc2l0aW9uOiAnY29sb3IgMTUwbXMnLFxuICBhbGlnblNlbGY6ICdjZW50ZXInLFxuICBmb250U2l6ZTogc2l6ZSxcbiAgbGluZUhlaWdodDogMSxcbiAgbWFyZ2luUmlnaHQ6IHNpemUsXG4gIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxufSk7XG5cbnR5cGUgRG90UHJvcHMgPSB7IGRlbGF5OiBudW1iZXIsIG9mZnNldDogYm9vbGVhbiB9O1xuY29uc3QgTG9hZGluZ0RvdCA9ICh7IGRlbGF5LCBvZmZzZXQgfTogRG90UHJvcHMpID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGFuaW1hdGlvbjogYCR7bG9hZGluZ0RvdEFuaW1hdGlvbnN9IDFzIGVhc2UtaW4tb3V0ICR7ZGVsYXl9bXMgaW5maW5pdGU7YCxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ2N1cnJlbnRDb2xvcicsXG4gICAgICBib3JkZXJSYWRpdXM6ICcxZW0nLFxuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBtYXJnaW5MZWZ0OiBvZmZzZXQgPyAnMWVtJyA6IG51bGwsXG4gICAgICBoZWlnaHQ6ICcxZW0nLFxuICAgICAgdmVydGljYWxBbGlnbjogJ3RvcCcsXG4gICAgICB3aWR0aDogJzFlbScsXG4gICAgfX1cbiAgLz5cbik7XG5cbmV4cG9ydCB0eXBlIExvYWRpbmdJY29uUHJvcHMgPSB7XG4gIC8qKiBQcm9wcyB0aGF0IHdpbGwgYmUgcGFzc2VkIG9uIHRvIHRoZSBjaGlsZHJlbi4gKi9cbiAgaW5uZXJQcm9wczogYW55LFxuICAvKiogVGhlIGZvY3VzZWQgc3RhdGUgb2YgdGhlIHNlbGVjdC4gKi9cbiAgaXNGb2N1c2VkOiBib29sZWFuLFxuICAvKiogV2hldGhlciB0aGUgdGV4dCBpcyByaWdodCB0byBsZWZ0ICovXG4gIGlzUnRsOiBib29sZWFuLFxufSAmIENvbW1vblByb3BzICYge1xuICAgIC8qKiBTZXQgc2l6ZSBvZiB0aGUgY29udGFpbmVyLiAqL1xuICAgIHNpemU6IG51bWJlcixcbiAgfTtcbmV4cG9ydCBjb25zdCBMb2FkaW5nSW5kaWNhdG9yID0gKHByb3BzOiBMb2FkaW5nSWNvblByb3BzKSA9PiB7XG4gIGNvbnN0IHsgY2xhc3NOYW1lLCBjeCwgZ2V0U3R5bGVzLCBpbm5lclByb3BzLCBpc1J0bCB9ID0gcHJvcHM7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICB7Li4uaW5uZXJQcm9wc31cbiAgICAgIGNzcz17Z2V0U3R5bGVzKCdsb2FkaW5nSW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnbG9hZGluZy1pbmRpY2F0b3InOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgPlxuICAgICAgPExvYWRpbmdEb3QgZGVsYXk9ezB9IG9mZnNldD17aXNSdGx9IC8+XG4gICAgICA8TG9hZGluZ0RvdCBkZWxheT17MTYwfSBvZmZzZXQgLz5cbiAgICAgIDxMb2FkaW5nRG90IGRlbGF5PXszMjB9IG9mZnNldD17IWlzUnRsfSAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcbkxvYWRpbmdJbmRpY2F0b3IuZGVmYXVsdFByb3BzID0geyBzaXplOiA0IH07XG4iXX0= */",
                                                            "name": "19bqh2r",
                                                            "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                            "toString": [Function],
                                                          }
                                                        }
                                                        focusable="false"
                                                        height={20}
                                                        viewBox="0 0 20 20"
                                                        width={20}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="css-6q0nyr-Svg"
                                                          focusable="false"
                                                          height={20}
                                                          viewBox="0 0 20 20"
                                                          width={20}
                                                        >
                                                          <path
                                                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                          />
                                                        </svg>
                                                      </EmotionCssPropInternal>
                                                    </Svg>
                                                  </DownChevron>
                                                </div>
                                              </EmotionCssPropInternal>
                                            </DropdownIndicator>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </IndicatorsContainer>
                                    </div>
                                  </EmotionCssPropInternal>
                                </Control>
                                <input
                                  name="judgeDropdown"
                                  type="hidden"
                                  value={null}
                                />
                              </div>
                            </EmotionCssPropInternal>
                          </SelectContainer>
                        </Select>
                      </StateManager>
                    </div>
                  </div>
                </div>
              </SearchableDropdown>
            </JudgeDropdown>
          </Connect(JudgeDropdown)>
          <Connect(HearingCoordinatorDropdown)
            name="hearingCoordinatorDropdown"
            onChange={[Function]}
            value={null}
          >
            <HearingCoordinatorDropdown
              hearingCoordinators={
                Object {
                  "isFetching": false,
                  "options": Array [],
                }
              }
              label="Hearing Coordinator"
              name="hearingCoordinatorDropdown"
              onChange={[Function]}
              onFetchDropdownData={[Function]}
              onReceiveDropdownData={[Function]}
              value={null}
            >
              <SearchableDropdown
                clearOnSelect={false}
                label="Hearing Coordinator"
                loading={false}
                name="hearingCoordinatorDropdown"
                onChange={[Function]}
                options={Array []}
                strongLabel={true}
                value={
                  Object {
                    "label": null,
                    "value": null,
                  }
                }
              >
                <div
                  className=""
                >
                  <div
                    className="cf-form-dropdown dropdown-hearingCoordinatorDropdown"
                  >
                    <label
                      className="question-label"
                      htmlFor="hearing-coordinator-dropdown"
                      id="hearing-coordinator-dropdown-label"
                    >
                      <strong>
                        <FormLabel
                          label="Hearing Coordinator"
                          name="Hearing Coordinator"
                        >
                          <span>
                            Hearing Coordinator
                          </span>
                        </FormLabel>
                      </strong>
                    </label>
                    <div
                      className="cf-select"
                    >
                      <StateManager
                        cache={false}
                        classNamePrefix="cf-select"
                        components={
                          Object {
                            "Input": [Function],
                            "MenuList": [Function],
                            "Option": [Function],
                          }
                        }
                        defaultInputValue=""
                        defaultMenuIsOpen={false}
                        defaultValue={null}
                        inputId="hearing-coordinator-dropdown"
                        isLoading={false}
                        isSearchable={true}
                        name="hearingCoordinatorDropdown"
                        noOptionsMessage={[Function]}
                        onBlurResetsInput={false}
                        onChange={[Function]}
                        onMenuClose={[Function]}
                        onMenuOpen={[Function]}
                        options={Array []}
                        shouldKeyDownEventCreateNewOption={[Function]}
                        styles={
                          Object {
                            "input": [Function],
                          }
                        }
                        value={
                          Object {
                            "label": null,
                            "value": null,
                          }
                        }
                      >
                        <Select
                          backspaceRemovesValue={true}
                          blurInputOnSelect={true}
                          cache={false}
                          captureMenuScroll={false}
                          classNamePrefix="cf-select"
                          closeMenuOnScroll={false}
                          closeMenuOnSelect={true}
                          components={
                            Object {
                              "Input": [Function],
                              "MenuList": [Function],
                              "Option": [Function],
                            }
                          }
                          controlShouldRenderValue={true}
                          escapeClearsValue={false}
                          filterOption={[Function]}
                          formatGroupLabel={[Function]}
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          inputId="hearing-coordinator-dropdown"
                          inputValue=""
                          isDisabled={false}
                          isLoading={false}
                          isMulti={false}
                          isOptionDisabled={[Function]}
                          isRtl={false}
                          isSearchable={true}
                          loadingMessage={[Function]}
                          maxMenuHeight={300}
                          menuIsOpen={false}
                          menuPlacement="bottom"
                          menuPosition="absolute"
                          menuShouldBlockScroll={false}
                          menuShouldScrollIntoView={true}
                          minMenuHeight={140}
                          name="hearingCoordinatorDropdown"
                          noOptionsMessage={[Function]}
                          onBlurResetsInput={false}
                          onChange={[Function]}
                          onInputChange={[Function]}
                          onMenuClose={[Function]}
                          onMenuOpen={[Function]}
                          openMenuOnClick={true}
                          openMenuOnFocus={false}
                          options={Array []}
                          pageSize={5}
                          placeholder="Select..."
                          screenReaderStatus={[Function]}
                          shouldKeyDownEventCreateNewOption={[Function]}
                          styles={
                            Object {
                              "input": [Function],
                            }
                          }
                          tabIndex="0"
                          tabSelectsValue={true}
                          value={
                            Object {
                              "label": null,
                              "value": null,
                            }
                          }
                        >
                          <SelectContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            innerProps={
                              Object {
                                "id": undefined,
                                "onKeyDown": [Function],
                              }
                            }
                            isDisabled={false}
                            isFocused={false}
                            isMulti={false}
                            isRtl={false}
                            options={Array []}
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {
                                  "Input": [Function],
                                  "MenuList": [Function],
                                  "Option": [Function],
                                },
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "hearing-coordinator-dropdown",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "name": "hearingCoordinatorDropdown",
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": null,
                                  "value": null,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className=""
                              css={
                                Object {
                                  "boxSizing": "border-box",
                                  "direction": null,
                                  "label": "container",
                                  "pointerEvents": null,
                                  "position": "relative",
                                }
                              }
                              onKeyDown={[Function]}
                            >
                              <div
                                className=" css-2b097c-container"
                                onKeyDown={[Function]}
                              >
                                <Control
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  menuIsOpen={false}
                                  options={Array []}
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {
                                        "Input": [Function],
                                        "MenuList": [Function],
                                        "Option": [Function],
                                      },
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearing-coordinator-dropdown",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "name": "hearingCoordinatorDropdown",
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": null,
                                        "value": null,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    className="cf-select__control"
                                    css={
                                      Object {
                                        "&:hover": Object {
                                          "borderColor": "hsl(0, 0%, 70%)",
                                        },
                                        "alignItems": "center",
                                        "backgroundColor": "hsl(0, 0%, 100%)",
                                        "borderColor": "hsl(0, 0%, 80%)",
                                        "borderRadius": 4,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "boxShadow": null,
                                        "boxSizing": "border-box",
                                        "cursor": "default",
                                        "display": "flex",
                                        "flexWrap": "wrap",
                                        "justifyContent": "space-between",
                                        "label": "control",
                                        "minHeight": 38,
                                        "outline": "0 !important",
                                        "position": "relative",
                                        "transition": "all 100ms",
                                      }
                                    }
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <div
                                      className="cf-select__control css-yk16xz-control"
                                      onMouseDown={[Function]}
                                      onTouchEnd={[Function]}
                                    >
                                      <ValueContainer
                                        clearValue={[Function]}
                                        cx={[Function]}
                                        getStyles={[Function]}
                                        getValue={[Function]}
                                        hasValue={true}
                                        isDisabled={false}
                                        isMulti={false}
                                        isRtl={false}
                                        options={Array []}
                                        selectOption={[Function]}
                                        selectProps={
                                          Object {
                                            "backspaceRemovesValue": true,
                                            "blurInputOnSelect": true,
                                            "cache": false,
                                            "captureMenuScroll": false,
                                            "classNamePrefix": "cf-select",
                                            "closeMenuOnScroll": false,
                                            "closeMenuOnSelect": true,
                                            "components": Object {
                                              "Input": [Function],
                                              "MenuList": [Function],
                                              "Option": [Function],
                                            },
                                            "controlShouldRenderValue": true,
                                            "defaultOptions": undefined,
                                            "escapeClearsValue": false,
                                            "filterOption": [Function],
                                            "formatGroupLabel": [Function],
                                            "getOptionLabel": [Function],
                                            "getOptionValue": [Function],
                                            "inputId": "hearing-coordinator-dropdown",
                                            "inputValue": "",
                                            "isClearable": undefined,
                                            "isDisabled": false,
                                            "isLoading": false,
                                            "isMulti": false,
                                            "isOptionDisabled": [Function],
                                            "isRtl": false,
                                            "isSearchable": true,
                                            "loadOptions": undefined,
                                            "loadingMessage": [Function],
                                            "maxMenuHeight": 300,
                                            "menuIsOpen": false,
                                            "menuPlacement": "bottom",
                                            "menuPosition": "absolute",
                                            "menuShouldBlockScroll": false,
                                            "menuShouldScrollIntoView": true,
                                            "minMenuHeight": 140,
                                            "name": "hearingCoordinatorDropdown",
                                            "noOptionsMessage": [Function],
                                            "onBlurResetsInput": false,
                                            "onChange": [Function],
                                            "onInputChange": [Function],
                                            "onMenuClose": [Function],
                                            "onMenuOpen": [Function],
                                            "openMenuOnClick": true,
                                            "openMenuOnFocus": false,
                                            "options": Array [],
                                            "pageSize": 5,
                                            "placeholder": "Select...",
                                            "screenReaderStatus": [Function],
                                            "searchable": undefined,
                                            "shouldKeyDownEventCreateNewOption": [Function],
                                            "styles": Object {
                                              "input": [Function],
                                            },
                                            "tabIndex": "0",
                                            "tabSelectsValue": true,
                                            "value": Object {
                                              "label": null,
                                              "value": null,
                                            },
                                          }
                                        }
                                        setValue={[Function]}
                                        theme={
                                          Object {
                                            "borderRadius": 4,
                                            "colors": Object {
                                              "danger": "#DE350B",
                                              "dangerLight": "#FFBDAD",
                                              "neutral0": "hsl(0, 0%, 100%)",
                                              "neutral10": "hsl(0, 0%, 90%)",
                                              "neutral20": "hsl(0, 0%, 80%)",
                                              "neutral30": "hsl(0, 0%, 70%)",
                                              "neutral40": "hsl(0, 0%, 60%)",
                                              "neutral5": "hsl(0, 0%, 95%)",
                                              "neutral50": "hsl(0, 0%, 50%)",
                                              "neutral60": "hsl(0, 0%, 40%)",
                                              "neutral70": "hsl(0, 0%, 30%)",
                                              "neutral80": "hsl(0, 0%, 20%)",
                                              "neutral90": "hsl(0, 0%, 10%)",
                                              "primary": "#2684FF",
                                              "primary25": "#DEEBFF",
                                              "primary50": "#B2D4FF",
                                              "primary75": "#4C9AFF",
                                            },
                                            "spacing": Object {
                                              "baseUnit": 4,
                                              "controlHeight": 38,
                                              "menuGutter": 8,
                                            },
                                          }
                                        }
                                      >
                                        <EmotionCssPropInternal
                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                          className="cf-select__value-container cf-select__value-container--has-value"
                                          css={
                                            Object {
                                              "WebkitOverflowScrolling": "touch",
                                              "alignItems": "center",
                                              "boxSizing": "border-box",
                                              "display": "flex",
                                              "flex": 1,
                                              "flexWrap": "wrap",
                                              "overflow": "hidden",
                                              "padding": "2px 8px",
                                              "position": "relative",
                                            }
                                          }
                                        >
                                          <div
                                            className="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                                          >
                                            <SingleValue
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              data={
                                                Object {
                                                  "label": null,
                                                  "value": null,
                                                }
                                              }
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              isDisabled={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={Array []}
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "hearing-coordinator-dropdown",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "hearingCoordinatorDropdown",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": null,
                                                    "value": null,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                className="cf-select__single-value"
                                                css={
                                                  Object {
                                                    "boxSizing": "border-box",
                                                    "color": "hsl(0, 0%, 20%)",
                                                    "label": "singleValue",
                                                    "marginLeft": 2,
                                                    "marginRight": 2,
                                                    "maxWidth": "calc(100% - 8px)",
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "textOverflow": "ellipsis",
                                                    "top": "50%",
                                                    "transform": "translateY(-50%)",
                                                    "whiteSpace": "nowrap",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="cf-select__single-value css-1uccc91-singleValue"
                                                />
                                              </EmotionCssPropInternal>
                                            </SingleValue>
                                            <CustomInput
                                              aria-autocomplete="list"
                                              autoCapitalize="none"
                                              autoComplete="off"
                                              autoCorrect="off"
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              id="hearing-coordinator-dropdown"
                                              innerRef={[Function]}
                                              isDisabled={false}
                                              isHidden={false}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "hearing-coordinator-dropdown",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "hearingCoordinatorDropdown",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": null,
                                                    "value": null,
                                                  },
                                                }
                                              }
                                              spellCheck="false"
                                              tabIndex="0"
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                              type="text"
                                              value=""
                                            >
                                              <Input
                                                aria-autocomplete="list"
                                                aria-expanded={false}
                                                aria-haspopup={true}
                                                aria-labelledby="hearing-coordinator-dropdown-label"
                                                aria-owns="hearing-coordinator-dropdown-listbox"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                id="hearing-coordinator-dropdown"
                                                innerRef={[Function]}
                                                isDisabled={false}
                                                isHidden={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                role="combobox"
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cache": false,
                                                    "captureMenuScroll": false,
                                                    "classNamePrefix": "cf-select",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "Input": [Function],
                                                      "MenuList": [Function],
                                                      "Option": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputId": "hearing-coordinator-dropdown",
                                                    "inputValue": "",
                                                    "isClearable": undefined,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadOptions": undefined,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "hearingCoordinatorDropdown",
                                                    "noOptionsMessage": [Function],
                                                    "onBlurResetsInput": false,
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "searchable": undefined,
                                                    "shouldKeyDownEventCreateNewOption": [Function],
                                                    "styles": Object {
                                                      "input": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": Object {
                                                      "label": null,
                                                      "value": null,
                                                    },
                                                  }
                                                }
                                                spellCheck="false"
                                                tabIndex="0"
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                                type="text"
                                                value=""
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  css={
                                                    Object {
                                                      "height": "44px",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="css-81nyic-Input"
                                                  >
                                                    <AutosizeInput
                                                      aria-autocomplete="list"
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      aria-labelledby="hearing-coordinator-dropdown-label"
                                                      aria-owns="hearing-coordinator-dropdown-listbox"
                                                      autoCapitalize="none"
                                                      autoComplete="off"
                                                      autoCorrect="off"
                                                      className="cf-select__input"
                                                      disabled={false}
                                                      id="hearing-coordinator-dropdown"
                                                      injectStyles={true}
                                                      inputRef={[Function]}
                                                      inputStyle={
                                                        Object {
                                                          "background": 0,
                                                          "border": 0,
                                                          "color": "inherit",
                                                          "fontSize": "inherit",
                                                          "label": "input",
                                                          "opacity": 1,
                                                          "outline": 0,
                                                          "padding": 0,
                                                        }
                                                      }
                                                      minWidth={1}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      role="combobox"
                                                      spellCheck="false"
                                                      tabIndex="0"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="cf-select__input"
                                                        style={
                                                          Object {
                                                            "display": "inline-block",
                                                          }
                                                        }
                                                      >
                                                        <input
                                                          aria-autocomplete="list"
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          aria-labelledby="hearing-coordinator-dropdown-label"
                                                          aria-owns="hearing-coordinator-dropdown-listbox"
                                                          autoCapitalize="none"
                                                          autoComplete="off"
                                                          autoCorrect="off"
                                                          disabled={false}
                                                          id="hearing-coordinator-dropdown"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          role="combobox"
                                                          spellCheck="false"
                                                          style={
                                                            Object {
                                                              "background": 0,
                                                              "border": 0,
                                                              "boxSizing": "content-box",
                                                              "color": "inherit",
                                                              "fontSize": "inherit",
                                                              "label": "input",
                                                              "opacity": 1,
                                                              "outline": 0,
                                                              "padding": 0,
                                                              "width": "2px",
                                                            }
                                                          }
                                                          tabIndex="0"
                                                          type="text"
                                                          value=""
                                                        />
                                                        <div
                                                          style={
                                                            Object {
                                                              "height": 0,
                                                              "left": 0,
                                                              "overflow": "scroll",
                                                              "position": "absolute",
                                                              "top": 0,
                                                              "visibility": "hidden",
                                                              "whiteSpace": "pre",
                                                            }
                                                          }
                                                        />
                                                      </div>
                                                    </AutosizeInput>
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </Input>
                                            </CustomInput>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </ValueContainer>
                                      <IndicatorsContainer
                                        clearValue={[Function]}
                                        cx={[Function]}
                                        getStyles={[Function]}
                                        getValue={[Function]}
                                        hasValue={true}
                                        isDisabled={false}
                                        isMulti={false}
                                        isRtl={false}
                                        options={Array []}
                                        selectOption={[Function]}
                                        selectProps={
                                          Object {
                                            "backspaceRemovesValue": true,
                                            "blurInputOnSelect": true,
                                            "cache": false,
                                            "captureMenuScroll": false,
                                            "classNamePrefix": "cf-select",
                                            "closeMenuOnScroll": false,
                                            "closeMenuOnSelect": true,
                                            "components": Object {
                                              "Input": [Function],
                                              "MenuList": [Function],
                                              "Option": [Function],
                                            },
                                            "controlShouldRenderValue": true,
                                            "defaultOptions": undefined,
                                            "escapeClearsValue": false,
                                            "filterOption": [Function],
                                            "formatGroupLabel": [Function],
                                            "getOptionLabel": [Function],
                                            "getOptionValue": [Function],
                                            "inputId": "hearing-coordinator-dropdown",
                                            "inputValue": "",
                                            "isClearable": undefined,
                                            "isDisabled": false,
                                            "isLoading": false,
                                            "isMulti": false,
                                            "isOptionDisabled": [Function],
                                            "isRtl": false,
                                            "isSearchable": true,
                                            "loadOptions": undefined,
                                            "loadingMessage": [Function],
                                            "maxMenuHeight": 300,
                                            "menuIsOpen": false,
                                            "menuPlacement": "bottom",
                                            "menuPosition": "absolute",
                                            "menuShouldBlockScroll": false,
                                            "menuShouldScrollIntoView": true,
                                            "minMenuHeight": 140,
                                            "name": "hearingCoordinatorDropdown",
                                            "noOptionsMessage": [Function],
                                            "onBlurResetsInput": false,
                                            "onChange": [Function],
                                            "onInputChange": [Function],
                                            "onMenuClose": [Function],
                                            "onMenuOpen": [Function],
                                            "openMenuOnClick": true,
                                            "openMenuOnFocus": false,
                                            "options": Array [],
                                            "pageSize": 5,
                                            "placeholder": "Select...",
                                            "screenReaderStatus": [Function],
                                            "searchable": undefined,
                                            "shouldKeyDownEventCreateNewOption": [Function],
                                            "styles": Object {
                                              "input": [Function],
                                            },
                                            "tabIndex": "0",
                                            "tabSelectsValue": true,
                                            "value": Object {
                                              "label": null,
                                              "value": null,
                                            },
                                          }
                                        }
                                        setValue={[Function]}
                                        theme={
                                          Object {
                                            "borderRadius": 4,
                                            "colors": Object {
                                              "danger": "#DE350B",
                                              "dangerLight": "#FFBDAD",
                                              "neutral0": "hsl(0, 0%, 100%)",
                                              "neutral10": "hsl(0, 0%, 90%)",
                                              "neutral20": "hsl(0, 0%, 80%)",
                                              "neutral30": "hsl(0, 0%, 70%)",
                                              "neutral40": "hsl(0, 0%, 60%)",
                                              "neutral5": "hsl(0, 0%, 95%)",
                                              "neutral50": "hsl(0, 0%, 50%)",
                                              "neutral60": "hsl(0, 0%, 40%)",
                                              "neutral70": "hsl(0, 0%, 30%)",
                                              "neutral80": "hsl(0, 0%, 20%)",
                                              "neutral90": "hsl(0, 0%, 10%)",
                                              "primary": "#2684FF",
                                              "primary25": "#DEEBFF",
                                              "primary50": "#B2D4FF",
                                              "primary75": "#4C9AFF",
                                            },
                                            "spacing": Object {
                                              "baseUnit": 4,
                                              "controlHeight": 38,
                                              "menuGutter": 8,
                                            },
                                          }
                                        }
                                      >
                                        <EmotionCssPropInternal
                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                          className="cf-select__indicators"
                                          css={
                                            Object {
                                              "alignItems": "center",
                                              "alignSelf": "stretch",
                                              "boxSizing": "border-box",
                                              "display": "flex",
                                              "flexShrink": 0,
                                            }
                                          }
                                        >
                                          <div
                                            className="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                                          >
                                            <IndicatorSeparator
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              isDisabled={false}
                                              isFocused={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={Array []}
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "hearing-coordinator-dropdown",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "hearingCoordinatorDropdown",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": null,
                                                    "value": null,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                className="cf-select__indicator-separator"
                                                css={
                                                  Object {
                                                    "alignSelf": "stretch",
                                                    "backgroundColor": "hsl(0, 0%, 80%)",
                                                    "boxSizing": "border-box",
                                                    "label": "indicatorSeparator",
                                                    "marginBottom": 8,
                                                    "marginTop": 8,
                                                    "width": 1,
                                                  }
                                                }
                                              >
                                                <span
                                                  className="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                                                />
                                              </EmotionCssPropInternal>
                                            </IndicatorSeparator>
                                            <DropdownIndicator
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              innerProps={
                                                Object {
                                                  "aria-hidden": "true",
                                                  "onMouseDown": [Function],
                                                  "onTouchEnd": [Function],
                                                }
                                              }
                                              isDisabled={false}
                                              isFocused={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={Array []}
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "hearing-coordinator-dropdown",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "hearingCoordinatorDropdown",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": null,
                                                    "value": null,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                aria-hidden="true"
                                                className="cf-select__indicator cf-select__dropdown-indicator"
                                                css={
                                                  Object {
                                                    ":hover": Object {
                                                      "color": "hsl(0, 0%, 60%)",
                                                    },
                                                    "boxSizing": "border-box",
                                                    "color": "hsl(0, 0%, 80%)",
                                                    "display": "flex",
                                                    "label": "indicatorContainer",
                                                    "padding": 8,
                                                    "transition": "color 150ms",
                                                  }
                                                }
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <div
                                                  aria-hidden="true"
                                                  className="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                  onMouseDown={[Function]}
                                                  onTouchEnd={[Function]}
                                                >
                                                  <DownChevron>
                                                    <Svg
                                                      size={20}
                                                    >
                                                      <EmotionCssPropInternal
                                                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                        aria-hidden="true"
                                                        css={
                                                          Object {
                                                            "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                            "name": "19bqh2r",
                                                            "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                            "toString": [Function],
                                                          }
                                                        }
                                                        focusable="false"
                                                        height={20}
                                                        viewBox="0 0 20 20"
                                                        width={20}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="css-6q0nyr-Svg"
                                                          focusable="false"
                                                          height={20}
                                                          viewBox="0 0 20 20"
                                                          width={20}
                                                        >
                                                          <path
                                                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                          />
                                                        </svg>
                                                      </EmotionCssPropInternal>
                                                    </Svg>
                                                  </DownChevron>
                                                </div>
                                              </EmotionCssPropInternal>
                                            </DropdownIndicator>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </IndicatorsContainer>
                                    </div>
                                  </EmotionCssPropInternal>
                                </Control>
                                <input
                                  name="hearingCoordinatorDropdown"
                                  type="hidden"
                                  value={null}
                                />
                              </div>
                            </EmotionCssPropInternal>
                          </SelectContainer>
                        </Select>
                      </StateManager>
                    </div>
                  </div>
                </div>
              </SearchableDropdown>
            </HearingCoordinatorDropdown>
          </Connect(HearingCoordinatorDropdown)>
          <HearingRoomDropdown
            label="Hearing Room"
            name="hearingRoomDropdown"
            onChange={[Function]}
            value="1"
          >
            <SearchableDropdown
              clearOnSelect={false}
              label="Hearing Room"
              loading={false}
              name="hearingRoomDropdown"
              onChange={[Function]}
              options={
                Array [
                  Object {
                    "label": "None",
                    "value": null,
                  },
                  Object {
                    "label": "1 (1W200A)",
                    "value": "1",
                  },
                  Object {
                    "label": "2 (1W200B)",
                    "value": "2",
                  },
                  Object {
                    "label": "3 (1W200C)",
                    "value": "3",
                  },
                  Object {
                    "label": "4 (1W424)",
                    "value": "4",
                  },
                  Object {
                    "label": "5 (1W428)",
                    "value": "5",
                  },
                  Object {
                    "label": "6 (1W432)",
                    "value": "6",
                  },
                  Object {
                    "label": "7 (1W434)",
                    "value": "7",
                  },
                  Object {
                    "label": "8 (1W435)",
                    "value": "8",
                  },
                  Object {
                    "label": "9 (1W436)",
                    "value": "9",
                  },
                  Object {
                    "label": "10 (1W437)",
                    "value": "10",
                  },
                  Object {
                    "label": "11 (1W438)",
                    "value": "11",
                  },
                  Object {
                    "label": "12 (1W439)",
                    "value": "12",
                  },
                  Object {
                    "label": "13 (1W440)",
                    "value": "13",
                  },
                  Object {
                    "label": "14 (3W405)",
                    "value": "14",
                  },
                  Object {
                    "label": "15 (3W407)",
                    "value": "15",
                  },
                  Object {
                    "label": "16 (3W409)",
                    "value": "16",
                  },
                  Object {
                    "label": "17 (3W518)",
                    "value": "17",
                  },
                  Object {
                    "label": "18 (4W325)",
                    "value": "18",
                  },
                  Object {
                    "label": "Utah",
                    "value": "19",
                  },
                  Object {
                    "label": "Gold",
                    "value": "20",
                  },
                  Object {
                    "label": "Juno",
                    "value": "21",
                  },
                  Object {
                    "label": "Sword",
                    "value": "22",
                  },
                  Object {
                    "label": "Omaha",
                    "value": "23",
                  },
                  Object {
                    "label": "Anzio",
                    "value": "24",
                  },
                  Object {
                    "label": "Coral Sea",
                    "value": "25",
                  },
                  Object {
                    "label": "Hue City",
                    "value": "26",
                  },
                  Object {
                    "label": "Antietam",
                    "value": "27",
                  },
                  Object {
                    "label": "Mogadishu",
                    "value": "28",
                  },
                ]
              }
              strongLabel={true}
              value={
                Object {
                  "label": "1 (1W200A)",
                  "value": "1",
                }
              }
            >
              <div
                className=""
              >
                <div
                  className="cf-form-dropdown dropdown-hearingRoomDropdown"
                >
                  <label
                    className="question-label"
                    htmlFor="hearing-room-dropdown"
                    id="hearing-room-dropdown-label"
                  >
                    <strong>
                      <FormLabel
                        label="Hearing Room"
                        name="Hearing Room"
                      >
                        <span>
                          Hearing Room
                        </span>
                      </FormLabel>
                    </strong>
                  </label>
                  <div
                    className="cf-select"
                  >
                    <StateManager
                      cache={false}
                      classNamePrefix="cf-select"
                      components={
                        Object {
                          "Input": [Function],
                          "MenuList": [Function],
                          "Option": [Function],
                        }
                      }
                      defaultInputValue=""
                      defaultMenuIsOpen={false}
                      defaultValue={null}
                      inputId="hearing-room-dropdown"
                      isLoading={false}
                      isSearchable={true}
                      name="hearingRoomDropdown"
                      noOptionsMessage={[Function]}
                      onBlurResetsInput={false}
                      onChange={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "None",
                            "value": null,
                          },
                          Object {
                            "label": "1 (1W200A)",
                            "value": "1",
                          },
                          Object {
                            "label": "2 (1W200B)",
                            "value": "2",
                          },
                          Object {
                            "label": "3 (1W200C)",
                            "value": "3",
                          },
                          Object {
                            "label": "4 (1W424)",
                            "value": "4",
                          },
                          Object {
                            "label": "5 (1W428)",
                            "value": "5",
                          },
                          Object {
                            "label": "6 (1W432)",
                            "value": "6",
                          },
                          Object {
                            "label": "7 (1W434)",
                            "value": "7",
                          },
                          Object {
                            "label": "8 (1W435)",
                            "value": "8",
                          },
                          Object {
                            "label": "9 (1W436)",
                            "value": "9",
                          },
                          Object {
                            "label": "10 (1W437)",
                            "value": "10",
                          },
                          Object {
                            "label": "11 (1W438)",
                            "value": "11",
                          },
                          Object {
                            "label": "12 (1W439)",
                            "value": "12",
                          },
                          Object {
                            "label": "13 (1W440)",
                            "value": "13",
                          },
                          Object {
                            "label": "14 (3W405)",
                            "value": "14",
                          },
                          Object {
                            "label": "15 (3W407)",
                            "value": "15",
                          },
                          Object {
                            "label": "16 (3W409)",
                            "value": "16",
                          },
                          Object {
                            "label": "17 (3W518)",
                            "value": "17",
                          },
                          Object {
                            "label": "18 (4W325)",
                            "value": "18",
                          },
                          Object {
                            "label": "Utah",
                            "value": "19",
                          },
                          Object {
                            "label": "Gold",
                            "value": "20",
                          },
                          Object {
                            "label": "Juno",
                            "value": "21",
                          },
                          Object {
                            "label": "Sword",
                            "value": "22",
                          },
                          Object {
                            "label": "Omaha",
                            "value": "23",
                          },
                          Object {
                            "label": "Anzio",
                            "value": "24",
                          },
                          Object {
                            "label": "Coral Sea",
                            "value": "25",
                          },
                          Object {
                            "label": "Hue City",
                            "value": "26",
                          },
                          Object {
                            "label": "Antietam",
                            "value": "27",
                          },
                          Object {
                            "label": "Mogadishu",
                            "value": "28",
                          },
                        ]
                      }
                      shouldKeyDownEventCreateNewOption={[Function]}
                      styles={
                        Object {
                          "input": [Function],
                        }
                      }
                      value={
                        Object {
                          "label": "1 (1W200A)",
                          "value": "1",
                        }
                      }
                    >
                      <Select
                        backspaceRemovesValue={true}
                        blurInputOnSelect={true}
                        cache={false}
                        captureMenuScroll={false}
                        classNamePrefix="cf-select"
                        closeMenuOnScroll={false}
                        closeMenuOnSelect={true}
                        components={
                          Object {
                            "Input": [Function],
                            "MenuList": [Function],
                            "Option": [Function],
                          }
                        }
                        controlShouldRenderValue={true}
                        escapeClearsValue={false}
                        filterOption={[Function]}
                        formatGroupLabel={[Function]}
                        getOptionLabel={[Function]}
                        getOptionValue={[Function]}
                        inputId="hearing-room-dropdown"
                        inputValue=""
                        isDisabled={false}
                        isLoading={false}
                        isMulti={false}
                        isOptionDisabled={[Function]}
                        isRtl={false}
                        isSearchable={true}
                        loadingMessage={[Function]}
                        maxMenuHeight={300}
                        menuIsOpen={false}
                        menuPlacement="bottom"
                        menuPosition="absolute"
                        menuShouldBlockScroll={false}
                        menuShouldScrollIntoView={true}
                        minMenuHeight={140}
                        name="hearingRoomDropdown"
                        noOptionsMessage={[Function]}
                        onBlurResetsInput={false}
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onMenuClose={[Function]}
                        onMenuOpen={[Function]}
                        openMenuOnClick={true}
                        openMenuOnFocus={false}
                        options={
                          Array [
                            Object {
                              "label": "None",
                              "value": null,
                            },
                            Object {
                              "label": "1 (1W200A)",
                              "value": "1",
                            },
                            Object {
                              "label": "2 (1W200B)",
                              "value": "2",
                            },
                            Object {
                              "label": "3 (1W200C)",
                              "value": "3",
                            },
                            Object {
                              "label": "4 (1W424)",
                              "value": "4",
                            },
                            Object {
                              "label": "5 (1W428)",
                              "value": "5",
                            },
                            Object {
                              "label": "6 (1W432)",
                              "value": "6",
                            },
                            Object {
                              "label": "7 (1W434)",
                              "value": "7",
                            },
                            Object {
                              "label": "8 (1W435)",
                              "value": "8",
                            },
                            Object {
                              "label": "9 (1W436)",
                              "value": "9",
                            },
                            Object {
                              "label": "10 (1W437)",
                              "value": "10",
                            },
                            Object {
                              "label": "11 (1W438)",
                              "value": "11",
                            },
                            Object {
                              "label": "12 (1W439)",
                              "value": "12",
                            },
                            Object {
                              "label": "13 (1W440)",
                              "value": "13",
                            },
                            Object {
                              "label": "14 (3W405)",
                              "value": "14",
                            },
                            Object {
                              "label": "15 (3W407)",
                              "value": "15",
                            },
                            Object {
                              "label": "16 (3W409)",
                              "value": "16",
                            },
                            Object {
                              "label": "17 (3W518)",
                              "value": "17",
                            },
                            Object {
                              "label": "18 (4W325)",
                              "value": "18",
                            },
                            Object {
                              "label": "Utah",
                              "value": "19",
                            },
                            Object {
                              "label": "Gold",
                              "value": "20",
                            },
                            Object {
                              "label": "Juno",
                              "value": "21",
                            },
                            Object {
                              "label": "Sword",
                              "value": "22",
                            },
                            Object {
                              "label": "Omaha",
                              "value": "23",
                            },
                            Object {
                              "label": "Anzio",
                              "value": "24",
                            },
                            Object {
                              "label": "Coral Sea",
                              "value": "25",
                            },
                            Object {
                              "label": "Hue City",
                              "value": "26",
                            },
                            Object {
                              "label": "Antietam",
                              "value": "27",
                            },
                            Object {
                              "label": "Mogadishu",
                              "value": "28",
                            },
                          ]
                        }
                        pageSize={5}
                        placeholder="Select..."
                        screenReaderStatus={[Function]}
                        shouldKeyDownEventCreateNewOption={[Function]}
                        styles={
                          Object {
                            "input": [Function],
                          }
                        }
                        tabIndex="0"
                        tabSelectsValue={true}
                        value={
                          Object {
                            "label": "1 (1W200A)",
                            "value": "1",
                          }
                        }
                      >
                        <SelectContainer
                          clearValue={[Function]}
                          cx={[Function]}
                          getStyles={[Function]}
                          getValue={[Function]}
                          hasValue={true}
                          innerProps={
                            Object {
                              "id": undefined,
                              "onKeyDown": [Function],
                            }
                          }
                          isDisabled={false}
                          isFocused={false}
                          isMulti={false}
                          isRtl={false}
                          options={
                            Array [
                              Object {
                                "label": "None",
                                "value": null,
                              },
                              Object {
                                "label": "1 (1W200A)",
                                "value": "1",
                              },
                              Object {
                                "label": "2 (1W200B)",
                                "value": "2",
                              },
                              Object {
                                "label": "3 (1W200C)",
                                "value": "3",
                              },
                              Object {
                                "label": "4 (1W424)",
                                "value": "4",
                              },
                              Object {
                                "label": "5 (1W428)",
                                "value": "5",
                              },
                              Object {
                                "label": "6 (1W432)",
                                "value": "6",
                              },
                              Object {
                                "label": "7 (1W434)",
                                "value": "7",
                              },
                              Object {
                                "label": "8 (1W435)",
                                "value": "8",
                              },
                              Object {
                                "label": "9 (1W436)",
                                "value": "9",
                              },
                              Object {
                                "label": "10 (1W437)",
                                "value": "10",
                              },
                              Object {
                                "label": "11 (1W438)",
                                "value": "11",
                              },
                              Object {
                                "label": "12 (1W439)",
                                "value": "12",
                              },
                              Object {
                                "label": "13 (1W440)",
                                "value": "13",
                              },
                              Object {
                                "label": "14 (3W405)",
                                "value": "14",
                              },
                              Object {
                                "label": "15 (3W407)",
                                "value": "15",
                              },
                              Object {
                                "label": "16 (3W409)",
                                "value": "16",
                              },
                              Object {
                                "label": "17 (3W518)",
                                "value": "17",
                              },
                              Object {
                                "label": "18 (4W325)",
                                "value": "18",
                              },
                              Object {
                                "label": "Utah",
                                "value": "19",
                              },
                              Object {
                                "label": "Gold",
                                "value": "20",
                              },
                              Object {
                                "label": "Juno",
                                "value": "21",
                              },
                              Object {
                                "label": "Sword",
                                "value": "22",
                              },
                              Object {
                                "label": "Omaha",
                                "value": "23",
                              },
                              Object {
                                "label": "Anzio",
                                "value": "24",
                              },
                              Object {
                                "label": "Coral Sea",
                                "value": "25",
                              },
                              Object {
                                "label": "Hue City",
                                "value": "26",
                              },
                              Object {
                                "label": "Antietam",
                                "value": "27",
                              },
                              Object {
                                "label": "Mogadishu",
                                "value": "28",
                              },
                            ]
                          }
                          selectOption={[Function]}
                          selectProps={
                            Object {
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cache": false,
                              "captureMenuScroll": false,
                              "classNamePrefix": "cf-select",
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {
                                "Input": [Function],
                                "MenuList": [Function],
                                "Option": [Function],
                              },
                              "controlShouldRenderValue": true,
                              "defaultOptions": undefined,
                              "escapeClearsValue": false,
                              "filterOption": [Function],
                              "formatGroupLabel": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputId": "hearing-room-dropdown",
                              "inputValue": "",
                              "isClearable": undefined,
                              "isDisabled": false,
                              "isLoading": false,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "loadOptions": undefined,
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "name": "hearingRoomDropdown",
                              "noOptionsMessage": [Function],
                              "onBlurResetsInput": false,
                              "onChange": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [
                                Object {
                                  "label": "None",
                                  "value": null,
                                },
                                Object {
                                  "label": "1 (1W200A)",
                                  "value": "1",
                                },
                                Object {
                                  "label": "2 (1W200B)",
                                  "value": "2",
                                },
                                Object {
                                  "label": "3 (1W200C)",
                                  "value": "3",
                                },
                                Object {
                                  "label": "4 (1W424)",
                                  "value": "4",
                                },
                                Object {
                                  "label": "5 (1W428)",
                                  "value": "5",
                                },
                                Object {
                                  "label": "6 (1W432)",
                                  "value": "6",
                                },
                                Object {
                                  "label": "7 (1W434)",
                                  "value": "7",
                                },
                                Object {
                                  "label": "8 (1W435)",
                                  "value": "8",
                                },
                                Object {
                                  "label": "9 (1W436)",
                                  "value": "9",
                                },
                                Object {
                                  "label": "10 (1W437)",
                                  "value": "10",
                                },
                                Object {
                                  "label": "11 (1W438)",
                                  "value": "11",
                                },
                                Object {
                                  "label": "12 (1W439)",
                                  "value": "12",
                                },
                                Object {
                                  "label": "13 (1W440)",
                                  "value": "13",
                                },
                                Object {
                                  "label": "14 (3W405)",
                                  "value": "14",
                                },
                                Object {
                                  "label": "15 (3W407)",
                                  "value": "15",
                                },
                                Object {
                                  "label": "16 (3W409)",
                                  "value": "16",
                                },
                                Object {
                                  "label": "17 (3W518)",
                                  "value": "17",
                                },
                                Object {
                                  "label": "18 (4W325)",
                                  "value": "18",
                                },
                                Object {
                                  "label": "Utah",
                                  "value": "19",
                                },
                                Object {
                                  "label": "Gold",
                                  "value": "20",
                                },
                                Object {
                                  "label": "Juno",
                                  "value": "21",
                                },
                                Object {
                                  "label": "Sword",
                                  "value": "22",
                                },
                                Object {
                                  "label": "Omaha",
                                  "value": "23",
                                },
                                Object {
                                  "label": "Anzio",
                                  "value": "24",
                                },
                                Object {
                                  "label": "Coral Sea",
                                  "value": "25",
                                },
                                Object {
                                  "label": "Hue City",
                                  "value": "26",
                                },
                                Object {
                                  "label": "Antietam",
                                  "value": "27",
                                },
                                Object {
                                  "label": "Mogadishu",
                                  "value": "28",
                                },
                              ],
                              "pageSize": 5,
                              "placeholder": "Select...",
                              "screenReaderStatus": [Function],
                              "searchable": undefined,
                              "shouldKeyDownEventCreateNewOption": [Function],
                              "styles": Object {
                                "input": [Function],
                              },
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": Object {
                                "label": "1 (1W200A)",
                                "value": "1",
                              },
                            }
                          }
                          setValue={[Function]}
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                        >
                          <EmotionCssPropInternal
                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                            className=""
                            css={
                              Object {
                                "boxSizing": "border-box",
                                "direction": null,
                                "label": "container",
                                "pointerEvents": null,
                                "position": "relative",
                              }
                            }
                            onKeyDown={[Function]}
                          >
                            <div
                              className=" css-2b097c-container"
                              onKeyDown={[Function]}
                            >
                              <Control
                                clearValue={[Function]}
                                cx={[Function]}
                                getStyles={[Function]}
                                getValue={[Function]}
                                hasValue={true}
                                innerProps={
                                  Object {
                                    "onMouseDown": [Function],
                                    "onTouchEnd": [Function],
                                  }
                                }
                                innerRef={[Function]}
                                isDisabled={false}
                                isFocused={false}
                                isMulti={false}
                                isRtl={false}
                                menuIsOpen={false}
                                options={
                                  Array [
                                    Object {
                                      "label": "None",
                                      "value": null,
                                    },
                                    Object {
                                      "label": "1 (1W200A)",
                                      "value": "1",
                                    },
                                    Object {
                                      "label": "2 (1W200B)",
                                      "value": "2",
                                    },
                                    Object {
                                      "label": "3 (1W200C)",
                                      "value": "3",
                                    },
                                    Object {
                                      "label": "4 (1W424)",
                                      "value": "4",
                                    },
                                    Object {
                                      "label": "5 (1W428)",
                                      "value": "5",
                                    },
                                    Object {
                                      "label": "6 (1W432)",
                                      "value": "6",
                                    },
                                    Object {
                                      "label": "7 (1W434)",
                                      "value": "7",
                                    },
                                    Object {
                                      "label": "8 (1W435)",
                                      "value": "8",
                                    },
                                    Object {
                                      "label": "9 (1W436)",
                                      "value": "9",
                                    },
                                    Object {
                                      "label": "10 (1W437)",
                                      "value": "10",
                                    },
                                    Object {
                                      "label": "11 (1W438)",
                                      "value": "11",
                                    },
                                    Object {
                                      "label": "12 (1W439)",
                                      "value": "12",
                                    },
                                    Object {
                                      "label": "13 (1W440)",
                                      "value": "13",
                                    },
                                    Object {
                                      "label": "14 (3W405)",
                                      "value": "14",
                                    },
                                    Object {
                                      "label": "15 (3W407)",
                                      "value": "15",
                                    },
                                    Object {
                                      "label": "16 (3W409)",
                                      "value": "16",
                                    },
                                    Object {
                                      "label": "17 (3W518)",
                                      "value": "17",
                                    },
                                    Object {
                                      "label": "18 (4W325)",
                                      "value": "18",
                                    },
                                    Object {
                                      "label": "Utah",
                                      "value": "19",
                                    },
                                    Object {
                                      "label": "Gold",
                                      "value": "20",
                                    },
                                    Object {
                                      "label": "Juno",
                                      "value": "21",
                                    },
                                    Object {
                                      "label": "Sword",
                                      "value": "22",
                                    },
                                    Object {
                                      "label": "Omaha",
                                      "value": "23",
                                    },
                                    Object {
                                      "label": "Anzio",
                                      "value": "24",
                                    },
                                    Object {
                                      "label": "Coral Sea",
                                      "value": "25",
                                    },
                                    Object {
                                      "label": "Hue City",
                                      "value": "26",
                                    },
                                    Object {
                                      "label": "Antietam",
                                      "value": "27",
                                    },
                                    Object {
                                      "label": "Mogadishu",
                                      "value": "28",
                                    },
                                  ]
                                }
                                selectOption={[Function]}
                                selectProps={
                                  Object {
                                    "backspaceRemovesValue": true,
                                    "blurInputOnSelect": true,
                                    "cache": false,
                                    "captureMenuScroll": false,
                                    "classNamePrefix": "cf-select",
                                    "closeMenuOnScroll": false,
                                    "closeMenuOnSelect": true,
                                    "components": Object {
                                      "Input": [Function],
                                      "MenuList": [Function],
                                      "Option": [Function],
                                    },
                                    "controlShouldRenderValue": true,
                                    "defaultOptions": undefined,
                                    "escapeClearsValue": false,
                                    "filterOption": [Function],
                                    "formatGroupLabel": [Function],
                                    "getOptionLabel": [Function],
                                    "getOptionValue": [Function],
                                    "inputId": "hearing-room-dropdown",
                                    "inputValue": "",
                                    "isClearable": undefined,
                                    "isDisabled": false,
                                    "isLoading": false,
                                    "isMulti": false,
                                    "isOptionDisabled": [Function],
                                    "isRtl": false,
                                    "isSearchable": true,
                                    "loadOptions": undefined,
                                    "loadingMessage": [Function],
                                    "maxMenuHeight": 300,
                                    "menuIsOpen": false,
                                    "menuPlacement": "bottom",
                                    "menuPosition": "absolute",
                                    "menuShouldBlockScroll": false,
                                    "menuShouldScrollIntoView": true,
                                    "minMenuHeight": 140,
                                    "name": "hearingRoomDropdown",
                                    "noOptionsMessage": [Function],
                                    "onBlurResetsInput": false,
                                    "onChange": [Function],
                                    "onInputChange": [Function],
                                    "onMenuClose": [Function],
                                    "onMenuOpen": [Function],
                                    "openMenuOnClick": true,
                                    "openMenuOnFocus": false,
                                    "options": Array [
                                      Object {
                                        "label": "None",
                                        "value": null,
                                      },
                                      Object {
                                        "label": "1 (1W200A)",
                                        "value": "1",
                                      },
                                      Object {
                                        "label": "2 (1W200B)",
                                        "value": "2",
                                      },
                                      Object {
                                        "label": "3 (1W200C)",
                                        "value": "3",
                                      },
                                      Object {
                                        "label": "4 (1W424)",
                                        "value": "4",
                                      },
                                      Object {
                                        "label": "5 (1W428)",
                                        "value": "5",
                                      },
                                      Object {
                                        "label": "6 (1W432)",
                                        "value": "6",
                                      },
                                      Object {
                                        "label": "7 (1W434)",
                                        "value": "7",
                                      },
                                      Object {
                                        "label": "8 (1W435)",
                                        "value": "8",
                                      },
                                      Object {
                                        "label": "9 (1W436)",
                                        "value": "9",
                                      },
                                      Object {
                                        "label": "10 (1W437)",
                                        "value": "10",
                                      },
                                      Object {
                                        "label": "11 (1W438)",
                                        "value": "11",
                                      },
                                      Object {
                                        "label": "12 (1W439)",
                                        "value": "12",
                                      },
                                      Object {
                                        "label": "13 (1W440)",
                                        "value": "13",
                                      },
                                      Object {
                                        "label": "14 (3W405)",
                                        "value": "14",
                                      },
                                      Object {
                                        "label": "15 (3W407)",
                                        "value": "15",
                                      },
                                      Object {
                                        "label": "16 (3W409)",
                                        "value": "16",
                                      },
                                      Object {
                                        "label": "17 (3W518)",
                                        "value": "17",
                                      },
                                      Object {
                                        "label": "18 (4W325)",
                                        "value": "18",
                                      },
                                      Object {
                                        "label": "Utah",
                                        "value": "19",
                                      },
                                      Object {
                                        "label": "Gold",
                                        "value": "20",
                                      },
                                      Object {
                                        "label": "Juno",
                                        "value": "21",
                                      },
                                      Object {
                                        "label": "Sword",
                                        "value": "22",
                                      },
                                      Object {
                                        "label": "Omaha",
                                        "value": "23",
                                      },
                                      Object {
                                        "label": "Anzio",
                                        "value": "24",
                                      },
                                      Object {
                                        "label": "Coral Sea",
                                        "value": "25",
                                      },
                                      Object {
                                        "label": "Hue City",
                                        "value": "26",
                                      },
                                      Object {
                                        "label": "Antietam",
                                        "value": "27",
                                      },
                                      Object {
                                        "label": "Mogadishu",
                                        "value": "28",
                                      },
                                    ],
                                    "pageSize": 5,
                                    "placeholder": "Select...",
                                    "screenReaderStatus": [Function],
                                    "searchable": undefined,
                                    "shouldKeyDownEventCreateNewOption": [Function],
                                    "styles": Object {
                                      "input": [Function],
                                    },
                                    "tabIndex": "0",
                                    "tabSelectsValue": true,
                                    "value": Object {
                                      "label": "1 (1W200A)",
                                      "value": "1",
                                    },
                                  }
                                }
                                setValue={[Function]}
                                theme={
                                  Object {
                                    "borderRadius": 4,
                                    "colors": Object {
                                      "danger": "#DE350B",
                                      "dangerLight": "#FFBDAD",
                                      "neutral0": "hsl(0, 0%, 100%)",
                                      "neutral10": "hsl(0, 0%, 90%)",
                                      "neutral20": "hsl(0, 0%, 80%)",
                                      "neutral30": "hsl(0, 0%, 70%)",
                                      "neutral40": "hsl(0, 0%, 60%)",
                                      "neutral5": "hsl(0, 0%, 95%)",
                                      "neutral50": "hsl(0, 0%, 50%)",
                                      "neutral60": "hsl(0, 0%, 40%)",
                                      "neutral70": "hsl(0, 0%, 30%)",
                                      "neutral80": "hsl(0, 0%, 20%)",
                                      "neutral90": "hsl(0, 0%, 10%)",
                                      "primary": "#2684FF",
                                      "primary25": "#DEEBFF",
                                      "primary50": "#B2D4FF",
                                      "primary75": "#4C9AFF",
                                    },
                                    "spacing": Object {
                                      "baseUnit": 4,
                                      "controlHeight": 38,
                                      "menuGutter": 8,
                                    },
                                  }
                                }
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                  className="cf-select__control"
                                  css={
                                    Object {
                                      "&:hover": Object {
                                        "borderColor": "hsl(0, 0%, 70%)",
                                      },
                                      "alignItems": "center",
                                      "backgroundColor": "hsl(0, 0%, 100%)",
                                      "borderColor": "hsl(0, 0%, 80%)",
                                      "borderRadius": 4,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "boxShadow": null,
                                      "boxSizing": "border-box",
                                      "cursor": "default",
                                      "display": "flex",
                                      "flexWrap": "wrap",
                                      "justifyContent": "space-between",
                                      "label": "control",
                                      "minHeight": 38,
                                      "outline": "0 !important",
                                      "position": "relative",
                                      "transition": "all 100ms",
                                    }
                                  }
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <div
                                    className="cf-select__control css-yk16xz-control"
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <ValueContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "None",
                                            "value": null,
                                          },
                                          Object {
                                            "label": "1 (1W200A)",
                                            "value": "1",
                                          },
                                          Object {
                                            "label": "2 (1W200B)",
                                            "value": "2",
                                          },
                                          Object {
                                            "label": "3 (1W200C)",
                                            "value": "3",
                                          },
                                          Object {
                                            "label": "4 (1W424)",
                                            "value": "4",
                                          },
                                          Object {
                                            "label": "5 (1W428)",
                                            "value": "5",
                                          },
                                          Object {
                                            "label": "6 (1W432)",
                                            "value": "6",
                                          },
                                          Object {
                                            "label": "7 (1W434)",
                                            "value": "7",
                                          },
                                          Object {
                                            "label": "8 (1W435)",
                                            "value": "8",
                                          },
                                          Object {
                                            "label": "9 (1W436)",
                                            "value": "9",
                                          },
                                          Object {
                                            "label": "10 (1W437)",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "11 (1W438)",
                                            "value": "11",
                                          },
                                          Object {
                                            "label": "12 (1W439)",
                                            "value": "12",
                                          },
                                          Object {
                                            "label": "13 (1W440)",
                                            "value": "13",
                                          },
                                          Object {
                                            "label": "14 (3W405)",
                                            "value": "14",
                                          },
                                          Object {
                                            "label": "15 (3W407)",
                                            "value": "15",
                                          },
                                          Object {
                                            "label": "16 (3W409)",
                                            "value": "16",
                                          },
                                          Object {
                                            "label": "17 (3W518)",
                                            "value": "17",
                                          },
                                          Object {
                                            "label": "18 (4W325)",
                                            "value": "18",
                                          },
                                          Object {
                                            "label": "Utah",
                                            "value": "19",
                                          },
                                          Object {
                                            "label": "Gold",
                                            "value": "20",
                                          },
                                          Object {
                                            "label": "Juno",
                                            "value": "21",
                                          },
                                          Object {
                                            "label": "Sword",
                                            "value": "22",
                                          },
                                          Object {
                                            "label": "Omaha",
                                            "value": "23",
                                          },
                                          Object {
                                            "label": "Anzio",
                                            "value": "24",
                                          },
                                          Object {
                                            "label": "Coral Sea",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "Hue City",
                                            "value": "26",
                                          },
                                          Object {
                                            "label": "Antietam",
                                            "value": "27",
                                          },
                                          Object {
                                            "label": "Mogadishu",
                                            "value": "28",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "cache": false,
                                          "captureMenuScroll": false,
                                          "classNamePrefix": "cf-select",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "Input": [Function],
                                            "MenuList": [Function],
                                            "Option": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "defaultOptions": undefined,
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "inputId": "hearing-room-dropdown",
                                          "inputValue": "",
                                          "isClearable": undefined,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadOptions": undefined,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "name": "hearingRoomDropdown",
                                          "noOptionsMessage": [Function],
                                          "onBlurResetsInput": false,
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "None",
                                              "value": null,
                                            },
                                            Object {
                                              "label": "1 (1W200A)",
                                              "value": "1",
                                            },
                                            Object {
                                              "label": "2 (1W200B)",
                                              "value": "2",
                                            },
                                            Object {
                                              "label": "3 (1W200C)",
                                              "value": "3",
                                            },
                                            Object {
                                              "label": "4 (1W424)",
                                              "value": "4",
                                            },
                                            Object {
                                              "label": "5 (1W428)",
                                              "value": "5",
                                            },
                                            Object {
                                              "label": "6 (1W432)",
                                              "value": "6",
                                            },
                                            Object {
                                              "label": "7 (1W434)",
                                              "value": "7",
                                            },
                                            Object {
                                              "label": "8 (1W435)",
                                              "value": "8",
                                            },
                                            Object {
                                              "label": "9 (1W436)",
                                              "value": "9",
                                            },
                                            Object {
                                              "label": "10 (1W437)",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "11 (1W438)",
                                              "value": "11",
                                            },
                                            Object {
                                              "label": "12 (1W439)",
                                              "value": "12",
                                            },
                                            Object {
                                              "label": "13 (1W440)",
                                              "value": "13",
                                            },
                                            Object {
                                              "label": "14 (3W405)",
                                              "value": "14",
                                            },
                                            Object {
                                              "label": "15 (3W407)",
                                              "value": "15",
                                            },
                                            Object {
                                              "label": "16 (3W409)",
                                              "value": "16",
                                            },
                                            Object {
                                              "label": "17 (3W518)",
                                              "value": "17",
                                            },
                                            Object {
                                              "label": "18 (4W325)",
                                              "value": "18",
                                            },
                                            Object {
                                              "label": "Utah",
                                              "value": "19",
                                            },
                                            Object {
                                              "label": "Gold",
                                              "value": "20",
                                            },
                                            Object {
                                              "label": "Juno",
                                              "value": "21",
                                            },
                                            Object {
                                              "label": "Sword",
                                              "value": "22",
                                            },
                                            Object {
                                              "label": "Omaha",
                                              "value": "23",
                                            },
                                            Object {
                                              "label": "Anzio",
                                              "value": "24",
                                            },
                                            Object {
                                              "label": "Coral Sea",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "Hue City",
                                              "value": "26",
                                            },
                                            Object {
                                              "label": "Antietam",
                                              "value": "27",
                                            },
                                            Object {
                                              "label": "Mogadishu",
                                              "value": "28",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "searchable": undefined,
                                          "shouldKeyDownEventCreateNewOption": [Function],
                                          "styles": Object {
                                            "input": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "value": Object {
                                            "label": "1 (1W200A)",
                                            "value": "1",
                                          },
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#DE350B",
                                            "dangerLight": "#FFBDAD",
                                            "neutral0": "hsl(0, 0%, 100%)",
                                            "neutral10": "hsl(0, 0%, 90%)",
                                            "neutral20": "hsl(0, 0%, 80%)",
                                            "neutral30": "hsl(0, 0%, 70%)",
                                            "neutral40": "hsl(0, 0%, 60%)",
                                            "neutral5": "hsl(0, 0%, 95%)",
                                            "neutral50": "hsl(0, 0%, 50%)",
                                            "neutral60": "hsl(0, 0%, 40%)",
                                            "neutral70": "hsl(0, 0%, 30%)",
                                            "neutral80": "hsl(0, 0%, 20%)",
                                            "neutral90": "hsl(0, 0%, 10%)",
                                            "primary": "#2684FF",
                                            "primary25": "#DEEBFF",
                                            "primary50": "#B2D4FF",
                                            "primary75": "#4C9AFF",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <EmotionCssPropInternal
                                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                        className="cf-select__value-container cf-select__value-container--has-value"
                                        css={
                                          Object {
                                            "WebkitOverflowScrolling": "touch",
                                            "alignItems": "center",
                                            "boxSizing": "border-box",
                                            "display": "flex",
                                            "flex": 1,
                                            "flexWrap": "wrap",
                                            "overflow": "hidden",
                                            "padding": "2px 8px",
                                            "position": "relative",
                                          }
                                        }
                                      >
                                        <div
                                          className="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                                        >
                                          <SingleValue
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            data={
                                              Object {
                                                "label": "1 (1W200A)",
                                                "value": "1",
                                              }
                                            }
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={true}
                                            isDisabled={false}
                                            isMulti={false}
                                            isRtl={false}
                                            options={
                                              Array [
                                                Object {
                                                  "label": "None",
                                                  "value": null,
                                                },
                                                Object {
                                                  "label": "1 (1W200A)",
                                                  "value": "1",
                                                },
                                                Object {
                                                  "label": "2 (1W200B)",
                                                  "value": "2",
                                                },
                                                Object {
                                                  "label": "3 (1W200C)",
                                                  "value": "3",
                                                },
                                                Object {
                                                  "label": "4 (1W424)",
                                                  "value": "4",
                                                },
                                                Object {
                                                  "label": "5 (1W428)",
                                                  "value": "5",
                                                },
                                                Object {
                                                  "label": "6 (1W432)",
                                                  "value": "6",
                                                },
                                                Object {
                                                  "label": "7 (1W434)",
                                                  "value": "7",
                                                },
                                                Object {
                                                  "label": "8 (1W435)",
                                                  "value": "8",
                                                },
                                                Object {
                                                  "label": "9 (1W436)",
                                                  "value": "9",
                                                },
                                                Object {
                                                  "label": "10 (1W437)",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "11 (1W438)",
                                                  "value": "11",
                                                },
                                                Object {
                                                  "label": "12 (1W439)",
                                                  "value": "12",
                                                },
                                                Object {
                                                  "label": "13 (1W440)",
                                                  "value": "13",
                                                },
                                                Object {
                                                  "label": "14 (3W405)",
                                                  "value": "14",
                                                },
                                                Object {
                                                  "label": "15 (3W407)",
                                                  "value": "15",
                                                },
                                                Object {
                                                  "label": "16 (3W409)",
                                                  "value": "16",
                                                },
                                                Object {
                                                  "label": "17 (3W518)",
                                                  "value": "17",
                                                },
                                                Object {
                                                  "label": "18 (4W325)",
                                                  "value": "18",
                                                },
                                                Object {
                                                  "label": "Utah",
                                                  "value": "19",
                                                },
                                                Object {
                                                  "label": "Gold",
                                                  "value": "20",
                                                },
                                                Object {
                                                  "label": "Juno",
                                                  "value": "21",
                                                },
                                                Object {
                                                  "label": "Sword",
                                                  "value": "22",
                                                },
                                                Object {
                                                  "label": "Omaha",
                                                  "value": "23",
                                                },
                                                Object {
                                                  "label": "Anzio",
                                                  "value": "24",
                                                },
                                                Object {
                                                  "label": "Coral Sea",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "Hue City",
                                                  "value": "26",
                                                },
                                                Object {
                                                  "label": "Antietam",
                                                  "value": "27",
                                                },
                                                Object {
                                                  "label": "Mogadishu",
                                                  "value": "28",
                                                },
                                              ]
                                            }
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "cache": false,
                                                "captureMenuScroll": false,
                                                "classNamePrefix": "cf-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "Input": [Function],
                                                  "MenuList": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "defaultOptions": undefined,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "inputId": "hearing-room-dropdown",
                                                "inputValue": "",
                                                "isClearable": undefined,
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": true,
                                                "loadOptions": undefined,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "hearingRoomDropdown",
                                                "noOptionsMessage": [Function],
                                                "onBlurResetsInput": false,
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [
                                                  Object {
                                                    "label": "None",
                                                    "value": null,
                                                  },
                                                  Object {
                                                    "label": "1 (1W200A)",
                                                    "value": "1",
                                                  },
                                                  Object {
                                                    "label": "2 (1W200B)",
                                                    "value": "2",
                                                  },
                                                  Object {
                                                    "label": "3 (1W200C)",
                                                    "value": "3",
                                                  },
                                                  Object {
                                                    "label": "4 (1W424)",
                                                    "value": "4",
                                                  },
                                                  Object {
                                                    "label": "5 (1W428)",
                                                    "value": "5",
                                                  },
                                                  Object {
                                                    "label": "6 (1W432)",
                                                    "value": "6",
                                                  },
                                                  Object {
                                                    "label": "7 (1W434)",
                                                    "value": "7",
                                                  },
                                                  Object {
                                                    "label": "8 (1W435)",
                                                    "value": "8",
                                                  },
                                                  Object {
                                                    "label": "9 (1W436)",
                                                    "value": "9",
                                                  },
                                                  Object {
                                                    "label": "10 (1W437)",
                                                    "value": "10",
                                                  },
                                                  Object {
                                                    "label": "11 (1W438)",
                                                    "value": "11",
                                                  },
                                                  Object {
                                                    "label": "12 (1W439)",
                                                    "value": "12",
                                                  },
                                                  Object {
                                                    "label": "13 (1W440)",
                                                    "value": "13",
                                                  },
                                                  Object {
                                                    "label": "14 (3W405)",
                                                    "value": "14",
                                                  },
                                                  Object {
                                                    "label": "15 (3W407)",
                                                    "value": "15",
                                                  },
                                                  Object {
                                                    "label": "16 (3W409)",
                                                    "value": "16",
                                                  },
                                                  Object {
                                                    "label": "17 (3W518)",
                                                    "value": "17",
                                                  },
                                                  Object {
                                                    "label": "18 (4W325)",
                                                    "value": "18",
                                                  },
                                                  Object {
                                                    "label": "Utah",
                                                    "value": "19",
                                                  },
                                                  Object {
                                                    "label": "Gold",
                                                    "value": "20",
                                                  },
                                                  Object {
                                                    "label": "Juno",
                                                    "value": "21",
                                                  },
                                                  Object {
                                                    "label": "Sword",
                                                    "value": "22",
                                                  },
                                                  Object {
                                                    "label": "Omaha",
                                                    "value": "23",
                                                  },
                                                  Object {
                                                    "label": "Anzio",
                                                    "value": "24",
                                                  },
                                                  Object {
                                                    "label": "Coral Sea",
                                                    "value": "25",
                                                  },
                                                  Object {
                                                    "label": "Hue City",
                                                    "value": "26",
                                                  },
                                                  Object {
                                                    "label": "Antietam",
                                                    "value": "27",
                                                  },
                                                  Object {
                                                    "label": "Mogadishu",
                                                    "value": "28",
                                                  },
                                                ],
                                                "pageSize": 5,
                                                "placeholder": "Select...",
                                                "screenReaderStatus": [Function],
                                                "searchable": undefined,
                                                "shouldKeyDownEventCreateNewOption": [Function],
                                                "styles": Object {
                                                  "input": [Function],
                                                },
                                                "tabIndex": "0",
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "1 (1W200A)",
                                                  "value": "1",
                                                },
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              className="cf-select__single-value"
                                              css={
                                                Object {
                                                  "boxSizing": "border-box",
                                                  "color": "hsl(0, 0%, 20%)",
                                                  "label": "singleValue",
                                                  "marginLeft": 2,
                                                  "marginRight": 2,
                                                  "maxWidth": "calc(100% - 8px)",
                                                  "overflow": "hidden",
                                                  "position": "absolute",
                                                  "textOverflow": "ellipsis",
                                                  "top": "50%",
                                                  "transform": "translateY(-50%)",
                                                  "whiteSpace": "nowrap",
                                                }
                                              }
                                            >
                                              <div
                                                className="cf-select__single-value css-1uccc91-singleValue"
                                              >
                                                1 (1W200A)
                                              </div>
                                            </EmotionCssPropInternal>
                                          </SingleValue>
                                          <CustomInput
                                            aria-autocomplete="list"
                                            autoCapitalize="none"
                                            autoComplete="off"
                                            autoCorrect="off"
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            id="hearing-room-dropdown"
                                            innerRef={[Function]}
                                            isDisabled={false}
                                            isHidden={false}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            selectProps={
                                              Object {
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "cache": false,
                                                "captureMenuScroll": false,
                                                "classNamePrefix": "cf-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "Input": [Function],
                                                  "MenuList": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "defaultOptions": undefined,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "inputId": "hearing-room-dropdown",
                                                "inputValue": "",
                                                "isClearable": undefined,
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": true,
                                                "loadOptions": undefined,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "hearingRoomDropdown",
                                                "noOptionsMessage": [Function],
                                                "onBlurResetsInput": false,
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [
                                                  Object {
                                                    "label": "None",
                                                    "value": null,
                                                  },
                                                  Object {
                                                    "label": "1 (1W200A)",
                                                    "value": "1",
                                                  },
                                                  Object {
                                                    "label": "2 (1W200B)",
                                                    "value": "2",
                                                  },
                                                  Object {
                                                    "label": "3 (1W200C)",
                                                    "value": "3",
                                                  },
                                                  Object {
                                                    "label": "4 (1W424)",
                                                    "value": "4",
                                                  },
                                                  Object {
                                                    "label": "5 (1W428)",
                                                    "value": "5",
                                                  },
                                                  Object {
                                                    "label": "6 (1W432)",
                                                    "value": "6",
                                                  },
                                                  Object {
                                                    "label": "7 (1W434)",
                                                    "value": "7",
                                                  },
                                                  Object {
                                                    "label": "8 (1W435)",
                                                    "value": "8",
                                                  },
                                                  Object {
                                                    "label": "9 (1W436)",
                                                    "value": "9",
                                                  },
                                                  Object {
                                                    "label": "10 (1W437)",
                                                    "value": "10",
                                                  },
                                                  Object {
                                                    "label": "11 (1W438)",
                                                    "value": "11",
                                                  },
                                                  Object {
                                                    "label": "12 (1W439)",
                                                    "value": "12",
                                                  },
                                                  Object {
                                                    "label": "13 (1W440)",
                                                    "value": "13",
                                                  },
                                                  Object {
                                                    "label": "14 (3W405)",
                                                    "value": "14",
                                                  },
                                                  Object {
                                                    "label": "15 (3W407)",
                                                    "value": "15",
                                                  },
                                                  Object {
                                                    "label": "16 (3W409)",
                                                    "value": "16",
                                                  },
                                                  Object {
                                                    "label": "17 (3W518)",
                                                    "value": "17",
                                                  },
                                                  Object {
                                                    "label": "18 (4W325)",
                                                    "value": "18",
                                                  },
                                                  Object {
                                                    "label": "Utah",
                                                    "value": "19",
                                                  },
                                                  Object {
                                                    "label": "Gold",
                                                    "value": "20",
                                                  },
                                                  Object {
                                                    "label": "Juno",
                                                    "value": "21",
                                                  },
                                                  Object {
                                                    "label": "Sword",
                                                    "value": "22",
                                                  },
                                                  Object {
                                                    "label": "Omaha",
                                                    "value": "23",
                                                  },
                                                  Object {
                                                    "label": "Anzio",
                                                    "value": "24",
                                                  },
                                                  Object {
                                                    "label": "Coral Sea",
                                                    "value": "25",
                                                  },
                                                  Object {
                                                    "label": "Hue City",
                                                    "value": "26",
                                                  },
                                                  Object {
                                                    "label": "Antietam",
                                                    "value": "27",
                                                  },
                                                  Object {
                                                    "label": "Mogadishu",
                                                    "value": "28",
                                                  },
                                                ],
                                                "pageSize": 5,
                                                "placeholder": "Select...",
                                                "screenReaderStatus": [Function],
                                                "searchable": undefined,
                                                "shouldKeyDownEventCreateNewOption": [Function],
                                                "styles": Object {
                                                  "input": [Function],
                                                },
                                                "tabIndex": "0",
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "1 (1W200A)",
                                                  "value": "1",
                                                },
                                              }
                                            }
                                            spellCheck="false"
                                            tabIndex="0"
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                            type="text"
                                            value=""
                                          >
                                            <Input
                                              aria-autocomplete="list"
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              aria-labelledby="hearing-room-dropdown-label"
                                              aria-owns="hearing-room-dropdown-listbox"
                                              autoCapitalize="none"
                                              autoComplete="off"
                                              autoCorrect="off"
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              id="hearing-room-dropdown"
                                              innerRef={[Function]}
                                              isDisabled={false}
                                              isHidden={false}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              role="combobox"
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "hearing-room-dropdown",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "hearingRoomDropdown",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [
                                                    Object {
                                                      "label": "None",
                                                      "value": null,
                                                    },
                                                    Object {
                                                      "label": "1 (1W200A)",
                                                      "value": "1",
                                                    },
                                                    Object {
                                                      "label": "2 (1W200B)",
                                                      "value": "2",
                                                    },
                                                    Object {
                                                      "label": "3 (1W200C)",
                                                      "value": "3",
                                                    },
                                                    Object {
                                                      "label": "4 (1W424)",
                                                      "value": "4",
                                                    },
                                                    Object {
                                                      "label": "5 (1W428)",
                                                      "value": "5",
                                                    },
                                                    Object {
                                                      "label": "6 (1W432)",
                                                      "value": "6",
                                                    },
                                                    Object {
                                                      "label": "7 (1W434)",
                                                      "value": "7",
                                                    },
                                                    Object {
                                                      "label": "8 (1W435)",
                                                      "value": "8",
                                                    },
                                                    Object {
                                                      "label": "9 (1W436)",
                                                      "value": "9",
                                                    },
                                                    Object {
                                                      "label": "10 (1W437)",
                                                      "value": "10",
                                                    },
                                                    Object {
                                                      "label": "11 (1W438)",
                                                      "value": "11",
                                                    },
                                                    Object {
                                                      "label": "12 (1W439)",
                                                      "value": "12",
                                                    },
                                                    Object {
                                                      "label": "13 (1W440)",
                                                      "value": "13",
                                                    },
                                                    Object {
                                                      "label": "14 (3W405)",
                                                      "value": "14",
                                                    },
                                                    Object {
                                                      "label": "15 (3W407)",
                                                      "value": "15",
                                                    },
                                                    Object {
                                                      "label": "16 (3W409)",
                                                      "value": "16",
                                                    },
                                                    Object {
                                                      "label": "17 (3W518)",
                                                      "value": "17",
                                                    },
                                                    Object {
                                                      "label": "18 (4W325)",
                                                      "value": "18",
                                                    },
                                                    Object {
                                                      "label": "Utah",
                                                      "value": "19",
                                                    },
                                                    Object {
                                                      "label": "Gold",
                                                      "value": "20",
                                                    },
                                                    Object {
                                                      "label": "Juno",
                                                      "value": "21",
                                                    },
                                                    Object {
                                                      "label": "Sword",
                                                      "value": "22",
                                                    },
                                                    Object {
                                                      "label": "Omaha",
                                                      "value": "23",
                                                    },
                                                    Object {
                                                      "label": "Anzio",
                                                      "value": "24",
                                                    },
                                                    Object {
                                                      "label": "Coral Sea",
                                                      "value": "25",
                                                    },
                                                    Object {
                                                      "label": "Hue City",
                                                      "value": "26",
                                                    },
                                                    Object {
                                                      "label": "Antietam",
                                                      "value": "27",
                                                    },
                                                    Object {
                                                      "label": "Mogadishu",
                                                      "value": "28",
                                                    },
                                                  ],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": "1 (1W200A)",
                                                    "value": "1",
                                                  },
                                                }
                                              }
                                              spellCheck="false"
                                              tabIndex="0"
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                              type="text"
                                              value=""
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                css={
                                                  Object {
                                                    "height": "44px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="css-81nyic-Input"
                                                >
                                                  <AutosizeInput
                                                    aria-autocomplete="list"
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    aria-labelledby="hearing-room-dropdown-label"
                                                    aria-owns="hearing-room-dropdown-listbox"
                                                    autoCapitalize="none"
                                                    autoComplete="off"
                                                    autoCorrect="off"
                                                    className="cf-select__input"
                                                    disabled={false}
                                                    id="hearing-room-dropdown"
                                                    injectStyles={true}
                                                    inputRef={[Function]}
                                                    inputStyle={
                                                      Object {
                                                        "background": 0,
                                                        "border": 0,
                                                        "color": "inherit",
                                                        "fontSize": "inherit",
                                                        "label": "input",
                                                        "opacity": 1,
                                                        "outline": 0,
                                                        "padding": 0,
                                                      }
                                                    }
                                                    minWidth={1}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    role="combobox"
                                                    spellCheck="false"
                                                    tabIndex="0"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <div
                                                      className="cf-select__input"
                                                      style={
                                                        Object {
                                                          "display": "inline-block",
                                                        }
                                                      }
                                                    >
                                                      <input
                                                        aria-autocomplete="list"
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-labelledby="hearing-room-dropdown-label"
                                                        aria-owns="hearing-room-dropdown-listbox"
                                                        autoCapitalize="none"
                                                        autoComplete="off"
                                                        autoCorrect="off"
                                                        disabled={false}
                                                        id="hearing-room-dropdown"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        role="combobox"
                                                        spellCheck="false"
                                                        style={
                                                          Object {
                                                            "background": 0,
                                                            "border": 0,
                                                            "boxSizing": "content-box",
                                                            "color": "inherit",
                                                            "fontSize": "inherit",
                                                            "label": "input",
                                                            "opacity": 1,
                                                            "outline": 0,
                                                            "padding": 0,
                                                            "width": "2px",
                                                          }
                                                        }
                                                        tabIndex="0"
                                                        type="text"
                                                        value=""
                                                      />
                                                      <div
                                                        style={
                                                          Object {
                                                            "height": 0,
                                                            "left": 0,
                                                            "overflow": "scroll",
                                                            "position": "absolute",
                                                            "top": 0,
                                                            "visibility": "hidden",
                                                            "whiteSpace": "pre",
                                                          }
                                                        }
                                                      />
                                                    </div>
                                                  </AutosizeInput>
                                                </div>
                                              </EmotionCssPropInternal>
                                            </Input>
                                          </CustomInput>
                                        </div>
                                      </EmotionCssPropInternal>
                                    </ValueContainer>
                                    <IndicatorsContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "None",
                                            "value": null,
                                          },
                                          Object {
                                            "label": "1 (1W200A)",
                                            "value": "1",
                                          },
                                          Object {
                                            "label": "2 (1W200B)",
                                            "value": "2",
                                          },
                                          Object {
                                            "label": "3 (1W200C)",
                                            "value": "3",
                                          },
                                          Object {
                                            "label": "4 (1W424)",
                                            "value": "4",
                                          },
                                          Object {
                                            "label": "5 (1W428)",
                                            "value": "5",
                                          },
                                          Object {
                                            "label": "6 (1W432)",
                                            "value": "6",
                                          },
                                          Object {
                                            "label": "7 (1W434)",
                                            "value": "7",
                                          },
                                          Object {
                                            "label": "8 (1W435)",
                                            "value": "8",
                                          },
                                          Object {
                                            "label": "9 (1W436)",
                                            "value": "9",
                                          },
                                          Object {
                                            "label": "10 (1W437)",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "11 (1W438)",
                                            "value": "11",
                                          },
                                          Object {
                                            "label": "12 (1W439)",
                                            "value": "12",
                                          },
                                          Object {
                                            "label": "13 (1W440)",
                                            "value": "13",
                                          },
                                          Object {
                                            "label": "14 (3W405)",
                                            "value": "14",
                                          },
                                          Object {
                                            "label": "15 (3W407)",
                                            "value": "15",
                                          },
                                          Object {
                                            "label": "16 (3W409)",
                                            "value": "16",
                                          },
                                          Object {
                                            "label": "17 (3W518)",
                                            "value": "17",
                                          },
                                          Object {
                                            "label": "18 (4W325)",
                                            "value": "18",
                                          },
                                          Object {
                                            "label": "Utah",
                                            "value": "19",
                                          },
                                          Object {
                                            "label": "Gold",
                                            "value": "20",
                                          },
                                          Object {
                                            "label": "Juno",
                                            "value": "21",
                                          },
                                          Object {
                                            "label": "Sword",
                                            "value": "22",
                                          },
                                          Object {
                                            "label": "Omaha",
                                            "value": "23",
                                          },
                                          Object {
                                            "label": "Anzio",
                                            "value": "24",
                                          },
                                          Object {
                                            "label": "Coral Sea",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "Hue City",
                                            "value": "26",
                                          },
                                          Object {
                                            "label": "Antietam",
                                            "value": "27",
                                          },
                                          Object {
                                            "label": "Mogadishu",
                                            "value": "28",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "cache": false,
                                          "captureMenuScroll": false,
                                          "classNamePrefix": "cf-select",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "Input": [Function],
                                            "MenuList": [Function],
                                            "Option": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "defaultOptions": undefined,
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "inputId": "hearing-room-dropdown",
                                          "inputValue": "",
                                          "isClearable": undefined,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadOptions": undefined,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "name": "hearingRoomDropdown",
                                          "noOptionsMessage": [Function],
                                          "onBlurResetsInput": false,
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "None",
                                              "value": null,
                                            },
                                            Object {
                                              "label": "1 (1W200A)",
                                              "value": "1",
                                            },
                                            Object {
                                              "label": "2 (1W200B)",
                                              "value": "2",
                                            },
                                            Object {
                                              "label": "3 (1W200C)",
                                              "value": "3",
                                            },
                                            Object {
                                              "label": "4 (1W424)",
                                              "value": "4",
                                            },
                                            Object {
                                              "label": "5 (1W428)",
                                              "value": "5",
                                            },
                                            Object {
                                              "label": "6 (1W432)",
                                              "value": "6",
                                            },
                                            Object {
                                              "label": "7 (1W434)",
                                              "value": "7",
                                            },
                                            Object {
                                              "label": "8 (1W435)",
                                              "value": "8",
                                            },
                                            Object {
                                              "label": "9 (1W436)",
                                              "value": "9",
                                            },
                                            Object {
                                              "label": "10 (1W437)",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "11 (1W438)",
                                              "value": "11",
                                            },
                                            Object {
                                              "label": "12 (1W439)",
                                              "value": "12",
                                            },
                                            Object {
                                              "label": "13 (1W440)",
                                              "value": "13",
                                            },
                                            Object {
                                              "label": "14 (3W405)",
                                              "value": "14",
                                            },
                                            Object {
                                              "label": "15 (3W407)",
                                              "value": "15",
                                            },
                                            Object {
                                              "label": "16 (3W409)",
                                              "value": "16",
                                            },
                                            Object {
                                              "label": "17 (3W518)",
                                              "value": "17",
                                            },
                                            Object {
                                              "label": "18 (4W325)",
                                              "value": "18",
                                            },
                                            Object {
                                              "label": "Utah",
                                              "value": "19",
                                            },
                                            Object {
                                              "label": "Gold",
                                              "value": "20",
                                            },
                                            Object {
                                              "label": "Juno",
                                              "value": "21",
                                            },
                                            Object {
                                              "label": "Sword",
                                              "value": "22",
                                            },
                                            Object {
                                              "label": "Omaha",
                                              "value": "23",
                                            },
                                            Object {
                                              "label": "Anzio",
                                              "value": "24",
                                            },
                                            Object {
                                              "label": "Coral Sea",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "Hue City",
                                              "value": "26",
                                            },
                                            Object {
                                              "label": "Antietam",
                                              "value": "27",
                                            },
                                            Object {
                                              "label": "Mogadishu",
                                              "value": "28",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "searchable": undefined,
                                          "shouldKeyDownEventCreateNewOption": [Function],
                                          "styles": Object {
                                            "input": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "value": Object {
                                            "label": "1 (1W200A)",
                                            "value": "1",
                                          },
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#DE350B",
                                            "dangerLight": "#FFBDAD",
                                            "neutral0": "hsl(0, 0%, 100%)",
                                            "neutral10": "hsl(0, 0%, 90%)",
                                            "neutral20": "hsl(0, 0%, 80%)",
                                            "neutral30": "hsl(0, 0%, 70%)",
                                            "neutral40": "hsl(0, 0%, 60%)",
                                            "neutral5": "hsl(0, 0%, 95%)",
                                            "neutral50": "hsl(0, 0%, 50%)",
                                            "neutral60": "hsl(0, 0%, 40%)",
                                            "neutral70": "hsl(0, 0%, 30%)",
                                            "neutral80": "hsl(0, 0%, 20%)",
                                            "neutral90": "hsl(0, 0%, 10%)",
                                            "primary": "#2684FF",
                                            "primary25": "#DEEBFF",
                                            "primary50": "#B2D4FF",
                                            "primary75": "#4C9AFF",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <EmotionCssPropInternal
                                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                        className="cf-select__indicators"
                                        css={
                                          Object {
                                            "alignItems": "center",
                                            "alignSelf": "stretch",
                                            "boxSizing": "border-box",
                                            "display": "flex",
                                            "flexShrink": 0,
                                          }
                                        }
                                      >
                                        <div
                                          className="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                                        >
                                          <IndicatorSeparator
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={true}
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            options={
                                              Array [
                                                Object {
                                                  "label": "None",
                                                  "value": null,
                                                },
                                                Object {
                                                  "label": "1 (1W200A)",
                                                  "value": "1",
                                                },
                                                Object {
                                                  "label": "2 (1W200B)",
                                                  "value": "2",
                                                },
                                                Object {
                                                  "label": "3 (1W200C)",
                                                  "value": "3",
                                                },
                                                Object {
                                                  "label": "4 (1W424)",
                                                  "value": "4",
                                                },
                                                Object {
                                                  "label": "5 (1W428)",
                                                  "value": "5",
                                                },
                                                Object {
                                                  "label": "6 (1W432)",
                                                  "value": "6",
                                                },
                                                Object {
                                                  "label": "7 (1W434)",
                                                  "value": "7",
                                                },
                                                Object {
                                                  "label": "8 (1W435)",
                                                  "value": "8",
                                                },
                                                Object {
                                                  "label": "9 (1W436)",
                                                  "value": "9",
                                                },
                                                Object {
                                                  "label": "10 (1W437)",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "11 (1W438)",
                                                  "value": "11",
                                                },
                                                Object {
                                                  "label": "12 (1W439)",
                                                  "value": "12",
                                                },
                                                Object {
                                                  "label": "13 (1W440)",
                                                  "value": "13",
                                                },
                                                Object {
                                                  "label": "14 (3W405)",
                                                  "value": "14",
                                                },
                                                Object {
                                                  "label": "15 (3W407)",
                                                  "value": "15",
                                                },
                                                Object {
                                                  "label": "16 (3W409)",
                                                  "value": "16",
                                                },
                                                Object {
                                                  "label": "17 (3W518)",
                                                  "value": "17",
                                                },
                                                Object {
                                                  "label": "18 (4W325)",
                                                  "value": "18",
                                                },
                                                Object {
                                                  "label": "Utah",
                                                  "value": "19",
                                                },
                                                Object {
                                                  "label": "Gold",
                                                  "value": "20",
                                                },
                                                Object {
                                                  "label": "Juno",
                                                  "value": "21",
                                                },
                                                Object {
                                                  "label": "Sword",
                                                  "value": "22",
                                                },
                                                Object {
                                                  "label": "Omaha",
                                                  "value": "23",
                                                },
                                                Object {
                                                  "label": "Anzio",
                                                  "value": "24",
                                                },
                                                Object {
                                                  "label": "Coral Sea",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "Hue City",
                                                  "value": "26",
                                                },
                                                Object {
                                                  "label": "Antietam",
                                                  "value": "27",
                                                },
                                                Object {
                                                  "label": "Mogadishu",
                                                  "value": "28",
                                                },
                                              ]
                                            }
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "cache": false,
                                                "captureMenuScroll": false,
                                                "classNamePrefix": "cf-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "Input": [Function],
                                                  "MenuList": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "defaultOptions": undefined,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "inputId": "hearing-room-dropdown",
                                                "inputValue": "",
                                                "isClearable": undefined,
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": true,
                                                "loadOptions": undefined,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "hearingRoomDropdown",
                                                "noOptionsMessage": [Function],
                                                "onBlurResetsInput": false,
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [
                                                  Object {
                                                    "label": "None",
                                                    "value": null,
                                                  },
                                                  Object {
                                                    "label": "1 (1W200A)",
                                                    "value": "1",
                                                  },
                                                  Object {
                                                    "label": "2 (1W200B)",
                                                    "value": "2",
                                                  },
                                                  Object {
                                                    "label": "3 (1W200C)",
                                                    "value": "3",
                                                  },
                                                  Object {
                                                    "label": "4 (1W424)",
                                                    "value": "4",
                                                  },
                                                  Object {
                                                    "label": "5 (1W428)",
                                                    "value": "5",
                                                  },
                                                  Object {
                                                    "label": "6 (1W432)",
                                                    "value": "6",
                                                  },
                                                  Object {
                                                    "label": "7 (1W434)",
                                                    "value": "7",
                                                  },
                                                  Object {
                                                    "label": "8 (1W435)",
                                                    "value": "8",
                                                  },
                                                  Object {
                                                    "label": "9 (1W436)",
                                                    "value": "9",
                                                  },
                                                  Object {
                                                    "label": "10 (1W437)",
                                                    "value": "10",
                                                  },
                                                  Object {
                                                    "label": "11 (1W438)",
                                                    "value": "11",
                                                  },
                                                  Object {
                                                    "label": "12 (1W439)",
                                                    "value": "12",
                                                  },
                                                  Object {
                                                    "label": "13 (1W440)",
                                                    "value": "13",
                                                  },
                                                  Object {
                                                    "label": "14 (3W405)",
                                                    "value": "14",
                                                  },
                                                  Object {
                                                    "label": "15 (3W407)",
                                                    "value": "15",
                                                  },
                                                  Object {
                                                    "label": "16 (3W409)",
                                                    "value": "16",
                                                  },
                                                  Object {
                                                    "label": "17 (3W518)",
                                                    "value": "17",
                                                  },
                                                  Object {
                                                    "label": "18 (4W325)",
                                                    "value": "18",
                                                  },
                                                  Object {
                                                    "label": "Utah",
                                                    "value": "19",
                                                  },
                                                  Object {
                                                    "label": "Gold",
                                                    "value": "20",
                                                  },
                                                  Object {
                                                    "label": "Juno",
                                                    "value": "21",
                                                  },
                                                  Object {
                                                    "label": "Sword",
                                                    "value": "22",
                                                  },
                                                  Object {
                                                    "label": "Omaha",
                                                    "value": "23",
                                                  },
                                                  Object {
                                                    "label": "Anzio",
                                                    "value": "24",
                                                  },
                                                  Object {
                                                    "label": "Coral Sea",
                                                    "value": "25",
                                                  },
                                                  Object {
                                                    "label": "Hue City",
                                                    "value": "26",
                                                  },
                                                  Object {
                                                    "label": "Antietam",
                                                    "value": "27",
                                                  },
                                                  Object {
                                                    "label": "Mogadishu",
                                                    "value": "28",
                                                  },
                                                ],
                                                "pageSize": 5,
                                                "placeholder": "Select...",
                                                "screenReaderStatus": [Function],
                                                "searchable": undefined,
                                                "shouldKeyDownEventCreateNewOption": [Function],
                                                "styles": Object {
                                                  "input": [Function],
                                                },
                                                "tabIndex": "0",
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "1 (1W200A)",
                                                  "value": "1",
                                                },
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                              className="cf-select__indicator-separator"
                                              css={
                                                Object {
                                                  "alignSelf": "stretch",
                                                  "backgroundColor": "hsl(0, 0%, 80%)",
                                                  "boxSizing": "border-box",
                                                  "label": "indicatorSeparator",
                                                  "marginBottom": 8,
                                                  "marginTop": 8,
                                                  "width": 1,
                                                }
                                              }
                                            >
                                              <span
                                                className="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                                              />
                                            </EmotionCssPropInternal>
                                          </IndicatorSeparator>
                                          <DropdownIndicator
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={true}
                                            innerProps={
                                              Object {
                                                "aria-hidden": "true",
                                                "onMouseDown": [Function],
                                                "onTouchEnd": [Function],
                                              }
                                            }
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            options={
                                              Array [
                                                Object {
                                                  "label": "None",
                                                  "value": null,
                                                },
                                                Object {
                                                  "label": "1 (1W200A)",
                                                  "value": "1",
                                                },
                                                Object {
                                                  "label": "2 (1W200B)",
                                                  "value": "2",
                                                },
                                                Object {
                                                  "label": "3 (1W200C)",
                                                  "value": "3",
                                                },
                                                Object {
                                                  "label": "4 (1W424)",
                                                  "value": "4",
                                                },
                                                Object {
                                                  "label": "5 (1W428)",
                                                  "value": "5",
                                                },
                                                Object {
                                                  "label": "6 (1W432)",
                                                  "value": "6",
                                                },
                                                Object {
                                                  "label": "7 (1W434)",
                                                  "value": "7",
                                                },
                                                Object {
                                                  "label": "8 (1W435)",
                                                  "value": "8",
                                                },
                                                Object {
                                                  "label": "9 (1W436)",
                                                  "value": "9",
                                                },
                                                Object {
                                                  "label": "10 (1W437)",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "11 (1W438)",
                                                  "value": "11",
                                                },
                                                Object {
                                                  "label": "12 (1W439)",
                                                  "value": "12",
                                                },
                                                Object {
                                                  "label": "13 (1W440)",
                                                  "value": "13",
                                                },
                                                Object {
                                                  "label": "14 (3W405)",
                                                  "value": "14",
                                                },
                                                Object {
                                                  "label": "15 (3W407)",
                                                  "value": "15",
                                                },
                                                Object {
                                                  "label": "16 (3W409)",
                                                  "value": "16",
                                                },
                                                Object {
                                                  "label": "17 (3W518)",
                                                  "value": "17",
                                                },
                                                Object {
                                                  "label": "18 (4W325)",
                                                  "value": "18",
                                                },
                                                Object {
                                                  "label": "Utah",
                                                  "value": "19",
                                                },
                                                Object {
                                                  "label": "Gold",
                                                  "value": "20",
                                                },
                                                Object {
                                                  "label": "Juno",
                                                  "value": "21",
                                                },
                                                Object {
                                                  "label": "Sword",
                                                  "value": "22",
                                                },
                                                Object {
                                                  "label": "Omaha",
                                                  "value": "23",
                                                },
                                                Object {
                                                  "label": "Anzio",
                                                  "value": "24",
                                                },
                                                Object {
                                                  "label": "Coral Sea",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "Hue City",
                                                  "value": "26",
                                                },
                                                Object {
                                                  "label": "Antietam",
                                                  "value": "27",
                                                },
                                                Object {
                                                  "label": "Mogadishu",
                                                  "value": "28",
                                                },
                                              ]
                                            }
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "cache": false,
                                                "captureMenuScroll": false,
                                                "classNamePrefix": "cf-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "Input": [Function],
                                                  "MenuList": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "defaultOptions": undefined,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "inputId": "hearing-room-dropdown",
                                                "inputValue": "",
                                                "isClearable": undefined,
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": true,
                                                "loadOptions": undefined,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "hearingRoomDropdown",
                                                "noOptionsMessage": [Function],
                                                "onBlurResetsInput": false,
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [
                                                  Object {
                                                    "label": "None",
                                                    "value": null,
                                                  },
                                                  Object {
                                                    "label": "1 (1W200A)",
                                                    "value": "1",
                                                  },
                                                  Object {
                                                    "label": "2 (1W200B)",
                                                    "value": "2",
                                                  },
                                                  Object {
                                                    "label": "3 (1W200C)",
                                                    "value": "3",
                                                  },
                                                  Object {
                                                    "label": "4 (1W424)",
                                                    "value": "4",
                                                  },
                                                  Object {
                                                    "label": "5 (1W428)",
                                                    "value": "5",
                                                  },
                                                  Object {
                                                    "label": "6 (1W432)",
                                                    "value": "6",
                                                  },
                                                  Object {
                                                    "label": "7 (1W434)",
                                                    "value": "7",
                                                  },
                                                  Object {
                                                    "label": "8 (1W435)",
                                                    "value": "8",
                                                  },
                                                  Object {
                                                    "label": "9 (1W436)",
                                                    "value": "9",
                                                  },
                                                  Object {
                                                    "label": "10 (1W437)",
                                                    "value": "10",
                                                  },
                                                  Object {
                                                    "label": "11 (1W438)",
                                                    "value": "11",
                                                  },
                                                  Object {
                                                    "label": "12 (1W439)",
                                                    "value": "12",
                                                  },
                                                  Object {
                                                    "label": "13 (1W440)",
                                                    "value": "13",
                                                  },
                                                  Object {
                                                    "label": "14 (3W405)",
                                                    "value": "14",
                                                  },
                                                  Object {
                                                    "label": "15 (3W407)",
                                                    "value": "15",
                                                  },
                                                  Object {
                                                    "label": "16 (3W409)",
                                                    "value": "16",
                                                  },
                                                  Object {
                                                    "label": "17 (3W518)",
                                                    "value": "17",
                                                  },
                                                  Object {
                                                    "label": "18 (4W325)",
                                                    "value": "18",
                                                  },
                                                  Object {
                                                    "label": "Utah",
                                                    "value": "19",
                                                  },
                                                  Object {
                                                    "label": "Gold",
                                                    "value": "20",
                                                  },
                                                  Object {
                                                    "label": "Juno",
                                                    "value": "21",
                                                  },
                                                  Object {
                                                    "label": "Sword",
                                                    "value": "22",
                                                  },
                                                  Object {
                                                    "label": "Omaha",
                                                    "value": "23",
                                                  },
                                                  Object {
                                                    "label": "Anzio",
                                                    "value": "24",
                                                  },
                                                  Object {
                                                    "label": "Coral Sea",
                                                    "value": "25",
                                                  },
                                                  Object {
                                                    "label": "Hue City",
                                                    "value": "26",
                                                  },
                                                  Object {
                                                    "label": "Antietam",
                                                    "value": "27",
                                                  },
                                                  Object {
                                                    "label": "Mogadishu",
                                                    "value": "28",
                                                  },
                                                ],
                                                "pageSize": 5,
                                                "placeholder": "Select...",
                                                "screenReaderStatus": [Function],
                                                "searchable": undefined,
                                                "shouldKeyDownEventCreateNewOption": [Function],
                                                "styles": Object {
                                                  "input": [Function],
                                                },
                                                "tabIndex": "0",
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "1 (1W200A)",
                                                  "value": "1",
                                                },
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              aria-hidden="true"
                                              className="cf-select__indicator cf-select__dropdown-indicator"
                                              css={
                                                Object {
                                                  ":hover": Object {
                                                    "color": "hsl(0, 0%, 60%)",
                                                  },
                                                  "boxSizing": "border-box",
                                                  "color": "hsl(0, 0%, 80%)",
                                                  "display": "flex",
                                                  "label": "indicatorContainer",
                                                  "padding": 8,
                                                  "transition": "color 150ms",
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <div
                                                aria-hidden="true"
                                                className="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <DownChevron>
                                                  <Svg
                                                    size={20}
                                                  >
                                                    <EmotionCssPropInternal
                                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                      aria-hidden="true"
                                                      css={
                                                        Object {
                                                          "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                          "name": "19bqh2r",
                                                          "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                          "toString": [Function],
                                                        }
                                                      }
                                                      focusable="false"
                                                      height={20}
                                                      viewBox="0 0 20 20"
                                                      width={20}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="css-6q0nyr-Svg"
                                                        focusable="false"
                                                        height={20}
                                                        viewBox="0 0 20 20"
                                                        width={20}
                                                      >
                                                        <path
                                                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                        />
                                                      </svg>
                                                    </EmotionCssPropInternal>
                                                  </Svg>
                                                </DownChevron>
                                              </div>
                                            </EmotionCssPropInternal>
                                          </DropdownIndicator>
                                        </div>
                                      </EmotionCssPropInternal>
                                    </IndicatorsContainer>
                                  </div>
                                </EmotionCssPropInternal>
                              </Control>
                              <input
                                name="hearingRoomDropdown"
                                type="hidden"
                                value="1"
                              />
                            </div>
                          </EmotionCssPropInternal>
                        </SelectContainer>
                      </Select>
                    </StateManager>
                  </div>
                </div>
              </div>
            </SearchableDropdown>
          </HearingRoomDropdown>
        </div>
        <div
          data-css-1fmltfu=""
        >
          <HearingTypeDropdown
            readOnly={false}
            styling={
              Object {
                "data-css-vzv9iy": "",
              }
            }
          >
            <SearchableDropdown
              clearOnSelect={false}
              label="Hearing Type"
              loading={false}
              name="hearingType"
              readOnly={false}
              strongLabel={true}
              styling={
                Object {
                  "data-css-vzv9iy": "",
                }
              }
            >
              <div
                className=""
              >
                <div
                  className="cf-form-dropdown dropdown-hearingType"
                  data-css-vzv9iy=""
                >
                  <label
                    className="question-label"
                    htmlFor="hearing-type"
                    id="hearing-type-label"
                  >
                    <strong>
                      <FormLabel
                        label="Hearing Type"
                        name="Hearing Type"
                      >
                        <span>
                          Hearing Type
                        </span>
                      </FormLabel>
                    </strong>
                  </label>
                  <div
                    className="cf-select"
                  >
                    <StateManager
                      cache={false}
                      classNamePrefix="cf-select"
                      components={
                        Object {
                          "Input": [Function],
                          "MenuList": [Function],
                          "Option": [Function],
                        }
                      }
                      defaultInputValue=""
                      defaultMenuIsOpen={false}
                      defaultValue={null}
                      inputId="hearing-type"
                      isDisabled={false}
                      isLoading={false}
                      isSearchable={true}
                      name="hearingType"
                      noOptionsMessage={[Function]}
                      onBlurResetsInput={false}
                      onChange={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      shouldKeyDownEventCreateNewOption={[Function]}
                      styles={
                        Object {
                          "input": [Function],
                        }
                      }
                    >
                      <Select
                        backspaceRemovesValue={true}
                        blurInputOnSelect={true}
                        cache={false}
                        captureMenuScroll={false}
                        classNamePrefix="cf-select"
                        closeMenuOnScroll={false}
                        closeMenuOnSelect={true}
                        components={
                          Object {
                            "Input": [Function],
                            "MenuList": [Function],
                            "Option": [Function],
                          }
                        }
                        controlShouldRenderValue={true}
                        escapeClearsValue={false}
                        filterOption={[Function]}
                        formatGroupLabel={[Function]}
                        getOptionLabel={[Function]}
                        getOptionValue={[Function]}
                        inputId="hearing-type"
                        inputValue=""
                        isDisabled={false}
                        isLoading={false}
                        isMulti={false}
                        isOptionDisabled={[Function]}
                        isRtl={false}
                        isSearchable={true}
                        loadingMessage={[Function]}
                        maxMenuHeight={300}
                        menuIsOpen={false}
                        menuPlacement="bottom"
                        menuPosition="absolute"
                        menuShouldBlockScroll={false}
                        menuShouldScrollIntoView={true}
                        minMenuHeight={140}
                        name="hearingType"
                        noOptionsMessage={[Function]}
                        onBlurResetsInput={false}
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onMenuClose={[Function]}
                        onMenuOpen={[Function]}
                        openMenuOnClick={true}
                        openMenuOnFocus={false}
                        options={Array []}
                        pageSize={5}
                        placeholder="Select..."
                        screenReaderStatus={[Function]}
                        shouldKeyDownEventCreateNewOption={[Function]}
                        styles={
                          Object {
                            "input": [Function],
                          }
                        }
                        tabIndex="0"
                        tabSelectsValue={true}
                        value={null}
                      >
                        <SelectContainer
                          clearValue={[Function]}
                          cx={[Function]}
                          getStyles={[Function]}
                          getValue={[Function]}
                          hasValue={false}
                          innerProps={
                            Object {
                              "id": undefined,
                              "onKeyDown": [Function],
                            }
                          }
                          isDisabled={false}
                          isFocused={false}
                          isMulti={false}
                          isRtl={false}
                          options={Array []}
                          selectOption={[Function]}
                          selectProps={
                            Object {
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cache": false,
                              "captureMenuScroll": false,
                              "classNamePrefix": "cf-select",
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {
                                "Input": [Function],
                                "MenuList": [Function],
                                "Option": [Function],
                              },
                              "controlShouldRenderValue": true,
                              "defaultOptions": undefined,
                              "escapeClearsValue": false,
                              "filterOption": [Function],
                              "formatGroupLabel": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputId": "hearing-type",
                              "inputValue": "",
                              "isClearable": undefined,
                              "isDisabled": false,
                              "isLoading": false,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "loadOptions": undefined,
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "name": "hearingType",
                              "noOptionsMessage": [Function],
                              "onBlurResetsInput": false,
                              "onChange": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [],
                              "pageSize": 5,
                              "placeholder": "Select...",
                              "screenReaderStatus": [Function],
                              "searchable": undefined,
                              "shouldKeyDownEventCreateNewOption": [Function],
                              "styles": Object {
                                "input": [Function],
                              },
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": null,
                            }
                          }
                          setValue={[Function]}
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                        >
                          <EmotionCssPropInternal
                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                            className=""
                            css={
                              Object {
                                "boxSizing": "border-box",
                                "direction": null,
                                "label": "container",
                                "pointerEvents": null,
                                "position": "relative",
                              }
                            }
                            onKeyDown={[Function]}
                          >
                            <div
                              className=" css-2b097c-container"
                              onKeyDown={[Function]}
                            >
                              <Control
                                clearValue={[Function]}
                                cx={[Function]}
                                getStyles={[Function]}
                                getValue={[Function]}
                                hasValue={false}
                                innerProps={
                                  Object {
                                    "onMouseDown": [Function],
                                    "onTouchEnd": [Function],
                                  }
                                }
                                innerRef={[Function]}
                                isDisabled={false}
                                isFocused={false}
                                isMulti={false}
                                isRtl={false}
                                menuIsOpen={false}
                                options={Array []}
                                selectOption={[Function]}
                                selectProps={
                                  Object {
                                    "backspaceRemovesValue": true,
                                    "blurInputOnSelect": true,
                                    "cache": false,
                                    "captureMenuScroll": false,
                                    "classNamePrefix": "cf-select",
                                    "closeMenuOnScroll": false,
                                    "closeMenuOnSelect": true,
                                    "components": Object {
                                      "Input": [Function],
                                      "MenuList": [Function],
                                      "Option": [Function],
                                    },
                                    "controlShouldRenderValue": true,
                                    "defaultOptions": undefined,
                                    "escapeClearsValue": false,
                                    "filterOption": [Function],
                                    "formatGroupLabel": [Function],
                                    "getOptionLabel": [Function],
                                    "getOptionValue": [Function],
                                    "inputId": "hearing-type",
                                    "inputValue": "",
                                    "isClearable": undefined,
                                    "isDisabled": false,
                                    "isLoading": false,
                                    "isMulti": false,
                                    "isOptionDisabled": [Function],
                                    "isRtl": false,
                                    "isSearchable": true,
                                    "loadOptions": undefined,
                                    "loadingMessage": [Function],
                                    "maxMenuHeight": 300,
                                    "menuIsOpen": false,
                                    "menuPlacement": "bottom",
                                    "menuPosition": "absolute",
                                    "menuShouldBlockScroll": false,
                                    "menuShouldScrollIntoView": true,
                                    "minMenuHeight": 140,
                                    "name": "hearingType",
                                    "noOptionsMessage": [Function],
                                    "onBlurResetsInput": false,
                                    "onChange": [Function],
                                    "onInputChange": [Function],
                                    "onMenuClose": [Function],
                                    "onMenuOpen": [Function],
                                    "openMenuOnClick": true,
                                    "openMenuOnFocus": false,
                                    "options": Array [],
                                    "pageSize": 5,
                                    "placeholder": "Select...",
                                    "screenReaderStatus": [Function],
                                    "searchable": undefined,
                                    "shouldKeyDownEventCreateNewOption": [Function],
                                    "styles": Object {
                                      "input": [Function],
                                    },
                                    "tabIndex": "0",
                                    "tabSelectsValue": true,
                                    "value": null,
                                  }
                                }
                                setValue={[Function]}
                                theme={
                                  Object {
                                    "borderRadius": 4,
                                    "colors": Object {
                                      "danger": "#DE350B",
                                      "dangerLight": "#FFBDAD",
                                      "neutral0": "hsl(0, 0%, 100%)",
                                      "neutral10": "hsl(0, 0%, 90%)",
                                      "neutral20": "hsl(0, 0%, 80%)",
                                      "neutral30": "hsl(0, 0%, 70%)",
                                      "neutral40": "hsl(0, 0%, 60%)",
                                      "neutral5": "hsl(0, 0%, 95%)",
                                      "neutral50": "hsl(0, 0%, 50%)",
                                      "neutral60": "hsl(0, 0%, 40%)",
                                      "neutral70": "hsl(0, 0%, 30%)",
                                      "neutral80": "hsl(0, 0%, 20%)",
                                      "neutral90": "hsl(0, 0%, 10%)",
                                      "primary": "#2684FF",
                                      "primary25": "#DEEBFF",
                                      "primary50": "#B2D4FF",
                                      "primary75": "#4C9AFF",
                                    },
                                    "spacing": Object {
                                      "baseUnit": 4,
                                      "controlHeight": 38,
                                      "menuGutter": 8,
                                    },
                                  }
                                }
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                  className="cf-select__control"
                                  css={
                                    Object {
                                      "&:hover": Object {
                                        "borderColor": "hsl(0, 0%, 70%)",
                                      },
                                      "alignItems": "center",
                                      "backgroundColor": "hsl(0, 0%, 100%)",
                                      "borderColor": "hsl(0, 0%, 80%)",
                                      "borderRadius": 4,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "boxShadow": null,
                                      "boxSizing": "border-box",
                                      "cursor": "default",
                                      "display": "flex",
                                      "flexWrap": "wrap",
                                      "justifyContent": "space-between",
                                      "label": "control",
                                      "minHeight": 38,
                                      "outline": "0 !important",
                                      "position": "relative",
                                      "transition": "all 100ms",
                                    }
                                  }
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <div
                                    className="cf-select__control css-yk16xz-control"
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <ValueContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={false}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={Array []}
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "cache": false,
                                          "captureMenuScroll": false,
                                          "classNamePrefix": "cf-select",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "Input": [Function],
                                            "MenuList": [Function],
                                            "Option": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "defaultOptions": undefined,
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "inputId": "hearing-type",
                                          "inputValue": "",
                                          "isClearable": undefined,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadOptions": undefined,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "name": "hearingType",
                                          "noOptionsMessage": [Function],
                                          "onBlurResetsInput": false,
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "searchable": undefined,
                                          "shouldKeyDownEventCreateNewOption": [Function],
                                          "styles": Object {
                                            "input": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "value": null,
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#DE350B",
                                            "dangerLight": "#FFBDAD",
                                            "neutral0": "hsl(0, 0%, 100%)",
                                            "neutral10": "hsl(0, 0%, 90%)",
                                            "neutral20": "hsl(0, 0%, 80%)",
                                            "neutral30": "hsl(0, 0%, 70%)",
                                            "neutral40": "hsl(0, 0%, 60%)",
                                            "neutral5": "hsl(0, 0%, 95%)",
                                            "neutral50": "hsl(0, 0%, 50%)",
                                            "neutral60": "hsl(0, 0%, 40%)",
                                            "neutral70": "hsl(0, 0%, 30%)",
                                            "neutral80": "hsl(0, 0%, 20%)",
                                            "neutral90": "hsl(0, 0%, 10%)",
                                            "primary": "#2684FF",
                                            "primary25": "#DEEBFF",
                                            "primary50": "#B2D4FF",
                                            "primary75": "#4C9AFF",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <EmotionCssPropInternal
                                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                        className="cf-select__value-container"
                                        css={
                                          Object {
                                            "WebkitOverflowScrolling": "touch",
                                            "alignItems": "center",
                                            "boxSizing": "border-box",
                                            "display": "flex",
                                            "flex": 1,
                                            "flexWrap": "wrap",
                                            "overflow": "hidden",
                                            "padding": "2px 8px",
                                            "position": "relative",
                                          }
                                        }
                                      >
                                        <div
                                          className="cf-select__value-container css-g1d714-ValueContainer"
                                        >
                                          <Placeholder
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={false}
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            key="placeholder"
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "cache": false,
                                                "captureMenuScroll": false,
                                                "classNamePrefix": "cf-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "Input": [Function],
                                                  "MenuList": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "defaultOptions": undefined,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "inputId": "hearing-type",
                                                "inputValue": "",
                                                "isClearable": undefined,
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": true,
                                                "loadOptions": undefined,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "hearingType",
                                                "noOptionsMessage": [Function],
                                                "onBlurResetsInput": false,
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select...",
                                                "screenReaderStatus": [Function],
                                                "searchable": undefined,
                                                "shouldKeyDownEventCreateNewOption": [Function],
                                                "styles": Object {
                                                  "input": [Function],
                                                },
                                                "tabIndex": "0",
                                                "tabSelectsValue": true,
                                                "value": null,
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              className="cf-select__placeholder"
                                              css={
                                                Object {
                                                  "boxSizing": "border-box",
                                                  "color": "hsl(0, 0%, 50%)",
                                                  "label": "placeholder",
                                                  "marginLeft": 2,
                                                  "marginRight": 2,
                                                  "position": "absolute",
                                                  "top": "50%",
                                                  "transform": "translateY(-50%)",
                                                }
                                              }
                                            >
                                              <div
                                                className="cf-select__placeholder css-1wa3eu0-placeholder"
                                              >
                                                Select...
                                              </div>
                                            </EmotionCssPropInternal>
                                          </Placeholder>
                                          <CustomInput
                                            aria-autocomplete="list"
                                            autoCapitalize="none"
                                            autoComplete="off"
                                            autoCorrect="off"
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            id="hearing-type"
                                            innerRef={[Function]}
                                            isDisabled={false}
                                            isHidden={false}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            selectProps={
                                              Object {
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "cache": false,
                                                "captureMenuScroll": false,
                                                "classNamePrefix": "cf-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "Input": [Function],
                                                  "MenuList": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "defaultOptions": undefined,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "inputId": "hearing-type",
                                                "inputValue": "",
                                                "isClearable": undefined,
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": true,
                                                "loadOptions": undefined,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "hearingType",
                                                "noOptionsMessage": [Function],
                                                "onBlurResetsInput": false,
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select...",
                                                "screenReaderStatus": [Function],
                                                "searchable": undefined,
                                                "shouldKeyDownEventCreateNewOption": [Function],
                                                "styles": Object {
                                                  "input": [Function],
                                                },
                                                "tabIndex": "0",
                                                "tabSelectsValue": true,
                                                "value": null,
                                              }
                                            }
                                            spellCheck="false"
                                            tabIndex="0"
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                            type="text"
                                            value=""
                                          >
                                            <Input
                                              aria-autocomplete="list"
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              aria-labelledby="hearing-type-label"
                                              aria-owns="hearing-type-listbox"
                                              autoCapitalize="none"
                                              autoComplete="off"
                                              autoCorrect="off"
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              id="hearing-type"
                                              innerRef={[Function]}
                                              isDisabled={false}
                                              isHidden={false}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              role="combobox"
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "cache": false,
                                                  "captureMenuScroll": false,
                                                  "classNamePrefix": "cf-select",
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "Input": [Function],
                                                    "MenuList": [Function],
                                                    "Option": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "defaultOptions": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "inputId": "hearing-type",
                                                  "inputValue": "",
                                                  "isClearable": undefined,
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadOptions": undefined,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "bottom",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "name": "hearingType",
                                                  "noOptionsMessage": [Function],
                                                  "onBlurResetsInput": false,
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "searchable": undefined,
                                                  "shouldKeyDownEventCreateNewOption": [Function],
                                                  "styles": Object {
                                                    "input": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": null,
                                                }
                                              }
                                              spellCheck="false"
                                              tabIndex="0"
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                              type="text"
                                              value=""
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                css={
                                                  Object {
                                                    "height": "44px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="css-81nyic-Input"
                                                >
                                                  <AutosizeInput
                                                    aria-autocomplete="list"
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    aria-labelledby="hearing-type-label"
                                                    aria-owns="hearing-type-listbox"
                                                    autoCapitalize="none"
                                                    autoComplete="off"
                                                    autoCorrect="off"
                                                    className="cf-select__input"
                                                    disabled={false}
                                                    id="hearing-type"
                                                    injectStyles={true}
                                                    inputRef={[Function]}
                                                    inputStyle={
                                                      Object {
                                                        "background": 0,
                                                        "border": 0,
                                                        "color": "inherit",
                                                        "fontSize": "inherit",
                                                        "label": "input",
                                                        "opacity": 1,
                                                        "outline": 0,
                                                        "padding": 0,
                                                      }
                                                    }
                                                    minWidth={1}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    role="combobox"
                                                    spellCheck="false"
                                                    tabIndex="0"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <div
                                                      className="cf-select__input"
                                                      style={
                                                        Object {
                                                          "display": "inline-block",
                                                        }
                                                      }
                                                    >
                                                      <input
                                                        aria-autocomplete="list"
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-labelledby="hearing-type-label"
                                                        aria-owns="hearing-type-listbox"
                                                        autoCapitalize="none"
                                                        autoComplete="off"
                                                        autoCorrect="off"
                                                        disabled={false}
                                                        id="hearing-type"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        role="combobox"
                                                        spellCheck="false"
                                                        style={
                                                          Object {
                                                            "background": 0,
                                                            "border": 0,
                                                            "boxSizing": "content-box",
                                                            "color": "inherit",
                                                            "fontSize": "inherit",
                                                            "label": "input",
                                                            "opacity": 1,
                                                            "outline": 0,
                                                            "padding": 0,
                                                            "width": "2px",
                                                          }
                                                        }
                                                        tabIndex="0"
                                                        type="text"
                                                        value=""
                                                      />
                                                      <div
                                                        style={
                                                          Object {
                                                            "height": 0,
                                                            "left": 0,
                                                            "overflow": "scroll",
                                                            "position": "absolute",
                                                            "top": 0,
                                                            "visibility": "hidden",
                                                            "whiteSpace": "pre",
                                                          }
                                                        }
                                                      />
                                                    </div>
                                                  </AutosizeInput>
                                                </div>
                                              </EmotionCssPropInternal>
                                            </Input>
                                          </CustomInput>
                                        </div>
                                      </EmotionCssPropInternal>
                                    </ValueContainer>
                                    <IndicatorsContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={false}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={Array []}
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "cache": false,
                                          "captureMenuScroll": false,
                                          "classNamePrefix": "cf-select",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "Input": [Function],
                                            "MenuList": [Function],
                                            "Option": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "defaultOptions": undefined,
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "inputId": "hearing-type",
                                          "inputValue": "",
                                          "isClearable": undefined,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadOptions": undefined,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "name": "hearingType",
                                          "noOptionsMessage": [Function],
                                          "onBlurResetsInput": false,
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "searchable": undefined,
                                          "shouldKeyDownEventCreateNewOption": [Function],
                                          "styles": Object {
                                            "input": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "value": null,
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#DE350B",
                                            "dangerLight": "#FFBDAD",
                                            "neutral0": "hsl(0, 0%, 100%)",
                                            "neutral10": "hsl(0, 0%, 90%)",
                                            "neutral20": "hsl(0, 0%, 80%)",
                                            "neutral30": "hsl(0, 0%, 70%)",
                                            "neutral40": "hsl(0, 0%, 60%)",
                                            "neutral5": "hsl(0, 0%, 95%)",
                                            "neutral50": "hsl(0, 0%, 50%)",
                                            "neutral60": "hsl(0, 0%, 40%)",
                                            "neutral70": "hsl(0, 0%, 30%)",
                                            "neutral80": "hsl(0, 0%, 20%)",
                                            "neutral90": "hsl(0, 0%, 10%)",
                                            "primary": "#2684FF",
                                            "primary25": "#DEEBFF",
                                            "primary50": "#B2D4FF",
                                            "primary75": "#4C9AFF",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <EmotionCssPropInternal
                                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                        className="cf-select__indicators"
                                        css={
                                          Object {
                                            "alignItems": "center",
                                            "alignSelf": "stretch",
                                            "boxSizing": "border-box",
                                            "display": "flex",
                                            "flexShrink": 0,
                                          }
                                        }
                                      >
                                        <div
                                          className="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                                        >
                                          <IndicatorSeparator
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={false}
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "cache": false,
                                                "captureMenuScroll": false,
                                                "classNamePrefix": "cf-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "Input": [Function],
                                                  "MenuList": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "defaultOptions": undefined,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "inputId": "hearing-type",
                                                "inputValue": "",
                                                "isClearable": undefined,
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": true,
                                                "loadOptions": undefined,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "hearingType",
                                                "noOptionsMessage": [Function],
                                                "onBlurResetsInput": false,
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select...",
                                                "screenReaderStatus": [Function],
                                                "searchable": undefined,
                                                "shouldKeyDownEventCreateNewOption": [Function],
                                                "styles": Object {
                                                  "input": [Function],
                                                },
                                                "tabIndex": "0",
                                                "tabSelectsValue": true,
                                                "value": null,
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                              className="cf-select__indicator-separator"
                                              css={
                                                Object {
                                                  "alignSelf": "stretch",
                                                  "backgroundColor": "hsl(0, 0%, 80%)",
                                                  "boxSizing": "border-box",
                                                  "label": "indicatorSeparator",
                                                  "marginBottom": 8,
                                                  "marginTop": 8,
                                                  "width": 1,
                                                }
                                              }
                                            >
                                              <span
                                                className="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                                              />
                                            </EmotionCssPropInternal>
                                          </IndicatorSeparator>
                                          <DropdownIndicator
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={false}
                                            innerProps={
                                              Object {
                                                "aria-hidden": "true",
                                                "onMouseDown": [Function],
                                                "onTouchEnd": [Function],
                                              }
                                            }
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "cache": false,
                                                "captureMenuScroll": false,
                                                "classNamePrefix": "cf-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "Input": [Function],
                                                  "MenuList": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "defaultOptions": undefined,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "inputId": "hearing-type",
                                                "inputValue": "",
                                                "isClearable": undefined,
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": true,
                                                "loadOptions": undefined,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "hearingType",
                                                "noOptionsMessage": [Function],
                                                "onBlurResetsInput": false,
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select...",
                                                "screenReaderStatus": [Function],
                                                "searchable": undefined,
                                                "shouldKeyDownEventCreateNewOption": [Function],
                                                "styles": Object {
                                                  "input": [Function],
                                                },
                                                "tabIndex": "0",
                                                "tabSelectsValue": true,
                                                "value": null,
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              aria-hidden="true"
                                              className="cf-select__indicator cf-select__dropdown-indicator"
                                              css={
                                                Object {
                                                  ":hover": Object {
                                                    "color": "hsl(0, 0%, 60%)",
                                                  },
                                                  "boxSizing": "border-box",
                                                  "color": "hsl(0, 0%, 80%)",
                                                  "display": "flex",
                                                  "label": "indicatorContainer",
                                                  "padding": 8,
                                                  "transition": "color 150ms",
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <div
                                                aria-hidden="true"
                                                className="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <DownChevron>
                                                  <Svg
                                                    size={20}
                                                  >
                                                    <EmotionCssPropInternal
                                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                      aria-hidden="true"
                                                      css={
                                                        Object {
                                                          "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                          "name": "19bqh2r",
                                                          "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                          "toString": [Function],
                                                        }
                                                      }
                                                      focusable="false"
                                                      height={20}
                                                      viewBox="0 0 20 20"
                                                      width={20}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="css-6q0nyr-Svg"
                                                        focusable="false"
                                                        height={20}
                                                        viewBox="0 0 20 20"
                                                        width={20}
                                                      >
                                                        <path
                                                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                        />
                                                      </svg>
                                                    </EmotionCssPropInternal>
                                                  </Svg>
                                                </DownChevron>
                                              </div>
                                            </EmotionCssPropInternal>
                                          </DropdownIndicator>
                                        </div>
                                      </EmotionCssPropInternal>
                                    </IndicatorsContainer>
                                  </div>
                                </EmotionCssPropInternal>
                              </Control>
                              <input
                                name="hearingType"
                                type="hidden"
                                value=""
                              />
                            </div>
                          </EmotionCssPropInternal>
                        </SelectContainer>
                      </Select>
                    </StateManager>
                  </div>
                </div>
              </div>
            </SearchableDropdown>
          </HearingTypeDropdown>
          <div />
          <div />
        </div>
        <div>
          <TextareaField
            characterLimitTopRight={false}
            disabled={false}
            maxlength={1000}
            name="Notes"
            onChange={[Function]}
            optional={false}
            required={false}
            strongLabel={true}
            styling={
              Object {
                "data-css-d0z96": "",
              }
            }
            value=""
          >
            <div
              className="cf-form-textarea"
              data-css-d0z96=""
            >
              <label
                className="question-label"
                htmlFor="Notes"
              >
                <strong>
                  <FormLabel
                    name="Notes"
                    optional={false}
                    required={false}
                  >
                    <span>
                      Notes
                    </span>
                  </span>
                </strong>
              </label>
              <div
                class="cf-select"
              >
                <div
                  class=" css-2b097c-container"
                >
                  <div
                    class="cf-select__control css-yk16xz-control"
                  >
                    <div
                      class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                    >
                      <div
                        class="cf-select__single-value css-1uccc91-singleValue"
                      >
                        Pacific Time (US & Canada) (3:00 AM)
                      </div>
                      <div
                        class="css-81nyic-Input"
                      >
                        <div
                          class="cf-select__input"
                          style="display: inline-block;"
                        >
                          <input
                            aria-autocomplete="list"
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-labelledby="appellant-tz-label"
                            aria-owns="appellant-tz-listbox"
                            autocapitalize="none"
                            autocomplete="off"
                            autocorrect="off"
                            id="appellant-tz"
                            role="combobox"
                            spellcheck="false"
                            style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                            tabindex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                      >
                        <svg
                          aria-hidden="true"
                          class="css-6q0nyr-Svg"
                          focusable="false"
                          height="20"
                          viewBox="0 0 20 20"
                          width="20"
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <input
                    name="appellantTz"
                    type="hidden"
                    value="America/Los_Angeles"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="helper-text"
          >
            The hearing time in email notifications is calculated based on the timezone.
          </div>
        </div>
        <div
          class="usa-width-one-third"
        >
          <div
            class="cf-form-textinput cf-inline-field   "
          >
            <label
              for="Veteran Email"
            >
              <strong>
                <span>
                  Veteran Email
                  <span
                    class="cf-optional"
                  >
                    Optional
                  </span>
                </span>
              </strong>
            </label>
            <div
              class="input-container"
            >
              <input
                aria-readonly="false"
                class="cf-form-textinput cf-inline-field"
                id="Veteran Email"
                name="Veteran Email"
                type="text"
                value="tom.brady@caseflow.gov"
              />
            </div>
          </div>
          <div
            class="helper-text"
          >
            This email address will be used to send notifications for this hearing only.
          </div>
        </div>
      </div>
      <div
        class="cf-help-divider"
      />
      <div
        class="usa-grid css-1jfbwxw"
      >
        <div
          class="usa-width-one-third"
          data-css-150oin1=""
        >
          <div
            class=""
          >
            <div
              class="cf-form-dropdown dropdown-representativeTz"
              data-css-1dzedb9=""
            >
              <label
                class="question-label"
                for="representative-tz"
                id="representative-tz-label"
              >
                <strong>
                  <span>
                    POA/Representative Timezone
                    <span
                      class="cf-required"
                    >
                      Required
                    </span>
                  </span>
                </strong>
              </label>
              <div
                class="cf-select"
              >
                <div
                  class=" css-2b097c-container"
                >
                  <div
                    class="cf-select__control css-yk16xz-control"
                  >
                    <div
                      class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                    >
                      <div
                        class="cf-select__single-value css-1uccc91-singleValue"
                      >
                        Pacific Time (US & Canada) (3:00 AM)
                      </div>
                      <div
                        class="css-81nyic-Input"
                      >
                        <div
                          class="cf-select__input"
                          style="display: inline-block;"
                        >
                          <input
                            aria-autocomplete="list"
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-labelledby="representative-tz-label"
                            aria-owns="representative-tz-listbox"
                            autocapitalize="none"
                            autocomplete="off"
                            autocorrect="off"
                            id="representative-tz"
                            role="combobox"
                            spellcheck="false"
                            style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                            tabindex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                      >
                        <svg
                          aria-hidden="true"
                          class="css-6q0nyr-Svg"
                          focusable="false"
                          height="20"
                          viewBox="0 0 20 20"
                          width="20"
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <input
                    name="representativeTz"
                    type="hidden"
                    value="America/Los_Angeles"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="helper-text"
          >
            The hearing time in email notifications is calculated based on the timezone.
          </div>
        </div>
        <div
          class="usa-width-one-third"
        >
          <div
            class="cf-form-textinput cf-inline-field   "
          >
            <label
              for="POA/Representative Email"
            >
              <strong>
                <span>
                  POA/Representative Email
                  <span
                    class="cf-optional"
                  >
                    Optional
                  </span>
                </span>
              </strong>
            </label>
            <div
              class="input-container"
            >
              <input
                aria-readonly="false"
                class="cf-form-textinput cf-inline-field"
                id="POA/Representative Email"
                name="POA/Representative Email"
                type="text"
                value="tom.brady@caseflow.gov"
              />
            </div>
          </div>
          <div
            class="helper-text"
          >
            This email address will be used to send notifications for this hearing only.
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Transcription Details
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-1fmltfu=""
      >
        <div
          class="cf-form-textinput   "
        >
          <label
            for="taskNumber"
          >
            <strong>
              <span>
                Task #
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <div
              data-css-19plkw7=""
              data-css-1fmltfu=""
            >
              <LinkContainer
                hearing={
                  Object {
                    "advanceOnDocketMotion": null,
                    "aod": false,
                    "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
                    "appealId": 613,
                    "appellantAddressLine1": "9999 MISSION ST",
                    "appellantCity": "SAN FRANCISCO",
                    "appellantEmailAddress": "tom.brady@caseflow.gov",
                    "appellantFirstName": "Tom",
                    "appellantIsNotVeteran": false,
                    "appellantLastName": "Brady",
                    "appellantRelationship": "Spouse",
                    "appellantState": "CA",
                    "appellantTz": "America/Los_Angeles",
                    "appellantZip": "94103",
                    "availableHearingLocations": Object {},
                    "bvaPoc": null,
                    "caseType": "Original",
                    "centralOfficeTimeString": "04:00",
                    "claimantId": 604,
                    "closestRegionalOffice": null,
                    "conferenceProvider": "pexip",
                    "currentIssueCount": 0,
                    "disposition": null,
                    "dispositionEditable": true,
                    "docketName": "hearing",
                    "docketNumber": "200624-614",
                    "emailEvents": Array [],
                    "evidenceWindowWaived": false,
                    "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                    "hearingDayId": 11,
                    "id": 10,
                    "isVirtual": false,
                    "judge": Object {
                      "createdAt": "2020-06-25T11:00:43.257-04:00",
                      "cssId": "BVAAABSHIRE",
                      "displayName": "BVAAABSHIRE (VACO)",
                      "efolderDocumentsFetchedAt": null,
                      "email": null,
                      "fullName": "Aaron Judge_HearingsAndCases Abshire",
                      "id": 3,
                      "lastLoginAt": null,
                      "roles": Object {},
                      "selectedRegionalOffice": null,
                      "stationId": "101",
                      "status": "active",
                      "statusUpdatedAt": null,
                      "updatedAt": "2020-06-25T11:00:43.257-04:00",
                    },
                    "judgeId": "3",
                    "location": null,
                    "militaryService": "",
                    "notes": null,
                    "paperCase": false,
                    "poaName": "AMERICAN LEGION",
                    "prepped": null,
                    "readableLocation": null,
                    "readableRequestType": "Video",
                    "regionalOfficeKey": "RO17",
                    "regionalOfficeName": "St. Petersburg regional office",
                    "regionalOfficeTimezone": "America/New_York",
                    "representative": "PARALYZED VETERANS OF AMERICA, INC.",
                    "representativeAddress": Object {
                      "addressLine1": "9999 MISSION ST",
                      "city": "SAN FRANCISCO",
                      "state": "CA",
                      "zip": "94103",
                    },
                    "representativeEmailAddress": "tom.brady@caseflow.gov",
                    "representativeName": null,
                    "representativeTz": "America/Los_Angeles",
                    "room": "1",
                    "scheduledFor": "2020-07-06T06:00:00.000-04:00",
                    "scheduledForIsPast": false,
                    "scheduledTime": "2000-01-01T06:00:00.000-05:00",
                    "scheduledTimeString": "06:00",
                    "summary": null,
                    "transcriptRequested": null,
                    "transcription": Object {},
                    "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                    "veteranAge": 85,
                    "veteranEmailAddress": "John.Smith@test.com",
                    "veteranFileNumber": "100000005",
                    "veteranFirstName": "John",
                    "veteranGender": "M",
                    "veteranLastName": "Smith",
                    "virtualHearing": null,
                    "wasVirtual": false,
                    "witness": null,
                    "worksheetIssues": Object {},
                  }
                }
                isVirtual={false}
                label="Guest Link"
                linkText="Join Hearing"
                role="Guest"
                user={
                  Object {
                    "addressCity": "Washington",
                    "addressLine1": "123 Fake St.",
                    "addressState": "DC",
                    "addressZip": "20001",
                    "name": "John Smith",
                  }
                }
                virtualHearing={null}
                wasVirtual={false}
              >
                <div
                  data-css-tx10g=""
                  id="guest-hearings-link"
                >
                  <strong>
                    Guest Link
                    :
                  </strong>
                  <VirtualHearingLinkDetails
                    hearing={
                      Object {
                        "advanceOnDocketMotion": null,
                        "aod": false,
                        "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
                        "appealId": 613,
                        "appellantAddressLine1": "9999 MISSION ST",
                        "appellantCity": "SAN FRANCISCO",
                        "appellantEmailAddress": "tom.brady@caseflow.gov",
                        "appellantFirstName": "Tom",
                        "appellantIsNotVeteran": false,
                        "appellantLastName": "Brady",
                        "appellantRelationship": "Spouse",
                        "appellantState": "CA",
                        "appellantTz": "America/Los_Angeles",
                        "appellantZip": "94103",
                        "availableHearingLocations": Object {},
                        "bvaPoc": null,
                        "caseType": "Original",
                        "centralOfficeTimeString": "04:00",
                        "claimantId": 604,
                        "closestRegionalOffice": null,
                        "conferenceProvider": "pexip",
                        "currentIssueCount": 0,
                        "disposition": null,
                        "dispositionEditable": true,
                        "docketName": "hearing",
                        "docketNumber": "200624-614",
                        "emailEvents": Array [],
                        "evidenceWindowWaived": false,
                        "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                        "hearingDayId": 11,
                        "id": 10,
                        "isVirtual": false,
                        "judge": Object {
                          "createdAt": "2020-06-25T11:00:43.257-04:00",
                          "cssId": "BVAAABSHIRE",
                          "displayName": "BVAAABSHIRE (VACO)",
                          "efolderDocumentsFetchedAt": null,
                          "email": null,
                          "fullName": "Aaron Judge_HearingsAndCases Abshire",
                          "id": 3,
                          "lastLoginAt": null,
                          "roles": Object {},
                          "selectedRegionalOffice": null,
                          "stationId": "101",
                          "status": "active",
                          "statusUpdatedAt": null,
                          "updatedAt": "2020-06-25T11:00:43.257-04:00",
                        },
                        "judgeId": "3",
                        "location": null,
                        "militaryService": "",
                        "notes": null,
                        "paperCase": false,
                        "poaName": "AMERICAN LEGION",
                        "prepped": null,
                        "readableLocation": null,
                        "readableRequestType": "Video",
                        "regionalOfficeKey": "RO17",
                        "regionalOfficeName": "St. Petersburg regional office",
                        "regionalOfficeTimezone": "America/New_York",
                        "representative": "PARALYZED VETERANS OF AMERICA, INC.",
                        "representativeAddress": Object {
                          "addressLine1": "9999 MISSION ST",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip": "94103",
                        },
                        "representativeEmailAddress": "tom.brady@caseflow.gov",
                        "representativeName": null,
                        "representativeTz": "America/Los_Angeles",
                        "room": "1",
                        "scheduledFor": "2020-07-06T06:00:00.000-04:00",
                        "scheduledForIsPast": false,
                        "scheduledTime": "2000-01-01T06:00:00.000-05:00",
                        "scheduledTimeString": "06:00",
                        "summary": null,
                        "transcriptRequested": null,
                        "transcription": Object {},
                        "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
                        "veteranAge": 85,
                        "veteranEmailAddress": "John.Smith@test.com",
                        "veteranFileNumber": "100000005",
                        "veteranFirstName": "John",
                        "veteranGender": "M",
                        "veteranLastName": "Smith",
                        "virtualHearing": null,
                        "wasVirtual": false,
                        "witness": null,
                        "worksheetIssues": Object {},
                      }
                    }
                    isVirtual={false}
                    label="Join Hearing"
                    role="Guest"
                    user={
                      Object {
                        "addressCity": "Washington",
                        "addressLine1": "123 Fake St.",
                        "addressState": "DC",
                        "addressZip": "20001",
                        "name": "John Smith",
                      }
                    }
                    virtualHearing={null}
                    wasVirtual={false}
                  >
                    <span>
                      N/A
                    </span>
                    <div
                      data-css-1abghdv=""
                    >
                      <strong>
                        Conference Room:
                      </strong>
                      N/A
                    </div>
                    <div
                      data-css-6aejb2=""
                    >
                      <strong>
                        PIN:
                      </strong>
                      N/A
                    </div>
                    <CopyTextButton
                      ariaLabel="Copy Guest Link"
                      label=""
                      styling={Object {}}
                      text="Copy Guest Link"
                      textToCopy={null}
                    >
                      <Tooltip
                        id="tooltip-Copy Guest Link"
                        position="bottom"
                        text="Click to copy"
                      >
                        <CopyToClipboard
                          aria-describedby="tooltip-Copy Guest Link"
                          aria-label=""
                          data-event="focus mouseenter"
                          data-event-off="mouseleave keydown"
                          data-for="tooltip-Copy Guest Link"
                          data-tip={true}
                          tabIndex={0}
                          text="Copy Guest Link"
                        >
                          <button
                            aria-describedby="tooltip-Copy Guest Link"
                            aria-label=""
                            className="cf-apppeal-id"
                            data-css-p6dv0b=""
                            data-event="focus mouseenter"
                            data-event-off="mouseleave keydown"
                            data-for="tooltip-Copy Guest Link"
                            data-tip={true}
                            disabled={true}
                            onClick={[Function]}
                            tabIndex={0}
                            type="submit"
                          >
                            Copy Guest Link
                             
                            <ClipboardIcon
                              className=""
                              color="#5b616b"
                              size={17}
                            >
                              <svg
                                className=""
                                height={17}
                                viewBox="0 0 21 21"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M13.346 2.578h-2.664v-1.29C10.682.585 10.08 0 9.35 0H6.66c-.728 0-1.33.584-1.33 1.29v1.288H2.663v2.577h10.682V2.578zm-4.02 0H6.66v-1.29h2.665v1.29zm6.685 3.89V3.234a.665.665 0 0 0-.678-.656H14v1.29h.68v2.576H6.66v9.046H1.333V3.867h.68v-1.29H.678a.665.665 0 0 0-.68.657v12.913c0 .365.302.656.68.656h6.006v3.867h9.35l3.996-3.867V6.468h-4.02zm0 12.378v-2.043h2.112l-2.11 2.043zm2.665-3.356H14.68v3.867H7.992v-11.6h10.682v7.733z"
                                  fill="#5b616b"
                                  fillRule="evenodd"
                                />
                              </svg>
                            </ClipboardIcon>
                          </button>
                        </CopyToClipboard>
                        <span
                          data-css-1qgqh7a=""
                        >
                          <ReactTooltip
                            className="cf-tooltip"
                            clickable={false}
                            effect="solid"
                            id="tooltip-Copy Guest Link"
                            insecure={true}
                            multiline={true}
                            offset={Object {}}
                            place="bottom"
                            resizeHide={true}
                            role="tooltip"
                            wrapper="div"
                          >
                            <div
                              className="__react_component_tooltip t00000000-0000-0000-0000-000000000000 place-bottom type-dark"
                              data-id="tooltip"
                              id="tooltip-Copy Guest Link"
                              role="tooltip"
                            >
                              <style
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "
  	.t00000000-0000-0000-0000-000000000000 {
	    color: #fff;
	    background: #222;
	    border: 1px solid transparent;
  	}

  	.t00000000-0000-0000-0000-000000000000.place-top {
        margin-top: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::before {
        border-top: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        bottom: -6px;
        left: 50%;
        margin-left: -8px;
        border-top-color: #222;
        border-top-style: solid;
        border-top-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-bottom {
        margin-top: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::before {
        border-bottom: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        top: -6px;
        left: 50%;
        margin-left: -8px;
        border-bottom-color: #222;
        border-bottom-style: solid;
        border-bottom-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-left {
        margin-left: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::before {
        border-left: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        right: -6px;
        top: 50%;
        margin-top: -4px;
        border-left-color: #222;
        border-left-style: solid;
        border-left-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-right {
        margin-left: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::before {
        border-right: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        left: -6px;
        top: 50%;
        margin-top: -4px;
        border-right-color: #222;
        border-right-style: solid;
        border-right-width: 6px;
    }
  ",
                                  }
                                }
                              />
                              Click to copy
                            </div>
                          </ReactTooltip>
                        </span>
                      </Tooltip>
                    </CopyTextButton>
                  </VirtualHearingLinkDetails>
                </div>
              </LinkContainer>
            </div>
          </HearingLinks>
        </div>
      </div>
    </ContentSection>
  </VirtualHearingFields>
  <EmailNotificationFields
    header="Email Notifications"
    hearing={
      Object {
        "advanceOnDocketMotion": null,
        "aod": false,
        "appealExternalId": "0bf0263c-d863-4405-9b2e-f55cff77c6c4",
        "appealId": 613,
        "appellantAddressLine1": "9999 MISSION ST",
        "appellantCity": "SAN FRANCISCO",
        "appellantEmailAddress": "tom.brady@caseflow.gov",
        "appellantFirstName": "Tom",
        "appellantIsNotVeteran": false,
        "appellantLastName": "Brady",
        "appellantRelationship": "Spouse",
        "appellantState": "CA",
        "appellantTz": "America/Los_Angeles",
        "appellantZip": "94103",
        "availableHearingLocations": Object {},
        "bvaPoc": null,
        "caseType": "Original",
        "centralOfficeTimeString": "04:00",
        "claimantId": 604,
        "closestRegionalOffice": null,
        "conferenceProvider": "pexip",
        "currentIssueCount": 0,
        "disposition": null,
        "dispositionEditable": true,
        "docketName": "hearing",
        "docketNumber": "200624-614",
        "emailEvents": Array [],
        "evidenceWindowWaived": false,
        "externalId": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
        "hearingDayId": 11,
        "id": 10,
        "isVirtual": false,
        "judge": Object {
          "createdAt": "2020-06-25T11:00:43.257-04:00",
          "cssId": "BVAAABSHIRE",
          "displayName": "BVAAABSHIRE (VACO)",
          "efolderDocumentsFetchedAt": null,
          "email": null,
          "fullName": "Aaron Judge_HearingsAndCases Abshire",
          "id": 3,
          "lastLoginAt": null,
          "roles": Object {},
          "selectedRegionalOffice": null,
          "stationId": "101",
          "status": "active",
          "statusUpdatedAt": null,
          "updatedAt": "2020-06-25T11:00:43.257-04:00",
        },
        "judgeId": "3",
        "location": null,
        "militaryService": "",
        "notes": null,
        "paperCase": false,
        "poaName": "AMERICAN LEGION",
        "prepped": null,
        "readableLocation": null,
        "readableRequestType": "Video",
        "regionalOfficeKey": "RO17",
        "regionalOfficeName": "St. Petersburg regional office",
        "regionalOfficeTimezone": "America/New_York",
        "representative": "PARALYZED VETERANS OF AMERICA, INC.",
        "representativeAddress": Object {
          "addressLine1": "9999 MISSION ST",
          "city": "SAN FRANCISCO",
          "state": "CA",
          "zip": "94103",
        },
        "representativeEmailAddress": "tom.brady@caseflow.gov",
        "representativeName": null,
        "representativeTz": "America/Los_Angeles",
        "room": "1",
        "scheduledFor": "2020-07-06T06:00:00.000-04:00",
        "scheduledForIsPast": false,
        "scheduledTime": "2000-01-01T06:00:00.000-05:00",
        "scheduledTimeString": "06:00",
        "summary": null,
        "transcriptRequested": null,
        "transcription": Object {},
        "uuid": "61e7af7a-586c-446d-b8ee-a65be467e9e0",
        "veteranAge": 85,
        "veteranEmailAddress": "John.Smith@test.com",
        "veteranFileNumber": "100000005",
        "veteranFirstName": "John",
        "veteranGender": "M",
        "veteranLastName": "Smith",
        "virtualHearing": null,
        "wasVirtual": false,
        "witness": null,
        "worksheetIssues": Object {},
      }
    }
    requestType="Video"
    roTimezone="America/New_York"
    time="06:00"
  >
    <h2
      data-css-3rhuy2=""
    >
      Transcription Details
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-1fmltfu=""
        data-testid="transcription-details-inputs"
      >
        <div
          class="cf-form-textinput   "
        >
          <label
            for="taskNumber"
          >
            <strong>
              <span>
                Task #
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="taskNumber"
              name="taskNumber"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-transcriber"
          >
            <label
              class="question-label"
              for="transcriber"
              id="transcriber-label"
            >
              <strong>
                <span>
                  Transcriber
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__placeholder css-1wa3eu0-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="transcriber-label"
                          aria-owns="transcriber-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="transcriber"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="transcriber"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div />
      </div>
      <div
        data-css-1fmltfu=""
        data-testid="transcription-details-date-inputs"
      >
        <div
          class="cf-form-textinput   "
        >
          <label
            for="sentToTranscriberDate"
          >
            <strong>
              <span>
                Sent to Transcriber
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="sentToTranscriberDate"
              max="9999-12-31"
              name="sentToTranscriberDate"
              placeholder="mm/dd/yyyy"
              type="date"
              value=""
            />
          </div>
        </div>
        <div
          class="cf-form-textinput   "
        >
          <label
            for="expectedReturnDate"
          >
            <strong>
              <span>
                Expected Return Date
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="expectedReturnDate"
              max="9999-12-31"
              name="expectedReturnDate"
              placeholder="mm/dd/yyyy"
              type="date"
              value=""
            />
          </div>
        </div>
        <div
          class="cf-form-textinput   "
        >
          <label
            for="uploadedToVbmsDate"
          >
            <strong>
              <span>
                Transcript Uploaded to VBMS
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="uploadedToVbmsDate"
              max="9999-12-31"
              name="uploadedToVbmsDate"
              placeholder="mm/dd/yyyy"
              type="date"
              value=""
            />
          </div>
        </div>
      </div>
      <div
        class="cf-help-divider"
      />
      <h3>
        Transcription Problem
      </h3>
      <div
        data-css-1fmltfu=""
        data-testid="transcription-problem-inputs"
      >
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-problemType"
          >
            <label
              class="question-label"
              for="problem-type"
              id="problem-type-label"
            >
              <strong>
                <span>
                  Transcription Problem Type
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__placeholder css-1wa3eu0-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="problem-type-label"
                          aria-owns="problem-type-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="problem-type"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="problemType"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class="cf-form-textinput   "
        >
          <label
            for="problemNoticeSentDate"
          >
            <strong>
              <span>
                Problem Notice Sent
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              aria-readonly="true"
              class="cf-form-textinput"
              id="problemNoticeSentDate"
              max="9999-12-31"
              name="problemNoticeSentDate"
              placeholder="mm/dd/yyyy"
              readonly=""
              type="date"
              value=""
            />
          </div>
        </div>
        <fieldset
          class="usa-fieldset-inputs cf-form-radio "
        >
          <legend
            class=""
          >
            <strong>
              <span>
                Requested Remedy 
              </span>
            </strong>
          </legend>
          <div
            class="cf-form-radio-options"
          >
            <div
              class="cf-form-radio-option"
            >
              <input
                disabled=""
                id="requestedRemedy_Proceed without transcript"
                name="requestedRemedy"
                type="radio"
                value="Proceed without transcript"
              />
              <label
                class="disabled"
                for="requestedRemedy_Proceed without transcript"
              >
                Proceed without transcript
              </label>
            </div>
            <div
              class="cf-form-radio-option"
            >
              <input
                disabled=""
                id="requestedRemedy_Proceed with partial transcript"
                name="requestedRemedy"
                type="radio"
                value="Proceed with partial transcript"
              />
              <label
                class="disabled"
                for="requestedRemedy_Proceed with partial transcript"
              >
                Proceed with partial transcript
              </label>
            </div>
            <div
              class="cf-form-radio-option"
            >
              <input
                disabled=""
                id="requestedRemedy_New hearing"
                name="requestedRemedy"
                type="radio"
                value="New hearing"
              />
              <label
                class="disabled"
                for="requestedRemedy_New hearing"
              >
                New hearing
              </label>
            </div>
            <div
              class="cf-form-radio-option"
            >
              <input
                checked=""
                disabled=""
                id="requestedRemedy_"
                name="requestedRemedy"
                type="radio"
                value=""
              />
              <label
                class="disabled"
                for="requestedRemedy_"
              >
                None
              </label>
            </div>
          </div>
        </fieldset>
      </div>
      <div
        class="cf-help-divider"
      />
      <h3>
        Transcription Request
      </h3>
      <div
        data-css-1fmltfu=""
        data-testid="transcription-request-inputs"
      >
        <div>
          <strong>
            Copy Requested by Appellant/Rep
          </strong>
          <div
            class="checkbox-wrapper-copyRequested cf-form-checkboxes"
          >
            <div
              class="cf-form-checkbox"
            >
              <input
                aria-label="copyRequested"
                id="copyRequested"
                name="copyRequested"
                type="checkbox"
              />
              <label
                for="copyRequested"
              >
                <span
                  class=""
                >
                  Yes, Transcript Requested
                </span>
                 
              </label>
            </div>
          </div>
        </div>
        <div
          class="cf-form-textinput   "
        >
          <label
            for="copySentDate"
          >
            <strong>
              <span>
                Copy Sent to Appellant/Rep
              </span>
            </strong>
          </label>
          <div
            class="input-container"
          >
            <input
              class="cf-form-textinput"
              id="copySentDate"
              max="9999-12-31"
              name="copySentDate"
              placeholder="mm/dd/yyyy"
              type="date"
              value=""
            />
          </div>
        </div>
        <div />
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`DetailsForm Matches snapshot with for legacy hearing 1`] = `
<DocumentFragment>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Hearing Details
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-1fmltfu=""
      >
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-judgeDropdown"
          >
            <label
              class="question-label"
              for="judge-dropdown"
              id="judge-dropdown-label"
            >
              <strong>
                <span>
                  VLJ
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__single-value css-1uccc91-singleValue"
                    />
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="judge-dropdown-label"
                          aria-owns="judge-dropdown-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="judge-dropdown"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="judgeDropdown"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-hearingCoordinatorDropdown"
          >
            <label
              class="question-label"
              for="hearing-coordinator-dropdown"
              id="hearing-coordinator-dropdown-label"
            >
              <strong>
                <span>
                  Hearing Coordinator
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__single-value css-1uccc91-singleValue"
                    />
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="hearing-coordinator-dropdown-label"
                          aria-owns="hearing-coordinator-dropdown-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="hearing-coordinator-dropdown"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="hearingCoordinatorDropdown"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-hearingRoomDropdown"
          >
            <label
              class="question-label"
              for="hearing-room-dropdown"
              id="hearing-room-dropdown-label"
            >
              <strong>
                <span>
                  Hearing Room
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__single-value css-1uccc91-singleValue"
                    >
                      1 (1W200A)
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="hearing-room-dropdown-label"
                          aria-owns="hearing-room-dropdown-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="hearing-room-dropdown"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="hearingRoomDropdown"
                  type="hidden"
                  value="1"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        data-css-1fmltfu=""
      >
        <div
          class=""
        >
          <div
            class="cf-form-dropdown dropdown-hearingType"
            data-css-vzv9iy=""
          >
            <label
              class="question-label"
              for="hearing-type"
              id="hearing-type-label"
            >
              <strong>
                <span>
                  Hearing Type
                </span>
              </strong>
            </label>
            <div
              class="cf-select"
            >
              <div
                class=" css-2b097c-container"
              >
                <div
                  class="cf-select__control css-yk16xz-control"
                >
                  <div
                    class="cf-select__value-container css-g1d714-ValueContainer"
                  >
                    <div
                      class="cf-select__placeholder css-1wa3eu0-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      class="css-81nyic-Input"
                    >
                      <div
                        class="cf-select__input"
                        style="display: inline-block;"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-labelledby="hearing-type-label"
                          aria-owns="hearing-type-listbox"
                          autocapitalize="none"
                          autocomplete="off"
                          autocorrect="off"
                          id="hearing-type"
                          role="combobox"
                          spellcheck="false"
                          style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                          tabindex="0"
                          type="text"
                          value=""
                        />
                        <div
                          style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                  >
                    <span
                      class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="hearingType"
                  type="hidden"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div />
        <div />
      </div>
      <div>
        <div
          class="cf-form-textarea"
          data-css-d0z96=""
        >
          <label
            class="question-label"
            for="Notes"
          >
            <strong>
              <span>
                Notes
              </span>
            </strong>
          </label>
          <textarea
            id="Notes"
            maxlength="1000"
            name="Notes"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Hearing Links
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        data-css-tx10g=""
      >
        <strong>
          Pexip Hearing
        </strong>
      </div>
      <div
        data-css-19plkw7=""
        data-css-1fmltfu=""
        data-testid="link-containers"
      >
        <div
          data-css-tx10g=""
          id="guest-hearings-link"
        >
          <strong>
            Guest Link:
          </strong>
          <span>
            N/A
          </span>
          <div
            data-css-1abghdv=""
          >
            <strong>
              Conference Room:
            </strong>
            N/A
          </div>
          <div
            data-css-6aejb2=""
          >
            <strong>
              PIN:
            </strong>
            N/A
          </div>
          <button
            aria-describedby="tooltip-Copy Guest Link"
            aria-label=""
            class="cf-apppeal-id"
            currentitem="false"
            data-css-p6dv0b=""
            data-event="focus mouseenter"
            data-event-off="mouseleave keydown"
            data-for="tooltip-Copy Guest Link"
            data-tip="true"
            disabled=""
            tabindex="0"
            type="submit"
          >
            Copy Guest Link 
            <svg
              class=""
              height="17"
              viewBox="0 0 21 21"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13.346 2.578h-2.664v-1.29C10.682.585 10.08 0 9.35 0H6.66c-.728 0-1.33.584-1.33 1.29v1.288H2.663v2.577h10.682V2.578zm-4.02 0H6.66v-1.29h2.665v1.29zm6.685 3.89V3.234a.665.665 0 0 0-.678-.656H14v1.29h.68v2.576H6.66v9.046H1.333V3.867h.68v-1.29H.678a.665.665 0 0 0-.68.657v12.913c0 .365.302.656.68.656h6.006v3.867h9.35l3.996-3.867V6.468h-4.02zm0 12.378v-2.043h2.112l-2.11 2.043zm2.665-3.356H14.68v3.867H7.992v-11.6h10.682v7.733z"
                fill="#5b616b"
                fill-rule="evenodd"
              />
            </svg>
          </button>
          <span
            data-css-1qgqh7a=""
            data-testid="tooltip-testid"
          >
            <div
              class="__react_component_tooltip t00000000-0000-0000-0000-000000000000 place-bottom type-dark"
              data-id="tooltip"
              id="tooltip-Copy Guest Link"
              role="tooltip"
            >
              <style>

  	.t00000000-0000-0000-0000-000000000000 {
	    color: #fff;
	    background: #222;
	    border: 1px solid transparent;
  	}

  	.t00000000-0000-0000-0000-000000000000.place-top {
        margin-top: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::before {
        border-top: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-top::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        bottom: -6px;
        left: 50%;
        margin-left: -8px;
        border-top-color: #222;
        border-top-style: solid;
        border-top-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-bottom {
        margin-top: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::before {
        border-bottom: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-bottom::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        top: -6px;
        left: 50%;
        margin-left: -8px;
        border-bottom-color: #222;
        border-bottom-style: solid;
        border-bottom-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-left {
        margin-left: -10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::before {
        border-left: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-left::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        right: -6px;
        top: 50%;
        margin-top: -4px;
        border-left-color: #222;
        border-left-style: solid;
        border-left-width: 6px;
    }

    .t00000000-0000-0000-0000-000000000000.place-right {
        margin-left: 10px;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::before {
        border-right: 8px solid transparent;
    }
    .t00000000-0000-0000-0000-000000000000.place-right::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        left: -6px;
        top: 50%;
        margin-top: -4px;
        border-right-color: #222;
        border-right-style: solid;
        border-right-width: 6px;
    }

              </style>
              Click to copy
            </div>
          </span>
        </div>
      </div>
    </div>
  </div>
  <div
    class="cf-app-segment"
  >
    <h2
      data-css-3rhuy2=""
    >
      Email Notifications
    </h2>
    <div
      data-css-1571z6o=""
    >
      <div
        class="usa-grid"
        id="email-section"
      >
        <div
          class="usa-width-one-third"
          data-css-150oin1=""
        >
          <div
            class=""
          >
            <div
              class="cf-form-dropdown dropdown-appellantTz"
              data-css-1dzedb9=""
            >
              <label
                class="question-label"
                for="appellant-tz"
                id="appellant-tz-label"
              >
                <strong>
                  <span>
                    Veteran Timezone
                    <span
                      class="cf-optional"
                    >
                      Optional
                    </span>
                  </span>
                </strong>
              </label>
              <div
                class="cf-select"
              >
                <div
                  class=" css-2b097c-container"
                >
                  <div
                    class="cf-select__control css-yk16xz-control"
                  >
                    <div
                      class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                    >
                      <div
                        class="cf-select__single-value css-1uccc91-singleValue"
                      >
                        Pacific Time (US & Canada) (3:00 AM)
                      </div>
                      <div
                        class="css-81nyic-Input"
                      >
                        <div
                          class="cf-select__input"
                          style="display: inline-block;"
                        >
                          <input
                            aria-autocomplete="list"
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-labelledby="appellant-tz-label"
                            aria-owns="appellant-tz-listbox"
                            autocapitalize="none"
                            autocomplete="off"
                            autocorrect="off"
                            id="appellant-tz"
                            role="combobox"
                            spellcheck="false"
                            style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                            tabindex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                      >
                        <svg
                          aria-hidden="true"
                          class="css-6q0nyr-Svg"
                          focusable="false"
                          height="20"
                          viewBox="0 0 20 20"
                          width="20"
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <input
                    name="appellantTz"
                    type="hidden"
                    value="America/Los_Angeles"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="helper-text"
          >
            The hearing time in email notifications is calculated based on the timezone.
          </div>
        </div>
        <div
          class="usa-width-one-third"
        >
          <div
            class="cf-form-textinput cf-inline-field   "
          >
            <label
              for="Veteran Email"
            >
              <strong>
                <span>
                  Veteran Email
                  <span
                    class="cf-optional"
                  >
                    Optional
                  </span>
                </span>
              </strong>
            </label>
            <div
              class="input-container"
            >
              <input
                aria-readonly="false"
                class="cf-form-textinput cf-inline-field"
                id="Veteran Email"
                name="Veteran Email"
                type="text"
                value="tom.brady@caseflow.gov"
              />
            </div>
          </div>
          <div
            class="helper-text"
          >
            This email address will be used to send notifications for this hearing only.
          </div>
        </div>
      </div>
      <div
        class="cf-help-divider"
      />
      <div
        class="usa-grid css-1jfbwxw"
      >
        <div
          class="usa-width-one-third"
          data-css-150oin1=""
        >
          <div
            class=""
          >
            <div
              class="cf-form-dropdown dropdown-representativeTz"
              data-css-1dzedb9=""
            >
              <label
                class="question-label"
                for="representative-tz"
                id="representative-tz-label"
              >
                <strong>
                  <span>
                    POA/Representative Timezone
                    <span
                      class="cf-required"
                    >
                      Required
                    </span>
                  </span>
                </strong>
              </label>
              <div
                class="cf-select"
              >
                <div
                  class=" css-2b097c-container"
                >
                  <div
                    class="cf-select__control css-yk16xz-control"
                  >
                    <div
                      class="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                    >
                      <div
                        class="cf-select__single-value css-1uccc91-singleValue"
                      >
                        Pacific Time (US & Canada) (3:00 AM)
                      </div>
                      <div
                        class="css-81nyic-Input"
                      >
                        <div
                          class="cf-select__input"
                          style="display: inline-block;"
                        >
                          <input
                            aria-autocomplete="list"
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-labelledby="representative-tz-label"
                            aria-owns="representative-tz-listbox"
                            autocapitalize="none"
                            autocomplete="off"
                            autocorrect="off"
                            id="representative-tz"
                            role="combobox"
                            spellcheck="false"
                            style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
                            tabindex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        class="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        class="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                      >
                        <svg
                          aria-hidden="true"
                          class="css-6q0nyr-Svg"
                          focusable="false"
                          height="20"
                          viewBox="0 0 20 20"
                          width="20"
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <input
                    name="representativeTz"
                    type="hidden"
                    value="America/Los_Angeles"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="helper-text"
          >
            The hearing time in email notifications is calculated based on the timezone.
          </div>
        </div>
        <div
          class="usa-width-one-third"
        >
          <div
            class="cf-form-textinput cf-inline-field   "
          >
            <label
              for="POA/Representative Email"
            >
              <strong>
                <span>
                  POA/Representative Email
                  <span
                    class="cf-optional"
                  >
                    Optional
                  </span>
                </span>
              </strong>
            </label>
            <div
              class="input-container"
            >
              <input
                aria-readonly="false"
                class="cf-form-textinput cf-inline-field"
                id="POA/Representative Email"
                name="POA/Representative Email"
                type="text"
                value="tom.brady@caseflow.gov"
              />
            </div>
          </div>
          <div
            class="helper-text"
          >
            This email address will be used to send notifications for this hearing only.
          </div>
        </div>
      </div>
    </div>
  </div>
</DocumentFragment>
`;
