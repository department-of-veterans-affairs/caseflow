// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HearingTypeDropdown Can change from central office hearing 1`] = `
<HearingTypeDropdown
  convertHearing={
    [MockFunction] {
      "calls": Array [
        Array [
          "change_to_virtual",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  originalRequestType="Central"
  update={
    [MockFunction] {
      "calls": Array [
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": false,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <SearchableDropdown
    clearOnSelect={false}
    label="Hearing Type"
    loading={false}
    name="hearingType"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "Virtual",
          "value": true,
        },
      ]
    }
    strongLabel={true}
    value={
      Object {
        "label": "Central",
        "value": false,
      }
    }
  >
    <div
      className="cf-form-dropdown dropdown-hearingType"
    >
      <label
        className="question-label"
        htmlFor="hearingType"
      >
        <strong>
          <span>
            Hearing Type
          </span>
        </strong>
      </label>
      <div
        className=""
      >
        <div
          className="cf-select"
        >
          <StateManager
            cache={false}
            classNamePrefix="cf-select"
            defaultInputValue=""
            defaultMenuIsOpen={false}
            defaultValue={null}
            inputId="hearingType"
            isLoading={false}
            isSearchable={true}
            noOptionsMessage={[Function]}
            onBlurResetsInput={false}
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "Virtual",
                  "value": true,
                },
              ]
            }
            shouldKeyDownEventCreateNewOption={[Function]}
            styles={
              Object {
                "input": [Function],
              }
            }
            value={
              Object {
                "label": "Virtual",
                "value": true,
              }
            }
          >
            <Select
              backspaceRemovesValue={true}
              blurInputOnSelect={true}
              cache={false}
              captureMenuScroll={false}
              classNamePrefix="cf-select"
              closeMenuOnScroll={false}
              closeMenuOnSelect={true}
              components={Object {}}
              controlShouldRenderValue={true}
              escapeClearsValue={false}
              filterOption={[Function]}
              formatGroupLabel={[Function]}
              getOptionLabel={[Function]}
              getOptionValue={[Function]}
              inputId="hearingType"
              inputValue=""
              isDisabled={false}
              isLoading={false}
              isMulti={false}
              isOptionDisabled={[Function]}
              isRtl={false}
              isSearchable={true}
              loadingMessage={[Function]}
              maxMenuHeight={300}
              menuIsOpen={false}
              menuPlacement="bottom"
              menuPosition="absolute"
              menuShouldBlockScroll={false}
              menuShouldScrollIntoView={true}
              minMenuHeight={140}
              noOptionsMessage={[Function]}
              onBlurResetsInput={false}
              onChange={[Function]}
              onInputChange={[Function]}
              onMenuClose={[Function]}
              onMenuOpen={[Function]}
              openMenuOnClick={true}
              openMenuOnFocus={false}
              options={
                Array [
                  Object {
                    "label": "Virtual",
                    "value": true,
                  },
                ]
              }
              pageSize={5}
              placeholder="Select..."
              screenReaderStatus={[Function]}
              shouldKeyDownEventCreateNewOption={[Function]}
              styles={
                Object {
                  "input": [Function],
                }
              }
              tabIndex="0"
              tabSelectsValue={true}
              value={
                Object {
                  "label": "Virtual",
                  "value": true,
                }
              }
            >
              <SelectContainer
                clearValue={[Function]}
                cx={[Function]}
                getStyles={[Function]}
                getValue={[Function]}
                hasValue={true}
                innerProps={
                  Object {
                    "id": undefined,
                    "onKeyDown": [Function],
                  }
                }
                isDisabled={false}
                isFocused={false}
                isMulti={false}
                isRtl={false}
                options={
                  Array [
                    Object {
                      "label": "Virtual",
                      "value": true,
                    },
                  ]
                }
                selectOption={[Function]}
                selectProps={
                  Object {
                    "backspaceRemovesValue": true,
                    "blurInputOnSelect": true,
                    "cache": false,
                    "captureMenuScroll": false,
                    "classNamePrefix": "cf-select",
                    "closeMenuOnScroll": false,
                    "closeMenuOnSelect": true,
                    "components": Object {},
                    "controlShouldRenderValue": true,
                    "defaultOptions": undefined,
                    "escapeClearsValue": false,
                    "filterOption": [Function],
                    "formatGroupLabel": [Function],
                    "getOptionLabel": [Function],
                    "getOptionValue": [Function],
                    "inputId": "hearingType",
                    "inputValue": "",
                    "isClearable": undefined,
                    "isDisabled": false,
                    "isLoading": false,
                    "isMulti": false,
                    "isOptionDisabled": [Function],
                    "isRtl": false,
                    "isSearchable": true,
                    "loadOptions": undefined,
                    "loadingMessage": [Function],
                    "maxMenuHeight": 300,
                    "menuIsOpen": false,
                    "menuPlacement": "bottom",
                    "menuPosition": "absolute",
                    "menuShouldBlockScroll": false,
                    "menuShouldScrollIntoView": true,
                    "minMenuHeight": 140,
                    "noOptionsMessage": [Function],
                    "onBlurResetsInput": false,
                    "onChange": [Function],
                    "onInputChange": [Function],
                    "onMenuClose": [Function],
                    "onMenuOpen": [Function],
                    "openMenuOnClick": true,
                    "openMenuOnFocus": false,
                    "options": Array [
                      Object {
                        "label": "Virtual",
                        "value": true,
                      },
                    ],
                    "pageSize": 5,
                    "placeholder": "Select...",
                    "screenReaderStatus": [Function],
                    "searchable": undefined,
                    "shouldKeyDownEventCreateNewOption": [Function],
                    "styles": Object {
                      "input": [Function],
                    },
                    "tabIndex": "0",
                    "tabSelectsValue": true,
                    "value": Object {
                      "label": "Virtual",
                      "value": true,
                    },
                  }
                }
                setValue={[Function]}
                theme={
                  Object {
                    "borderRadius": 4,
                    "colors": Object {
                      "danger": "#DE350B",
                      "dangerLight": "#FFBDAD",
                      "neutral0": "hsl(0, 0%, 100%)",
                      "neutral10": "hsl(0, 0%, 90%)",
                      "neutral20": "hsl(0, 0%, 80%)",
                      "neutral30": "hsl(0, 0%, 70%)",
                      "neutral40": "hsl(0, 0%, 60%)",
                      "neutral5": "hsl(0, 0%, 95%)",
                      "neutral50": "hsl(0, 0%, 50%)",
                      "neutral60": "hsl(0, 0%, 40%)",
                      "neutral70": "hsl(0, 0%, 30%)",
                      "neutral80": "hsl(0, 0%, 20%)",
                      "neutral90": "hsl(0, 0%, 10%)",
                      "primary": "#2684FF",
                      "primary25": "#DEEBFF",
                      "primary50": "#B2D4FF",
                      "primary75": "#4C9AFF",
                    },
                    "spacing": Object {
                      "baseUnit": 4,
                      "controlHeight": 38,
                      "menuGutter": 8,
                    },
                  }
                }
              >
                <EmotionCssPropInternal
                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                  className=""
                  css={
                    Object {
                      "boxSizing": "border-box",
                      "direction": null,
                      "label": "container",
                      "pointerEvents": null,
                      "position": "relative",
                    }
                  }
                  onKeyDown={[Function]}
                >
                  <div
                    className=" css-2b097c-container"
                    onKeyDown={[Function]}
                  >
                    <Control
                      clearValue={[Function]}
                      cx={[Function]}
                      getStyles={[Function]}
                      getValue={[Function]}
                      hasValue={true}
                      innerProps={
                        Object {
                          "onMouseDown": [Function],
                          "onTouchEnd": [Function],
                        }
                      }
                      innerRef={[Function]}
                      isDisabled={false}
                      isFocused={false}
                      isMulti={false}
                      isRtl={false}
                      menuIsOpen={false}
                      options={
                        Array [
                          Object {
                            "label": "Virtual",
                            "value": true,
                          },
                        ]
                      }
                      selectOption={[Function]}
                      selectProps={
                        Object {
                          "backspaceRemovesValue": true,
                          "blurInputOnSelect": true,
                          "cache": false,
                          "captureMenuScroll": false,
                          "classNamePrefix": "cf-select",
                          "closeMenuOnScroll": false,
                          "closeMenuOnSelect": true,
                          "components": Object {},
                          "controlShouldRenderValue": true,
                          "defaultOptions": undefined,
                          "escapeClearsValue": false,
                          "filterOption": [Function],
                          "formatGroupLabel": [Function],
                          "getOptionLabel": [Function],
                          "getOptionValue": [Function],
                          "inputId": "hearingType",
                          "inputValue": "",
                          "isClearable": undefined,
                          "isDisabled": false,
                          "isLoading": false,
                          "isMulti": false,
                          "isOptionDisabled": [Function],
                          "isRtl": false,
                          "isSearchable": true,
                          "loadOptions": undefined,
                          "loadingMessage": [Function],
                          "maxMenuHeight": 300,
                          "menuIsOpen": false,
                          "menuPlacement": "bottom",
                          "menuPosition": "absolute",
                          "menuShouldBlockScroll": false,
                          "menuShouldScrollIntoView": true,
                          "minMenuHeight": 140,
                          "noOptionsMessage": [Function],
                          "onBlurResetsInput": false,
                          "onChange": [Function],
                          "onInputChange": [Function],
                          "onMenuClose": [Function],
                          "onMenuOpen": [Function],
                          "openMenuOnClick": true,
                          "openMenuOnFocus": false,
                          "options": Array [
                            Object {
                              "label": "Virtual",
                              "value": true,
                            },
                          ],
                          "pageSize": 5,
                          "placeholder": "Select...",
                          "screenReaderStatus": [Function],
                          "searchable": undefined,
                          "shouldKeyDownEventCreateNewOption": [Function],
                          "styles": Object {
                            "input": [Function],
                          },
                          "tabIndex": "0",
                          "tabSelectsValue": true,
                          "value": Object {
                            "label": "Virtual",
                            "value": true,
                          },
                        }
                      }
                      setValue={[Function]}
                      theme={
                        Object {
                          "borderRadius": 4,
                          "colors": Object {
                            "danger": "#DE350B",
                            "dangerLight": "#FFBDAD",
                            "neutral0": "hsl(0, 0%, 100%)",
                            "neutral10": "hsl(0, 0%, 90%)",
                            "neutral20": "hsl(0, 0%, 80%)",
                            "neutral30": "hsl(0, 0%, 70%)",
                            "neutral40": "hsl(0, 0%, 60%)",
                            "neutral5": "hsl(0, 0%, 95%)",
                            "neutral50": "hsl(0, 0%, 50%)",
                            "neutral60": "hsl(0, 0%, 40%)",
                            "neutral70": "hsl(0, 0%, 30%)",
                            "neutral80": "hsl(0, 0%, 20%)",
                            "neutral90": "hsl(0, 0%, 10%)",
                            "primary": "#2684FF",
                            "primary25": "#DEEBFF",
                            "primary50": "#B2D4FF",
                            "primary75": "#4C9AFF",
                          },
                          "spacing": Object {
                            "baseUnit": 4,
                            "controlHeight": 38,
                            "menuGutter": 8,
                          },
                        }
                      }
                    >
                      <EmotionCssPropInternal
                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                        className="cf-select__control"
                        css={
                          Object {
                            "&:hover": Object {
                              "borderColor": "hsl(0, 0%, 70%)",
                            },
                            "alignItems": "center",
                            "backgroundColor": "hsl(0, 0%, 100%)",
                            "borderColor": "hsl(0, 0%, 80%)",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "boxShadow": null,
                            "boxSizing": "border-box",
                            "cursor": "default",
                            "display": "flex",
                            "flexWrap": "wrap",
                            "justifyContent": "space-between",
                            "label": "control",
                            "minHeight": 38,
                            "outline": "0 !important",
                            "position": "relative",
                            "transition": "all 100ms",
                          }
                        }
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <div
                          className="cf-select__control css-yk16xz-control"
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                        >
                          <ValueContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            isDisabled={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "Virtual",
                                  "value": true,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {},
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "hearingType",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "Virtual",
                                    "value": true,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "Virtual",
                                  "value": true,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className="cf-select__value-container cf-select__value-container--has-value"
                              css={
                                Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "alignItems": "center",
                                  "boxSizing": "border-box",
                                  "display": "flex",
                                  "flex": 1,
                                  "flexWrap": "wrap",
                                  "overflow": "hidden",
                                  "padding": "2px 8px",
                                  "position": "relative",
                                }
                              }
                            >
                              <div
                                className="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                              >
                                <SingleValue
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  data={
                                    Object {
                                      "label": "Virtual",
                                      "value": true,
                                    }
                                  }
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  isDisabled={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Virtual",
                                          "value": true,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    className="cf-select__single-value"
                                    css={
                                      Object {
                                        "boxSizing": "border-box",
                                        "color": "hsl(0, 0%, 20%)",
                                        "label": "singleValue",
                                        "marginLeft": 2,
                                        "marginRight": 2,
                                        "maxWidth": "calc(100% - 8px)",
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "textOverflow": "ellipsis",
                                        "top": "50%",
                                        "transform": "translateY(-50%)",
                                        "whiteSpace": "nowrap",
                                      }
                                    }
                                  >
                                    <div
                                      className="cf-select__single-value css-1uccc91-singleValue"
                                    >
                                      Virtual
                                    </div>
                                  </EmotionCssPropInternal>
                                </SingleValue>
                                <Input
                                  aria-autocomplete="list"
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoCorrect="off"
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  id="hearingType"
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isHidden={true}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Virtual",
                                          "value": true,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    }
                                  }
                                  spellCheck="false"
                                  tabIndex="0"
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                  type="text"
                                  value=""
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    css={
                                      Object {
                                        "height": "44px",
                                      }
                                    }
                                  >
                                    <div
                                      className="css-81nyic-Input"
                                    >
                                      <AutosizeInput
                                        aria-autocomplete="list"
                                        autoCapitalize="none"
                                        autoComplete="off"
                                        autoCorrect="off"
                                        className="cf-select__input"
                                        disabled={false}
                                        id="hearingType"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        inputStyle={
                                          Object {
                                            "background": 0,
                                            "border": 0,
                                            "color": "inherit",
                                            "fontSize": "inherit",
                                            "label": "input",
                                            "opacity": 0,
                                            "outline": 0,
                                            "padding": 0,
                                          }
                                        }
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        spellCheck="false"
                                        tabIndex="0"
                                        type="text"
                                        value=""
                                      >
                                        <div
                                          className="cf-select__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                            }
                                          }
                                        >
                                          <input
                                            aria-autocomplete="list"
                                            autoCapitalize="none"
                                            autoComplete="off"
                                            autoCorrect="off"
                                            disabled={false}
                                            id="hearingType"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            spellCheck="false"
                                            style={
                                              Object {
                                                "background": 0,
                                                "border": 0,
                                                "boxSizing": "content-box",
                                                "color": "inherit",
                                                "fontSize": "inherit",
                                                "label": "input",
                                                "opacity": 0,
                                                "outline": 0,
                                                "padding": 0,
                                                "width": "2px",
                                              }
                                            }
                                            tabIndex="0"
                                            type="text"
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                  </EmotionCssPropInternal>
                                </Input>
                              </div>
                            </EmotionCssPropInternal>
                          </ValueContainer>
                          <IndicatorsContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            isDisabled={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "Virtual",
                                  "value": true,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {},
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "hearingType",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "Virtual",
                                    "value": true,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "Virtual",
                                  "value": true,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className="cf-select__indicators"
                              css={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "boxSizing": "border-box",
                                  "display": "flex",
                                  "flexShrink": 0,
                                }
                              }
                            >
                              <div
                                className="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                              >
                                <IndicatorSeparator
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Virtual",
                                          "value": true,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                    className="cf-select__indicator-separator"
                                    css={
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "hsl(0, 0%, 80%)",
                                        "boxSizing": "border-box",
                                        "label": "indicatorSeparator",
                                        "marginBottom": 8,
                                        "marginTop": 8,
                                        "width": 1,
                                      }
                                    }
                                  >
                                    <span
                                      className="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                                    />
                                  </EmotionCssPropInternal>
                                </IndicatorSeparator>
                                <DropdownIndicator
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "aria-hidden": "true",
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Virtual",
                                          "value": true,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    aria-hidden="true"
                                    className="cf-select__indicator cf-select__dropdown-indicator"
                                    css={
                                      Object {
                                        ":hover": Object {
                                          "color": "hsl(0, 0%, 60%)",
                                        },
                                        "boxSizing": "border-box",
                                        "color": "hsl(0, 0%, 80%)",
                                        "display": "flex",
                                        "label": "indicatorContainer",
                                        "padding": 8,
                                        "transition": "color 150ms",
                                      }
                                    }
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <div
                                      aria-hidden="true"
                                      className="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                      onMouseDown={[Function]}
                                      onTouchEnd={[Function]}
                                    >
                                      <DownChevron>
                                        <Svg
                                          size={20}
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                            aria-hidden="true"
                                            css={
                                              Object {
                                                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                "name": "19bqh2r",
                                                "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                              }
                                            }
                                            focusable="false"
                                            height={20}
                                            viewBox="0 0 20 20"
                                            width={20}
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="css-6q0nyr-Svg"
                                              focusable="false"
                                              height={20}
                                              viewBox="0 0 20 20"
                                              width={20}
                                            >
                                              <path
                                                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                              />
                                            </svg>
                                          </EmotionCssPropInternal>
                                        </Svg>
                                      </DownChevron>
                                    </div>
                                  </EmotionCssPropInternal>
                                </DropdownIndicator>
                              </div>
                            </EmotionCssPropInternal>
                          </IndicatorsContainer>
                        </div>
                      </EmotionCssPropInternal>
                    </Control>
                  </div>
                </EmotionCssPropInternal>
              </SelectContainer>
            </Select>
          </StateManager>
        </div>
      </div>
    </div>
  </SearchableDropdown>
</HearingTypeDropdown>
`;

exports[`HearingTypeDropdown Can change from video hearing 1`] = `
<HearingTypeDropdown
  openModal={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "type": "change_to_virtual",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  originalRequestType="Video"
  update={
    [MockFunction] {
      "calls": Array [
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": false,
          },
        ],
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": false,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <SearchableDropdown
    clearOnSelect={false}
    label="Hearing Type"
    loading={false}
    name="hearingType"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "Virtual",
          "value": true,
        },
      ]
    }
    strongLabel={true}
    value={
      Object {
        "label": "Video",
        "value": false,
      }
    }
  >
    <div
      className="cf-form-dropdown dropdown-hearingType"
    >
      <label
        className="question-label"
        htmlFor="hearingType"
      >
        <strong>
          <span>
            Hearing Type
          </span>
        </strong>
      </label>
      <div
        className=""
      >
        <div
          className="cf-select"
        >
          <StateManager
            cache={false}
            classNamePrefix="cf-select"
            defaultInputValue=""
            defaultMenuIsOpen={false}
            defaultValue={null}
            inputId="hearingType"
            isLoading={false}
            isSearchable={true}
            noOptionsMessage={[Function]}
            onBlurResetsInput={false}
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "Virtual",
                  "value": true,
                },
              ]
            }
            shouldKeyDownEventCreateNewOption={[Function]}
            styles={
              Object {
                "input": [Function],
              }
            }
            value={
              Object {
                "label": "Virtual",
                "value": true,
              }
            }
          >
            <Select
              backspaceRemovesValue={true}
              blurInputOnSelect={true}
              cache={false}
              captureMenuScroll={false}
              classNamePrefix="cf-select"
              closeMenuOnScroll={false}
              closeMenuOnSelect={true}
              components={Object {}}
              controlShouldRenderValue={true}
              escapeClearsValue={false}
              filterOption={[Function]}
              formatGroupLabel={[Function]}
              getOptionLabel={[Function]}
              getOptionValue={[Function]}
              inputId="hearingType"
              inputValue=""
              isDisabled={false}
              isLoading={false}
              isMulti={false}
              isOptionDisabled={[Function]}
              isRtl={false}
              isSearchable={true}
              loadingMessage={[Function]}
              maxMenuHeight={300}
              menuIsOpen={false}
              menuPlacement="bottom"
              menuPosition="absolute"
              menuShouldBlockScroll={false}
              menuShouldScrollIntoView={true}
              minMenuHeight={140}
              noOptionsMessage={[Function]}
              onBlurResetsInput={false}
              onChange={[Function]}
              onInputChange={[Function]}
              onMenuClose={[Function]}
              onMenuOpen={[Function]}
              openMenuOnClick={true}
              openMenuOnFocus={false}
              options={
                Array [
                  Object {
                    "label": "Virtual",
                    "value": true,
                  },
                ]
              }
              pageSize={5}
              placeholder="Select..."
              screenReaderStatus={[Function]}
              shouldKeyDownEventCreateNewOption={[Function]}
              styles={
                Object {
                  "input": [Function],
                }
              }
              tabIndex="0"
              tabSelectsValue={true}
              value={
                Object {
                  "label": "Virtual",
                  "value": true,
                }
              }
            >
              <SelectContainer
                clearValue={[Function]}
                cx={[Function]}
                getStyles={[Function]}
                getValue={[Function]}
                hasValue={true}
                innerProps={
                  Object {
                    "id": undefined,
                    "onKeyDown": [Function],
                  }
                }
                isDisabled={false}
                isFocused={false}
                isMulti={false}
                isRtl={false}
                options={
                  Array [
                    Object {
                      "label": "Virtual",
                      "value": true,
                    },
                  ]
                }
                selectOption={[Function]}
                selectProps={
                  Object {
                    "backspaceRemovesValue": true,
                    "blurInputOnSelect": true,
                    "cache": false,
                    "captureMenuScroll": false,
                    "classNamePrefix": "cf-select",
                    "closeMenuOnScroll": false,
                    "closeMenuOnSelect": true,
                    "components": Object {},
                    "controlShouldRenderValue": true,
                    "defaultOptions": undefined,
                    "escapeClearsValue": false,
                    "filterOption": [Function],
                    "formatGroupLabel": [Function],
                    "getOptionLabel": [Function],
                    "getOptionValue": [Function],
                    "inputId": "hearingType",
                    "inputValue": "",
                    "isClearable": undefined,
                    "isDisabled": false,
                    "isLoading": false,
                    "isMulti": false,
                    "isOptionDisabled": [Function],
                    "isRtl": false,
                    "isSearchable": true,
                    "loadOptions": undefined,
                    "loadingMessage": [Function],
                    "maxMenuHeight": 300,
                    "menuIsOpen": false,
                    "menuPlacement": "bottom",
                    "menuPosition": "absolute",
                    "menuShouldBlockScroll": false,
                    "menuShouldScrollIntoView": true,
                    "minMenuHeight": 140,
                    "noOptionsMessage": [Function],
                    "onBlurResetsInput": false,
                    "onChange": [Function],
                    "onInputChange": [Function],
                    "onMenuClose": [Function],
                    "onMenuOpen": [Function],
                    "openMenuOnClick": true,
                    "openMenuOnFocus": false,
                    "options": Array [
                      Object {
                        "label": "Virtual",
                        "value": true,
                      },
                    ],
                    "pageSize": 5,
                    "placeholder": "Select...",
                    "screenReaderStatus": [Function],
                    "searchable": undefined,
                    "shouldKeyDownEventCreateNewOption": [Function],
                    "styles": Object {
                      "input": [Function],
                    },
                    "tabIndex": "0",
                    "tabSelectsValue": true,
                    "value": Object {
                      "label": "Virtual",
                      "value": true,
                    },
                  }
                }
                setValue={[Function]}
                theme={
                  Object {
                    "borderRadius": 4,
                    "colors": Object {
                      "danger": "#DE350B",
                      "dangerLight": "#FFBDAD",
                      "neutral0": "hsl(0, 0%, 100%)",
                      "neutral10": "hsl(0, 0%, 90%)",
                      "neutral20": "hsl(0, 0%, 80%)",
                      "neutral30": "hsl(0, 0%, 70%)",
                      "neutral40": "hsl(0, 0%, 60%)",
                      "neutral5": "hsl(0, 0%, 95%)",
                      "neutral50": "hsl(0, 0%, 50%)",
                      "neutral60": "hsl(0, 0%, 40%)",
                      "neutral70": "hsl(0, 0%, 30%)",
                      "neutral80": "hsl(0, 0%, 20%)",
                      "neutral90": "hsl(0, 0%, 10%)",
                      "primary": "#2684FF",
                      "primary25": "#DEEBFF",
                      "primary50": "#B2D4FF",
                      "primary75": "#4C9AFF",
                    },
                    "spacing": Object {
                      "baseUnit": 4,
                      "controlHeight": 38,
                      "menuGutter": 8,
                    },
                  }
                }
              >
                <EmotionCssPropInternal
                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                  className=""
                  css={
                    Object {
                      "boxSizing": "border-box",
                      "direction": null,
                      "label": "container",
                      "pointerEvents": null,
                      "position": "relative",
                    }
                  }
                  onKeyDown={[Function]}
                >
                  <div
                    className=" css-2b097c-container"
                    onKeyDown={[Function]}
                  >
                    <Control
                      clearValue={[Function]}
                      cx={[Function]}
                      getStyles={[Function]}
                      getValue={[Function]}
                      hasValue={true}
                      innerProps={
                        Object {
                          "onMouseDown": [Function],
                          "onTouchEnd": [Function],
                        }
                      }
                      innerRef={[Function]}
                      isDisabled={false}
                      isFocused={false}
                      isMulti={false}
                      isRtl={false}
                      menuIsOpen={false}
                      options={
                        Array [
                          Object {
                            "label": "Virtual",
                            "value": true,
                          },
                        ]
                      }
                      selectOption={[Function]}
                      selectProps={
                        Object {
                          "backspaceRemovesValue": true,
                          "blurInputOnSelect": true,
                          "cache": false,
                          "captureMenuScroll": false,
                          "classNamePrefix": "cf-select",
                          "closeMenuOnScroll": false,
                          "closeMenuOnSelect": true,
                          "components": Object {},
                          "controlShouldRenderValue": true,
                          "defaultOptions": undefined,
                          "escapeClearsValue": false,
                          "filterOption": [Function],
                          "formatGroupLabel": [Function],
                          "getOptionLabel": [Function],
                          "getOptionValue": [Function],
                          "inputId": "hearingType",
                          "inputValue": "",
                          "isClearable": undefined,
                          "isDisabled": false,
                          "isLoading": false,
                          "isMulti": false,
                          "isOptionDisabled": [Function],
                          "isRtl": false,
                          "isSearchable": true,
                          "loadOptions": undefined,
                          "loadingMessage": [Function],
                          "maxMenuHeight": 300,
                          "menuIsOpen": false,
                          "menuPlacement": "bottom",
                          "menuPosition": "absolute",
                          "menuShouldBlockScroll": false,
                          "menuShouldScrollIntoView": true,
                          "minMenuHeight": 140,
                          "noOptionsMessage": [Function],
                          "onBlurResetsInput": false,
                          "onChange": [Function],
                          "onInputChange": [Function],
                          "onMenuClose": [Function],
                          "onMenuOpen": [Function],
                          "openMenuOnClick": true,
                          "openMenuOnFocus": false,
                          "options": Array [
                            Object {
                              "label": "Virtual",
                              "value": true,
                            },
                          ],
                          "pageSize": 5,
                          "placeholder": "Select...",
                          "screenReaderStatus": [Function],
                          "searchable": undefined,
                          "shouldKeyDownEventCreateNewOption": [Function],
                          "styles": Object {
                            "input": [Function],
                          },
                          "tabIndex": "0",
                          "tabSelectsValue": true,
                          "value": Object {
                            "label": "Virtual",
                            "value": true,
                          },
                        }
                      }
                      setValue={[Function]}
                      theme={
                        Object {
                          "borderRadius": 4,
                          "colors": Object {
                            "danger": "#DE350B",
                            "dangerLight": "#FFBDAD",
                            "neutral0": "hsl(0, 0%, 100%)",
                            "neutral10": "hsl(0, 0%, 90%)",
                            "neutral20": "hsl(0, 0%, 80%)",
                            "neutral30": "hsl(0, 0%, 70%)",
                            "neutral40": "hsl(0, 0%, 60%)",
                            "neutral5": "hsl(0, 0%, 95%)",
                            "neutral50": "hsl(0, 0%, 50%)",
                            "neutral60": "hsl(0, 0%, 40%)",
                            "neutral70": "hsl(0, 0%, 30%)",
                            "neutral80": "hsl(0, 0%, 20%)",
                            "neutral90": "hsl(0, 0%, 10%)",
                            "primary": "#2684FF",
                            "primary25": "#DEEBFF",
                            "primary50": "#B2D4FF",
                            "primary75": "#4C9AFF",
                          },
                          "spacing": Object {
                            "baseUnit": 4,
                            "controlHeight": 38,
                            "menuGutter": 8,
                          },
                        }
                      }
                    >
                      <EmotionCssPropInternal
                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                        className="cf-select__control"
                        css={
                          Object {
                            "&:hover": Object {
                              "borderColor": "hsl(0, 0%, 70%)",
                            },
                            "alignItems": "center",
                            "backgroundColor": "hsl(0, 0%, 100%)",
                            "borderColor": "hsl(0, 0%, 80%)",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "boxShadow": null,
                            "boxSizing": "border-box",
                            "cursor": "default",
                            "display": "flex",
                            "flexWrap": "wrap",
                            "justifyContent": "space-between",
                            "label": "control",
                            "minHeight": 38,
                            "outline": "0 !important",
                            "position": "relative",
                            "transition": "all 100ms",
                          }
                        }
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <div
                          className="cf-select__control css-yk16xz-control"
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                        >
                          <ValueContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            isDisabled={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "Virtual",
                                  "value": true,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {},
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "hearingType",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "Virtual",
                                    "value": true,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "Virtual",
                                  "value": true,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className="cf-select__value-container cf-select__value-container--has-value"
                              css={
                                Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "alignItems": "center",
                                  "boxSizing": "border-box",
                                  "display": "flex",
                                  "flex": 1,
                                  "flexWrap": "wrap",
                                  "overflow": "hidden",
                                  "padding": "2px 8px",
                                  "position": "relative",
                                }
                              }
                            >
                              <div
                                className="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                              >
                                <SingleValue
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  data={
                                    Object {
                                      "label": "Virtual",
                                      "value": true,
                                    }
                                  }
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  isDisabled={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Virtual",
                                          "value": true,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    className="cf-select__single-value"
                                    css={
                                      Object {
                                        "boxSizing": "border-box",
                                        "color": "hsl(0, 0%, 20%)",
                                        "label": "singleValue",
                                        "marginLeft": 2,
                                        "marginRight": 2,
                                        "maxWidth": "calc(100% - 8px)",
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "textOverflow": "ellipsis",
                                        "top": "50%",
                                        "transform": "translateY(-50%)",
                                        "whiteSpace": "nowrap",
                                      }
                                    }
                                  >
                                    <div
                                      className="cf-select__single-value css-1uccc91-singleValue"
                                    >
                                      Virtual
                                    </div>
                                  </EmotionCssPropInternal>
                                </SingleValue>
                                <Input
                                  aria-autocomplete="list"
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoCorrect="off"
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  id="hearingType"
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isHidden={true}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Virtual",
                                          "value": true,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    }
                                  }
                                  spellCheck="false"
                                  tabIndex="0"
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                  type="text"
                                  value=""
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    css={
                                      Object {
                                        "height": "44px",
                                      }
                                    }
                                  >
                                    <div
                                      className="css-81nyic-Input"
                                    >
                                      <AutosizeInput
                                        aria-autocomplete="list"
                                        autoCapitalize="none"
                                        autoComplete="off"
                                        autoCorrect="off"
                                        className="cf-select__input"
                                        disabled={false}
                                        id="hearingType"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        inputStyle={
                                          Object {
                                            "background": 0,
                                            "border": 0,
                                            "color": "inherit",
                                            "fontSize": "inherit",
                                            "label": "input",
                                            "opacity": 0,
                                            "outline": 0,
                                            "padding": 0,
                                          }
                                        }
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        spellCheck="false"
                                        tabIndex="0"
                                        type="text"
                                        value=""
                                      >
                                        <div
                                          className="cf-select__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                            }
                                          }
                                        >
                                          <input
                                            aria-autocomplete="list"
                                            autoCapitalize="none"
                                            autoComplete="off"
                                            autoCorrect="off"
                                            disabled={false}
                                            id="hearingType"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            spellCheck="false"
                                            style={
                                              Object {
                                                "background": 0,
                                                "border": 0,
                                                "boxSizing": "content-box",
                                                "color": "inherit",
                                                "fontSize": "inherit",
                                                "label": "input",
                                                "opacity": 0,
                                                "outline": 0,
                                                "padding": 0,
                                                "width": "2px",
                                              }
                                            }
                                            tabIndex="0"
                                            type="text"
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                  </EmotionCssPropInternal>
                                </Input>
                              </div>
                            </EmotionCssPropInternal>
                          </ValueContainer>
                          <IndicatorsContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            isDisabled={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "Virtual",
                                  "value": true,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {},
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "hearingType",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "Virtual",
                                    "value": true,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "Virtual",
                                  "value": true,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className="cf-select__indicators"
                              css={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "boxSizing": "border-box",
                                  "display": "flex",
                                  "flexShrink": 0,
                                }
                              }
                            >
                              <div
                                className="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                              >
                                <IndicatorSeparator
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Virtual",
                                          "value": true,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                    className="cf-select__indicator-separator"
                                    css={
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "hsl(0, 0%, 80%)",
                                        "boxSizing": "border-box",
                                        "label": "indicatorSeparator",
                                        "marginBottom": 8,
                                        "marginTop": 8,
                                        "width": 1,
                                      }
                                    }
                                  >
                                    <span
                                      className="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                                    />
                                  </EmotionCssPropInternal>
                                </IndicatorSeparator>
                                <DropdownIndicator
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "aria-hidden": "true",
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Virtual",
                                          "value": true,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Virtual",
                                        "value": true,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    aria-hidden="true"
                                    className="cf-select__indicator cf-select__dropdown-indicator"
                                    css={
                                      Object {
                                        ":hover": Object {
                                          "color": "hsl(0, 0%, 60%)",
                                        },
                                        "boxSizing": "border-box",
                                        "color": "hsl(0, 0%, 80%)",
                                        "display": "flex",
                                        "label": "indicatorContainer",
                                        "padding": 8,
                                        "transition": "color 150ms",
                                      }
                                    }
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <div
                                      aria-hidden="true"
                                      className="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                      onMouseDown={[Function]}
                                      onTouchEnd={[Function]}
                                    >
                                      <DownChevron>
                                        <Svg
                                          size={20}
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                            aria-hidden="true"
                                            css={
                                              Object {
                                                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                "name": "19bqh2r",
                                                "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                              }
                                            }
                                            focusable="false"
                                            height={20}
                                            viewBox="0 0 20 20"
                                            width={20}
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="css-6q0nyr-Svg"
                                              focusable="false"
                                              height={20}
                                              viewBox="0 0 20 20"
                                              width={20}
                                            >
                                              <path
                                                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                              />
                                            </svg>
                                          </EmotionCssPropInternal>
                                        </Svg>
                                      </DownChevron>
                                    </div>
                                  </EmotionCssPropInternal>
                                </DropdownIndicator>
                              </div>
                            </EmotionCssPropInternal>
                          </IndicatorsContainer>
                        </div>
                      </EmotionCssPropInternal>
                    </Control>
                  </div>
                </EmotionCssPropInternal>
              </SelectContainer>
            </Select>
          </StateManager>
        </div>
      </div>
    </div>
  </SearchableDropdown>
</HearingTypeDropdown>
`;

exports[`HearingTypeDropdown Can change from virtual hearing to central 1`] = `
<HearingTypeDropdown
  convertHearing={
    [MockFunction] {
      "calls": Array [
        Array [
          "change_to_virtual",
        ],
        Array [
          "change_from_virtual",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  originalRequestType="Central"
  update={
    [MockFunction] {
      "calls": Array [
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": false,
          },
        ],
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": false,
          },
        ],
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": true,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  virtualHearing={
    Object {
      "aliasWithHost": "BVA0000009@care.evn.va.gov",
      "appellantEmail": "Bob.Smith@test.com",
      "appellantTz": null,
      "clientHost": "care.evn.va.gov",
      "guestLink": "https://care.evn.va.gov/bva-app/?join=1&media=&escalate=1&conference=BVA0000009@care.evn.va.gov&pin=2684353125#&role=guest",
      "guestPin": "2684353125#",
      "hostLink": "https://care.evn.va.gov/bva-app/?join=1&media=&escalate=1&conference=BVA0000009@care.evn.va.gov&pin=8600030#&role=host",
      "hostPin": "8600030#",
      "jobCompleted": true,
      "representativeEmail": "tom.brady@caseflow.gov",
      "representativeTz": null,
      "requestCancelled": false,
      "status": "active",
    }
  }
>
  <SearchableDropdown
    clearOnSelect={false}
    label="Hearing Type"
    loading={false}
    name="hearingType"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "Central",
          "value": false,
        },
      ]
    }
    strongLabel={true}
    value={
      Object {
        "label": "Virtual",
        "value": true,
      }
    }
  >
    <div
      className="cf-form-dropdown dropdown-hearingType"
    >
      <label
        className="question-label"
        htmlFor="hearingType"
      >
        <strong>
          <span>
            Hearing Type
          </span>
        </strong>
      </label>
      <div
        className=""
      >
        <div
          className="cf-select"
        >
          <StateManager
            cache={false}
            classNamePrefix="cf-select"
            defaultInputValue=""
            defaultMenuIsOpen={false}
            defaultValue={null}
            inputId="hearingType"
            isLoading={false}
            isSearchable={true}
            noOptionsMessage={[Function]}
            onBlurResetsInput={false}
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "Central",
                  "value": false,
                },
              ]
            }
            shouldKeyDownEventCreateNewOption={[Function]}
            styles={
              Object {
                "input": [Function],
              }
            }
            value={
              Object {
                "label": "Central",
                "value": false,
              }
            }
          >
            <Select
              backspaceRemovesValue={true}
              blurInputOnSelect={true}
              cache={false}
              captureMenuScroll={false}
              classNamePrefix="cf-select"
              closeMenuOnScroll={false}
              closeMenuOnSelect={true}
              components={Object {}}
              controlShouldRenderValue={true}
              escapeClearsValue={false}
              filterOption={[Function]}
              formatGroupLabel={[Function]}
              getOptionLabel={[Function]}
              getOptionValue={[Function]}
              inputId="hearingType"
              inputValue=""
              isDisabled={false}
              isLoading={false}
              isMulti={false}
              isOptionDisabled={[Function]}
              isRtl={false}
              isSearchable={true}
              loadingMessage={[Function]}
              maxMenuHeight={300}
              menuIsOpen={false}
              menuPlacement="bottom"
              menuPosition="absolute"
              menuShouldBlockScroll={false}
              menuShouldScrollIntoView={true}
              minMenuHeight={140}
              noOptionsMessage={[Function]}
              onBlurResetsInput={false}
              onChange={[Function]}
              onInputChange={[Function]}
              onMenuClose={[Function]}
              onMenuOpen={[Function]}
              openMenuOnClick={true}
              openMenuOnFocus={false}
              options={
                Array [
                  Object {
                    "label": "Central",
                    "value": false,
                  },
                ]
              }
              pageSize={5}
              placeholder="Select..."
              screenReaderStatus={[Function]}
              shouldKeyDownEventCreateNewOption={[Function]}
              styles={
                Object {
                  "input": [Function],
                }
              }
              tabIndex="0"
              tabSelectsValue={true}
              value={
                Object {
                  "label": "Central",
                  "value": false,
                }
              }
            >
              <SelectContainer
                clearValue={[Function]}
                cx={[Function]}
                getStyles={[Function]}
                getValue={[Function]}
                hasValue={true}
                innerProps={
                  Object {
                    "id": undefined,
                    "onKeyDown": [Function],
                  }
                }
                isDisabled={false}
                isFocused={false}
                isMulti={false}
                isRtl={false}
                options={
                  Array [
                    Object {
                      "label": "Central",
                      "value": false,
                    },
                  ]
                }
                selectOption={[Function]}
                selectProps={
                  Object {
                    "backspaceRemovesValue": true,
                    "blurInputOnSelect": true,
                    "cache": false,
                    "captureMenuScroll": false,
                    "classNamePrefix": "cf-select",
                    "closeMenuOnScroll": false,
                    "closeMenuOnSelect": true,
                    "components": Object {},
                    "controlShouldRenderValue": true,
                    "defaultOptions": undefined,
                    "escapeClearsValue": false,
                    "filterOption": [Function],
                    "formatGroupLabel": [Function],
                    "getOptionLabel": [Function],
                    "getOptionValue": [Function],
                    "inputId": "hearingType",
                    "inputValue": "",
                    "isClearable": undefined,
                    "isDisabled": false,
                    "isLoading": false,
                    "isMulti": false,
                    "isOptionDisabled": [Function],
                    "isRtl": false,
                    "isSearchable": true,
                    "loadOptions": undefined,
                    "loadingMessage": [Function],
                    "maxMenuHeight": 300,
                    "menuIsOpen": false,
                    "menuPlacement": "bottom",
                    "menuPosition": "absolute",
                    "menuShouldBlockScroll": false,
                    "menuShouldScrollIntoView": true,
                    "minMenuHeight": 140,
                    "noOptionsMessage": [Function],
                    "onBlurResetsInput": false,
                    "onChange": [Function],
                    "onInputChange": [Function],
                    "onMenuClose": [Function],
                    "onMenuOpen": [Function],
                    "openMenuOnClick": true,
                    "openMenuOnFocus": false,
                    "options": Array [
                      Object {
                        "label": "Central",
                        "value": false,
                      },
                    ],
                    "pageSize": 5,
                    "placeholder": "Select...",
                    "screenReaderStatus": [Function],
                    "searchable": undefined,
                    "shouldKeyDownEventCreateNewOption": [Function],
                    "styles": Object {
                      "input": [Function],
                    },
                    "tabIndex": "0",
                    "tabSelectsValue": true,
                    "value": Object {
                      "label": "Central",
                      "value": false,
                    },
                  }
                }
                setValue={[Function]}
                theme={
                  Object {
                    "borderRadius": 4,
                    "colors": Object {
                      "danger": "#DE350B",
                      "dangerLight": "#FFBDAD",
                      "neutral0": "hsl(0, 0%, 100%)",
                      "neutral10": "hsl(0, 0%, 90%)",
                      "neutral20": "hsl(0, 0%, 80%)",
                      "neutral30": "hsl(0, 0%, 70%)",
                      "neutral40": "hsl(0, 0%, 60%)",
                      "neutral5": "hsl(0, 0%, 95%)",
                      "neutral50": "hsl(0, 0%, 50%)",
                      "neutral60": "hsl(0, 0%, 40%)",
                      "neutral70": "hsl(0, 0%, 30%)",
                      "neutral80": "hsl(0, 0%, 20%)",
                      "neutral90": "hsl(0, 0%, 10%)",
                      "primary": "#2684FF",
                      "primary25": "#DEEBFF",
                      "primary50": "#B2D4FF",
                      "primary75": "#4C9AFF",
                    },
                    "spacing": Object {
                      "baseUnit": 4,
                      "controlHeight": 38,
                      "menuGutter": 8,
                    },
                  }
                }
              >
                <EmotionCssPropInternal
                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                  className=""
                  css={
                    Object {
                      "boxSizing": "border-box",
                      "direction": null,
                      "label": "container",
                      "pointerEvents": null,
                      "position": "relative",
                    }
                  }
                  onKeyDown={[Function]}
                >
                  <div
                    className=" css-2b097c-container"
                    onKeyDown={[Function]}
                  >
                    <Control
                      clearValue={[Function]}
                      cx={[Function]}
                      getStyles={[Function]}
                      getValue={[Function]}
                      hasValue={true}
                      innerProps={
                        Object {
                          "onMouseDown": [Function],
                          "onTouchEnd": [Function],
                        }
                      }
                      innerRef={[Function]}
                      isDisabled={false}
                      isFocused={false}
                      isMulti={false}
                      isRtl={false}
                      menuIsOpen={false}
                      options={
                        Array [
                          Object {
                            "label": "Central",
                            "value": false,
                          },
                        ]
                      }
                      selectOption={[Function]}
                      selectProps={
                        Object {
                          "backspaceRemovesValue": true,
                          "blurInputOnSelect": true,
                          "cache": false,
                          "captureMenuScroll": false,
                          "classNamePrefix": "cf-select",
                          "closeMenuOnScroll": false,
                          "closeMenuOnSelect": true,
                          "components": Object {},
                          "controlShouldRenderValue": true,
                          "defaultOptions": undefined,
                          "escapeClearsValue": false,
                          "filterOption": [Function],
                          "formatGroupLabel": [Function],
                          "getOptionLabel": [Function],
                          "getOptionValue": [Function],
                          "inputId": "hearingType",
                          "inputValue": "",
                          "isClearable": undefined,
                          "isDisabled": false,
                          "isLoading": false,
                          "isMulti": false,
                          "isOptionDisabled": [Function],
                          "isRtl": false,
                          "isSearchable": true,
                          "loadOptions": undefined,
                          "loadingMessage": [Function],
                          "maxMenuHeight": 300,
                          "menuIsOpen": false,
                          "menuPlacement": "bottom",
                          "menuPosition": "absolute",
                          "menuShouldBlockScroll": false,
                          "menuShouldScrollIntoView": true,
                          "minMenuHeight": 140,
                          "noOptionsMessage": [Function],
                          "onBlurResetsInput": false,
                          "onChange": [Function],
                          "onInputChange": [Function],
                          "onMenuClose": [Function],
                          "onMenuOpen": [Function],
                          "openMenuOnClick": true,
                          "openMenuOnFocus": false,
                          "options": Array [
                            Object {
                              "label": "Central",
                              "value": false,
                            },
                          ],
                          "pageSize": 5,
                          "placeholder": "Select...",
                          "screenReaderStatus": [Function],
                          "searchable": undefined,
                          "shouldKeyDownEventCreateNewOption": [Function],
                          "styles": Object {
                            "input": [Function],
                          },
                          "tabIndex": "0",
                          "tabSelectsValue": true,
                          "value": Object {
                            "label": "Central",
                            "value": false,
                          },
                        }
                      }
                      setValue={[Function]}
                      theme={
                        Object {
                          "borderRadius": 4,
                          "colors": Object {
                            "danger": "#DE350B",
                            "dangerLight": "#FFBDAD",
                            "neutral0": "hsl(0, 0%, 100%)",
                            "neutral10": "hsl(0, 0%, 90%)",
                            "neutral20": "hsl(0, 0%, 80%)",
                            "neutral30": "hsl(0, 0%, 70%)",
                            "neutral40": "hsl(0, 0%, 60%)",
                            "neutral5": "hsl(0, 0%, 95%)",
                            "neutral50": "hsl(0, 0%, 50%)",
                            "neutral60": "hsl(0, 0%, 40%)",
                            "neutral70": "hsl(0, 0%, 30%)",
                            "neutral80": "hsl(0, 0%, 20%)",
                            "neutral90": "hsl(0, 0%, 10%)",
                            "primary": "#2684FF",
                            "primary25": "#DEEBFF",
                            "primary50": "#B2D4FF",
                            "primary75": "#4C9AFF",
                          },
                          "spacing": Object {
                            "baseUnit": 4,
                            "controlHeight": 38,
                            "menuGutter": 8,
                          },
                        }
                      }
                    >
                      <EmotionCssPropInternal
                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                        className="cf-select__control"
                        css={
                          Object {
                            "&:hover": Object {
                              "borderColor": "hsl(0, 0%, 70%)",
                            },
                            "alignItems": "center",
                            "backgroundColor": "hsl(0, 0%, 100%)",
                            "borderColor": "hsl(0, 0%, 80%)",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "boxShadow": null,
                            "boxSizing": "border-box",
                            "cursor": "default",
                            "display": "flex",
                            "flexWrap": "wrap",
                            "justifyContent": "space-between",
                            "label": "control",
                            "minHeight": 38,
                            "outline": "0 !important",
                            "position": "relative",
                            "transition": "all 100ms",
                          }
                        }
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <div
                          className="cf-select__control css-yk16xz-control"
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                        >
                          <ValueContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            isDisabled={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "Central",
                                  "value": false,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {},
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "hearingType",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "Central",
                                    "value": false,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "Central",
                                  "value": false,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className="cf-select__value-container cf-select__value-container--has-value"
                              css={
                                Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "alignItems": "center",
                                  "boxSizing": "border-box",
                                  "display": "flex",
                                  "flex": 1,
                                  "flexWrap": "wrap",
                                  "overflow": "hidden",
                                  "padding": "2px 8px",
                                  "position": "relative",
                                }
                              }
                            >
                              <div
                                className="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                              >
                                <SingleValue
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  data={
                                    Object {
                                      "label": "Central",
                                      "value": false,
                                    }
                                  }
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  isDisabled={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Central",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Central",
                                          "value": false,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Central",
                                        "value": false,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    className="cf-select__single-value"
                                    css={
                                      Object {
                                        "boxSizing": "border-box",
                                        "color": "hsl(0, 0%, 20%)",
                                        "label": "singleValue",
                                        "marginLeft": 2,
                                        "marginRight": 2,
                                        "maxWidth": "calc(100% - 8px)",
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "textOverflow": "ellipsis",
                                        "top": "50%",
                                        "transform": "translateY(-50%)",
                                        "whiteSpace": "nowrap",
                                      }
                                    }
                                  >
                                    <div
                                      className="cf-select__single-value css-1uccc91-singleValue"
                                    >
                                      Central
                                    </div>
                                  </EmotionCssPropInternal>
                                </SingleValue>
                                <Input
                                  aria-autocomplete="list"
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoCorrect="off"
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  id="hearingType"
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isHidden={true}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Central",
                                          "value": false,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Central",
                                        "value": false,
                                      },
                                    }
                                  }
                                  spellCheck="false"
                                  tabIndex="0"
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                  type="text"
                                  value=""
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    css={
                                      Object {
                                        "height": "44px",
                                      }
                                    }
                                  >
                                    <div
                                      className="css-81nyic-Input"
                                    >
                                      <AutosizeInput
                                        aria-autocomplete="list"
                                        autoCapitalize="none"
                                        autoComplete="off"
                                        autoCorrect="off"
                                        className="cf-select__input"
                                        disabled={false}
                                        id="hearingType"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        inputStyle={
                                          Object {
                                            "background": 0,
                                            "border": 0,
                                            "color": "inherit",
                                            "fontSize": "inherit",
                                            "label": "input",
                                            "opacity": 0,
                                            "outline": 0,
                                            "padding": 0,
                                          }
                                        }
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        spellCheck="false"
                                        tabIndex="0"
                                        type="text"
                                        value=""
                                      >
                                        <div
                                          className="cf-select__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                            }
                                          }
                                        >
                                          <input
                                            aria-autocomplete="list"
                                            autoCapitalize="none"
                                            autoComplete="off"
                                            autoCorrect="off"
                                            disabled={false}
                                            id="hearingType"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            spellCheck="false"
                                            style={
                                              Object {
                                                "background": 0,
                                                "border": 0,
                                                "boxSizing": "content-box",
                                                "color": "inherit",
                                                "fontSize": "inherit",
                                                "label": "input",
                                                "opacity": 0,
                                                "outline": 0,
                                                "padding": 0,
                                                "width": "2px",
                                              }
                                            }
                                            tabIndex="0"
                                            type="text"
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                  </EmotionCssPropInternal>
                                </Input>
                              </div>
                            </EmotionCssPropInternal>
                          </ValueContainer>
                          <IndicatorsContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            isDisabled={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "Central",
                                  "value": false,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {},
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "hearingType",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "Central",
                                    "value": false,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "Central",
                                  "value": false,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className="cf-select__indicators"
                              css={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "boxSizing": "border-box",
                                  "display": "flex",
                                  "flexShrink": 0,
                                }
                              }
                            >
                              <div
                                className="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                              >
                                <IndicatorSeparator
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Central",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Central",
                                          "value": false,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Central",
                                        "value": false,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                    className="cf-select__indicator-separator"
                                    css={
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "hsl(0, 0%, 80%)",
                                        "boxSizing": "border-box",
                                        "label": "indicatorSeparator",
                                        "marginBottom": 8,
                                        "marginTop": 8,
                                        "width": 1,
                                      }
                                    }
                                  >
                                    <span
                                      className="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                                    />
                                  </EmotionCssPropInternal>
                                </IndicatorSeparator>
                                <DropdownIndicator
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "aria-hidden": "true",
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Central",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Central",
                                          "value": false,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Central",
                                        "value": false,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    aria-hidden="true"
                                    className="cf-select__indicator cf-select__dropdown-indicator"
                                    css={
                                      Object {
                                        ":hover": Object {
                                          "color": "hsl(0, 0%, 60%)",
                                        },
                                        "boxSizing": "border-box",
                                        "color": "hsl(0, 0%, 80%)",
                                        "display": "flex",
                                        "label": "indicatorContainer",
                                        "padding": 8,
                                        "transition": "color 150ms",
                                      }
                                    }
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <div
                                      aria-hidden="true"
                                      className="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                      onMouseDown={[Function]}
                                      onTouchEnd={[Function]}
                                    >
                                      <DownChevron>
                                        <Svg
                                          size={20}
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                            aria-hidden="true"
                                            css={
                                              Object {
                                                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                "name": "19bqh2r",
                                                "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                              }
                                            }
                                            focusable="false"
                                            height={20}
                                            viewBox="0 0 20 20"
                                            width={20}
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="css-6q0nyr-Svg"
                                              focusable="false"
                                              height={20}
                                              viewBox="0 0 20 20"
                                              width={20}
                                            >
                                              <path
                                                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                              />
                                            </svg>
                                          </EmotionCssPropInternal>
                                        </Svg>
                                      </DownChevron>
                                    </div>
                                  </EmotionCssPropInternal>
                                </DropdownIndicator>
                              </div>
                            </EmotionCssPropInternal>
                          </IndicatorsContainer>
                        </div>
                      </EmotionCssPropInternal>
                    </Control>
                  </div>
                </EmotionCssPropInternal>
              </SelectContainer>
            </Select>
          </StateManager>
        </div>
      </div>
    </div>
  </SearchableDropdown>
</HearingTypeDropdown>
`;

exports[`HearingTypeDropdown Can change from virtual hearing to video 1`] = `
<HearingTypeDropdown
  openModal={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "type": "change_to_virtual",
          },
        ],
        Array [
          Object {
            "type": "change_from_virtual",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  originalRequestType="Video"
  update={
    [MockFunction] {
      "calls": Array [
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": false,
          },
        ],
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": false,
          },
        ],
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": true,
          },
        ],
        Array [
          "virtualHearing",
          Object {
            "jobCompleted": false,
            "requestCancelled": true,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  virtualHearing={
    Object {
      "aliasWithHost": "BVA0000009@care.evn.va.gov",
      "appellantEmail": "Bob.Smith@test.com",
      "appellantTz": null,
      "clientHost": "care.evn.va.gov",
      "guestLink": "https://care.evn.va.gov/bva-app/?join=1&media=&escalate=1&conference=BVA0000009@care.evn.va.gov&pin=2684353125#&role=guest",
      "guestPin": "2684353125#",
      "hostLink": "https://care.evn.va.gov/bva-app/?join=1&media=&escalate=1&conference=BVA0000009@care.evn.va.gov&pin=8600030#&role=host",
      "hostPin": "8600030#",
      "jobCompleted": true,
      "representativeEmail": "tom.brady@caseflow.gov",
      "representativeTz": null,
      "requestCancelled": false,
      "status": "active",
    }
  }
>
  <SearchableDropdown
    clearOnSelect={false}
    label="Hearing Type"
    loading={false}
    name="hearingType"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "Video",
          "value": false,
        },
      ]
    }
    strongLabel={true}
    value={
      Object {
        "label": "Virtual",
        "value": true,
      }
    }
  >
    <div
      className="cf-form-dropdown dropdown-hearingType"
    >
      <label
        className="question-label"
        htmlFor="hearingType"
      >
        <strong>
          <span>
            Hearing Type
          </span>
        </strong>
      </label>
      <div
        className=""
      >
        <div
          className="cf-select"
        >
          <StateManager
            cache={false}
            classNamePrefix="cf-select"
            defaultInputValue=""
            defaultMenuIsOpen={false}
            defaultValue={null}
            inputId="hearingType"
            isLoading={false}
            isSearchable={true}
            noOptionsMessage={[Function]}
            onBlurResetsInput={false}
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "Video",
                  "value": false,
                },
              ]
            }
            shouldKeyDownEventCreateNewOption={[Function]}
            styles={
              Object {
                "input": [Function],
              }
            }
            value={
              Object {
                "label": "Video",
                "value": false,
              }
            }
          >
            <Select
              backspaceRemovesValue={true}
              blurInputOnSelect={true}
              cache={false}
              captureMenuScroll={false}
              classNamePrefix="cf-select"
              closeMenuOnScroll={false}
              closeMenuOnSelect={true}
              components={Object {}}
              controlShouldRenderValue={true}
              escapeClearsValue={false}
              filterOption={[Function]}
              formatGroupLabel={[Function]}
              getOptionLabel={[Function]}
              getOptionValue={[Function]}
              inputId="hearingType"
              inputValue=""
              isDisabled={false}
              isLoading={false}
              isMulti={false}
              isOptionDisabled={[Function]}
              isRtl={false}
              isSearchable={true}
              loadingMessage={[Function]}
              maxMenuHeight={300}
              menuIsOpen={false}
              menuPlacement="bottom"
              menuPosition="absolute"
              menuShouldBlockScroll={false}
              menuShouldScrollIntoView={true}
              minMenuHeight={140}
              noOptionsMessage={[Function]}
              onBlurResetsInput={false}
              onChange={[Function]}
              onInputChange={[Function]}
              onMenuClose={[Function]}
              onMenuOpen={[Function]}
              openMenuOnClick={true}
              openMenuOnFocus={false}
              options={
                Array [
                  Object {
                    "label": "Video",
                    "value": false,
                  },
                ]
              }
              pageSize={5}
              placeholder="Select..."
              screenReaderStatus={[Function]}
              shouldKeyDownEventCreateNewOption={[Function]}
              styles={
                Object {
                  "input": [Function],
                }
              }
              tabIndex="0"
              tabSelectsValue={true}
              value={
                Object {
                  "label": "Video",
                  "value": false,
                }
              }
            >
              <SelectContainer
                clearValue={[Function]}
                cx={[Function]}
                getStyles={[Function]}
                getValue={[Function]}
                hasValue={true}
                innerProps={
                  Object {
                    "id": undefined,
                    "onKeyDown": [Function],
                  }
                }
                isDisabled={false}
                isFocused={false}
                isMulti={false}
                isRtl={false}
                options={
                  Array [
                    Object {
                      "label": "Video",
                      "value": false,
                    },
                  ]
                }
                selectOption={[Function]}
                selectProps={
                  Object {
                    "backspaceRemovesValue": true,
                    "blurInputOnSelect": true,
                    "cache": false,
                    "captureMenuScroll": false,
                    "classNamePrefix": "cf-select",
                    "closeMenuOnScroll": false,
                    "closeMenuOnSelect": true,
                    "components": Object {},
                    "controlShouldRenderValue": true,
                    "defaultOptions": undefined,
                    "escapeClearsValue": false,
                    "filterOption": [Function],
                    "formatGroupLabel": [Function],
                    "getOptionLabel": [Function],
                    "getOptionValue": [Function],
                    "inputId": "hearingType",
                    "inputValue": "",
                    "isClearable": undefined,
                    "isDisabled": false,
                    "isLoading": false,
                    "isMulti": false,
                    "isOptionDisabled": [Function],
                    "isRtl": false,
                    "isSearchable": true,
                    "loadOptions": undefined,
                    "loadingMessage": [Function],
                    "maxMenuHeight": 300,
                    "menuIsOpen": false,
                    "menuPlacement": "bottom",
                    "menuPosition": "absolute",
                    "menuShouldBlockScroll": false,
                    "menuShouldScrollIntoView": true,
                    "minMenuHeight": 140,
                    "noOptionsMessage": [Function],
                    "onBlurResetsInput": false,
                    "onChange": [Function],
                    "onInputChange": [Function],
                    "onMenuClose": [Function],
                    "onMenuOpen": [Function],
                    "openMenuOnClick": true,
                    "openMenuOnFocus": false,
                    "options": Array [
                      Object {
                        "label": "Video",
                        "value": false,
                      },
                    ],
                    "pageSize": 5,
                    "placeholder": "Select...",
                    "screenReaderStatus": [Function],
                    "searchable": undefined,
                    "shouldKeyDownEventCreateNewOption": [Function],
                    "styles": Object {
                      "input": [Function],
                    },
                    "tabIndex": "0",
                    "tabSelectsValue": true,
                    "value": Object {
                      "label": "Video",
                      "value": false,
                    },
                  }
                }
                setValue={[Function]}
                theme={
                  Object {
                    "borderRadius": 4,
                    "colors": Object {
                      "danger": "#DE350B",
                      "dangerLight": "#FFBDAD",
                      "neutral0": "hsl(0, 0%, 100%)",
                      "neutral10": "hsl(0, 0%, 90%)",
                      "neutral20": "hsl(0, 0%, 80%)",
                      "neutral30": "hsl(0, 0%, 70%)",
                      "neutral40": "hsl(0, 0%, 60%)",
                      "neutral5": "hsl(0, 0%, 95%)",
                      "neutral50": "hsl(0, 0%, 50%)",
                      "neutral60": "hsl(0, 0%, 40%)",
                      "neutral70": "hsl(0, 0%, 30%)",
                      "neutral80": "hsl(0, 0%, 20%)",
                      "neutral90": "hsl(0, 0%, 10%)",
                      "primary": "#2684FF",
                      "primary25": "#DEEBFF",
                      "primary50": "#B2D4FF",
                      "primary75": "#4C9AFF",
                    },
                    "spacing": Object {
                      "baseUnit": 4,
                      "controlHeight": 38,
                      "menuGutter": 8,
                    },
                  }
                }
              >
                <EmotionCssPropInternal
                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                  className=""
                  css={
                    Object {
                      "boxSizing": "border-box",
                      "direction": null,
                      "label": "container",
                      "pointerEvents": null,
                      "position": "relative",
                    }
                  }
                  onKeyDown={[Function]}
                >
                  <div
                    className=" css-2b097c-container"
                    onKeyDown={[Function]}
                  >
                    <Control
                      clearValue={[Function]}
                      cx={[Function]}
                      getStyles={[Function]}
                      getValue={[Function]}
                      hasValue={true}
                      innerProps={
                        Object {
                          "onMouseDown": [Function],
                          "onTouchEnd": [Function],
                        }
                      }
                      innerRef={[Function]}
                      isDisabled={false}
                      isFocused={false}
                      isMulti={false}
                      isRtl={false}
                      menuIsOpen={false}
                      options={
                        Array [
                          Object {
                            "label": "Video",
                            "value": false,
                          },
                        ]
                      }
                      selectOption={[Function]}
                      selectProps={
                        Object {
                          "backspaceRemovesValue": true,
                          "blurInputOnSelect": true,
                          "cache": false,
                          "captureMenuScroll": false,
                          "classNamePrefix": "cf-select",
                          "closeMenuOnScroll": false,
                          "closeMenuOnSelect": true,
                          "components": Object {},
                          "controlShouldRenderValue": true,
                          "defaultOptions": undefined,
                          "escapeClearsValue": false,
                          "filterOption": [Function],
                          "formatGroupLabel": [Function],
                          "getOptionLabel": [Function],
                          "getOptionValue": [Function],
                          "inputId": "hearingType",
                          "inputValue": "",
                          "isClearable": undefined,
                          "isDisabled": false,
                          "isLoading": false,
                          "isMulti": false,
                          "isOptionDisabled": [Function],
                          "isRtl": false,
                          "isSearchable": true,
                          "loadOptions": undefined,
                          "loadingMessage": [Function],
                          "maxMenuHeight": 300,
                          "menuIsOpen": false,
                          "menuPlacement": "bottom",
                          "menuPosition": "absolute",
                          "menuShouldBlockScroll": false,
                          "menuShouldScrollIntoView": true,
                          "minMenuHeight": 140,
                          "noOptionsMessage": [Function],
                          "onBlurResetsInput": false,
                          "onChange": [Function],
                          "onInputChange": [Function],
                          "onMenuClose": [Function],
                          "onMenuOpen": [Function],
                          "openMenuOnClick": true,
                          "openMenuOnFocus": false,
                          "options": Array [
                            Object {
                              "label": "Video",
                              "value": false,
                            },
                          ],
                          "pageSize": 5,
                          "placeholder": "Select...",
                          "screenReaderStatus": [Function],
                          "searchable": undefined,
                          "shouldKeyDownEventCreateNewOption": [Function],
                          "styles": Object {
                            "input": [Function],
                          },
                          "tabIndex": "0",
                          "tabSelectsValue": true,
                          "value": Object {
                            "label": "Video",
                            "value": false,
                          },
                        }
                      }
                      setValue={[Function]}
                      theme={
                        Object {
                          "borderRadius": 4,
                          "colors": Object {
                            "danger": "#DE350B",
                            "dangerLight": "#FFBDAD",
                            "neutral0": "hsl(0, 0%, 100%)",
                            "neutral10": "hsl(0, 0%, 90%)",
                            "neutral20": "hsl(0, 0%, 80%)",
                            "neutral30": "hsl(0, 0%, 70%)",
                            "neutral40": "hsl(0, 0%, 60%)",
                            "neutral5": "hsl(0, 0%, 95%)",
                            "neutral50": "hsl(0, 0%, 50%)",
                            "neutral60": "hsl(0, 0%, 40%)",
                            "neutral70": "hsl(0, 0%, 30%)",
                            "neutral80": "hsl(0, 0%, 20%)",
                            "neutral90": "hsl(0, 0%, 10%)",
                            "primary": "#2684FF",
                            "primary25": "#DEEBFF",
                            "primary50": "#B2D4FF",
                            "primary75": "#4C9AFF",
                          },
                          "spacing": Object {
                            "baseUnit": 4,
                            "controlHeight": 38,
                            "menuGutter": 8,
                          },
                        }
                      }
                    >
                      <EmotionCssPropInternal
                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                        className="cf-select__control"
                        css={
                          Object {
                            "&:hover": Object {
                              "borderColor": "hsl(0, 0%, 70%)",
                            },
                            "alignItems": "center",
                            "backgroundColor": "hsl(0, 0%, 100%)",
                            "borderColor": "hsl(0, 0%, 80%)",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "boxShadow": null,
                            "boxSizing": "border-box",
                            "cursor": "default",
                            "display": "flex",
                            "flexWrap": "wrap",
                            "justifyContent": "space-between",
                            "label": "control",
                            "minHeight": 38,
                            "outline": "0 !important",
                            "position": "relative",
                            "transition": "all 100ms",
                          }
                        }
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <div
                          className="cf-select__control css-yk16xz-control"
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                        >
                          <ValueContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            isDisabled={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "Video",
                                  "value": false,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {},
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "hearingType",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "Video",
                                    "value": false,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "Video",
                                  "value": false,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className="cf-select__value-container cf-select__value-container--has-value"
                              css={
                                Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "alignItems": "center",
                                  "boxSizing": "border-box",
                                  "display": "flex",
                                  "flex": 1,
                                  "flexWrap": "wrap",
                                  "overflow": "hidden",
                                  "padding": "2px 8px",
                                  "position": "relative",
                                }
                              }
                            >
                              <div
                                className="cf-select__value-container cf-select__value-container--has-value css-g1d714-ValueContainer"
                              >
                                <SingleValue
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  data={
                                    Object {
                                      "label": "Video",
                                      "value": false,
                                    }
                                  }
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  isDisabled={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Video",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Video",
                                          "value": false,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Video",
                                        "value": false,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    className="cf-select__single-value"
                                    css={
                                      Object {
                                        "boxSizing": "border-box",
                                        "color": "hsl(0, 0%, 20%)",
                                        "label": "singleValue",
                                        "marginLeft": 2,
                                        "marginRight": 2,
                                        "maxWidth": "calc(100% - 8px)",
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "textOverflow": "ellipsis",
                                        "top": "50%",
                                        "transform": "translateY(-50%)",
                                        "whiteSpace": "nowrap",
                                      }
                                    }
                                  >
                                    <div
                                      className="cf-select__single-value css-1uccc91-singleValue"
                                    >
                                      Video
                                    </div>
                                  </EmotionCssPropInternal>
                                </SingleValue>
                                <Input
                                  aria-autocomplete="list"
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoCorrect="off"
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  id="hearingType"
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isHidden={true}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Video",
                                          "value": false,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Video",
                                        "value": false,
                                      },
                                    }
                                  }
                                  spellCheck="false"
                                  tabIndex="0"
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                  type="text"
                                  value=""
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    css={
                                      Object {
                                        "height": "44px",
                                      }
                                    }
                                  >
                                    <div
                                      className="css-81nyic-Input"
                                    >
                                      <AutosizeInput
                                        aria-autocomplete="list"
                                        autoCapitalize="none"
                                        autoComplete="off"
                                        autoCorrect="off"
                                        className="cf-select__input"
                                        disabled={false}
                                        id="hearingType"
                                        injectStyles={true}
                                        inputRef={[Function]}
                                        inputStyle={
                                          Object {
                                            "background": 0,
                                            "border": 0,
                                            "color": "inherit",
                                            "fontSize": "inherit",
                                            "label": "input",
                                            "opacity": 0,
                                            "outline": 0,
                                            "padding": 0,
                                          }
                                        }
                                        minWidth={1}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        spellCheck="false"
                                        tabIndex="0"
                                        type="text"
                                        value=""
                                      >
                                        <div
                                          className="cf-select__input"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                            }
                                          }
                                        >
                                          <input
                                            aria-autocomplete="list"
                                            autoCapitalize="none"
                                            autoComplete="off"
                                            autoCorrect="off"
                                            disabled={false}
                                            id="hearingType"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            spellCheck="false"
                                            style={
                                              Object {
                                                "background": 0,
                                                "border": 0,
                                                "boxSizing": "content-box",
                                                "color": "inherit",
                                                "fontSize": "inherit",
                                                "label": "input",
                                                "opacity": 0,
                                                "outline": 0,
                                                "padding": 0,
                                                "width": "2px",
                                              }
                                            }
                                            tabIndex="0"
                                            type="text"
                                            value=""
                                          />
                                          <div
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": 0,
                                                "visibility": "hidden",
                                                "whiteSpace": "pre",
                                              }
                                            }
                                          />
                                        </div>
                                      </AutosizeInput>
                                    </div>
                                  </EmotionCssPropInternal>
                                </Input>
                              </div>
                            </EmotionCssPropInternal>
                          </ValueContainer>
                          <IndicatorsContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            isDisabled={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "Video",
                                  "value": false,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "cache": false,
                                "captureMenuScroll": false,
                                "classNamePrefix": "cf-select",
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {},
                                "controlShouldRenderValue": true,
                                "defaultOptions": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "inputId": "hearingType",
                                "inputValue": "",
                                "isClearable": undefined,
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadOptions": undefined,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "bottom",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onBlurResetsInput": false,
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "Video",
                                    "value": false,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "searchable": undefined,
                                "shouldKeyDownEventCreateNewOption": [Function],
                                "styles": Object {
                                  "input": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "Video",
                                  "value": false,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className="cf-select__indicators"
                              css={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "boxSizing": "border-box",
                                  "display": "flex",
                                  "flexShrink": 0,
                                }
                              }
                            >
                              <div
                                className="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                              >
                                <IndicatorSeparator
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Video",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Video",
                                          "value": false,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Video",
                                        "value": false,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                    className="cf-select__indicator-separator"
                                    css={
                                      Object {
                                        "alignSelf": "stretch",
                                        "backgroundColor": "hsl(0, 0%, 80%)",
                                        "boxSizing": "border-box",
                                        "label": "indicatorSeparator",
                                        "marginBottom": 8,
                                        "marginTop": 8,
                                        "width": 1,
                                      }
                                    }
                                  >
                                    <span
                                      className="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                                    />
                                  </EmotionCssPropInternal>
                                </IndicatorSeparator>
                                <DropdownIndicator
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "aria-hidden": "true",
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Video",
                                        "value": false,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "cache": false,
                                      "captureMenuScroll": false,
                                      "classNamePrefix": "cf-select",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {},
                                      "controlShouldRenderValue": true,
                                      "defaultOptions": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "inputId": "hearingType",
                                      "inputValue": "",
                                      "isClearable": undefined,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadOptions": undefined,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onBlurResetsInput": false,
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "Video",
                                          "value": false,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "searchable": undefined,
                                      "shouldKeyDownEventCreateNewOption": [Function],
                                      "styles": Object {
                                        "input": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "Video",
                                        "value": false,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    aria-hidden="true"
                                    className="cf-select__indicator cf-select__dropdown-indicator"
                                    css={
                                      Object {
                                        ":hover": Object {
                                          "color": "hsl(0, 0%, 60%)",
                                        },
                                        "boxSizing": "border-box",
                                        "color": "hsl(0, 0%, 80%)",
                                        "display": "flex",
                                        "label": "indicatorContainer",
                                        "padding": 8,
                                        "transition": "color 150ms",
                                      }
                                    }
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <div
                                      aria-hidden="true"
                                      className="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                      onMouseDown={[Function]}
                                      onTouchEnd={[Function]}
                                    >
                                      <DownChevron>
                                        <Svg
                                          size={20}
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                            aria-hidden="true"
                                            css={
                                              Object {
                                                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                "name": "19bqh2r",
                                                "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                              }
                                            }
                                            focusable="false"
                                            height={20}
                                            viewBox="0 0 20 20"
                                            width={20}
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="css-6q0nyr-Svg"
                                              focusable="false"
                                              height={20}
                                              viewBox="0 0 20 20"
                                              width={20}
                                            >
                                              <path
                                                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                              />
                                            </svg>
                                          </EmotionCssPropInternal>
                                        </Svg>
                                      </DownChevron>
                                    </div>
                                  </EmotionCssPropInternal>
                                </DropdownIndicator>
                              </div>
                            </EmotionCssPropInternal>
                          </IndicatorsContainer>
                        </div>
                      </EmotionCssPropInternal>
                    </Control>
                  </div>
                </EmotionCssPropInternal>
              </SelectContainer>
            </Select>
          </StateManager>
        </div>
      </div>
    </div>
  </SearchableDropdown>
</HearingTypeDropdown>
`;

exports[`HearingTypeDropdown Matches snapshot with default props for central office hearings 1`] = `
<SearchableDropdown
  clearOnSelect={false}
  label="Hearing Type"
  loading={false}
  name="hearingType"
  onChange={[Function]}
  options={
    Array [
      Object {
        "label": "Virtual",
        "value": true,
      },
    ]
  }
  strongLabel={true}
  value={
    Object {
      "label": "Central",
      "value": false,
    }
  }
/>
`;

exports[`HearingTypeDropdown Matches snapshot with default props for video hearings 1`] = `
<SearchableDropdown
  clearOnSelect={false}
  label="Hearing Type"
  loading={false}
  name="hearingType"
  onChange={[Function]}
  options={
    Array [
      Object {
        "label": "Virtual",
        "value": true,
      },
    ]
  }
  strongLabel={true}
  value={
    Object {
      "label": "Video",
      "value": false,
    }
  }
/>
`;

exports[`HearingTypeDropdown Matches snapshot with default props for virtual hearings 1`] = `
<SearchableDropdown
  clearOnSelect={false}
  label="Hearing Type"
  loading={false}
  name="hearingType"
  onChange={[Function]}
  options={
    Array [
      Object {
        "label": "Central",
        "value": false,
      },
    ]
  }
  strongLabel={true}
  value={
    Object {
      "label": "Virtual",
      "value": true,
    }
  }
/>
`;
