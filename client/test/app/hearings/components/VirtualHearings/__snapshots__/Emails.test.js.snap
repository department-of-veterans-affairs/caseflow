// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VirtualHearingEmails Does not allow editing when ReadOnly 1`] = `
<ReadOnly
  label="Appellant Email"
  text="123@gmail.com"
/>
`;

exports[`VirtualHearingEmails Does not show required when ReadOnly 1`] = `
<VirtualHearingEmail
  disabled={true}
  email="123@gmail.com"
  emailType="appellantTz"
  label="Appellant Email"
  required={true}
>
  <TextField
    className={
      Array [
        "cf-form-textinput cf-inline-field",
      ]
    }
    inputStyling={
      Object {
        "data-css-d0z96": "",
      }
    }
    name="Appellant Email"
    onChange={[Function]}
    optional={false}
    readOnly={true}
    required={false}
    strongLabel={true}
    type="text"
    useAriaLabel={false}
    value="123@gmail.com"
  >
    <div
      className="cf-form-textinput cf-inline-field   "
    >
      <label
        htmlFor="Appellant Email"
      >
        <strong>
          <FormLabel
            name="Appellant Email"
            optional={false}
            required={false}
          >
            <span>
              Appellant Email
            </span>
          </FormLabel>
        </strong>
      </label>
      <input
        className={
          Array [
            "cf-form-textinput cf-inline-field",
          ]
        }
        data-css-d0z96=""
        id="Appellant Email"
        name="Appellant Email"
        onChange={[Function]}
        readOnly={true}
        type="text"
        value="123@gmail.com"
      />
    </div>
  </TextField>
  <HelperText
    label="Changes to the email are used to send notifications for this hearing only"
  >
    <span
      data-css-tgxxqt=""
    >
      Changes to the email are used to send notifications for this hearing only
    </span>
  </HelperText>
</VirtualHearingEmail>
`;

exports[`VirtualHearingEmails Matches snapshot with default props 1`] = `
<Fragment>
  <TextField
    className={
      Array [
        "cf-form-textinput cf-inline-field",
      ]
    }
    inputStyling={
      Object {
        "data-css-d0z96": "",
      }
    }
    name="Appellant Email"
    onChange={[Function]}
    optional={false}
    required={false}
    strongLabel={true}
    type="text"
    useAriaLabel={false}
    value="123@gmail.com"
  />
  <HelperText
    label="Changes to the email are used to send notifications for this hearing only"
  />
</Fragment>
`;

exports[`VirtualHearingEmails Respects required prop 1`] = `
<VirtualHearingEmail
  email="123@gmail.com"
  emailType="appellantTz"
  label="Appellant Email"
  required={true}
>
  <TextField
    className={
      Array [
        "cf-form-textinput cf-inline-field",
      ]
    }
    inputStyling={
      Object {
        "data-css-d0z96": "",
      }
    }
    name="Appellant Email"
    onChange={[Function]}
    optional={false}
    required={true}
    strongLabel={true}
    type="text"
    useAriaLabel={false}
    value="123@gmail.com"
  >
    <div
      className="cf-form-textinput cf-inline-field   "
    >
      <label
        htmlFor="Appellant Email"
      >
        <strong>
          <FormLabel
            name="Appellant Email"
            optional={false}
            required={true}
          >
            <span>
              Appellant Email
              <span
                className="cf-required"
              >
                Required
              </span>
            </span>
          </FormLabel>
        </strong>
      </label>
      <input
        className={
          Array [
            "cf-form-textinput cf-inline-field",
          ]
        }
        data-css-d0z96=""
        id="Appellant Email"
        name="Appellant Email"
        onChange={[Function]}
        type="text"
        value="123@gmail.com"
      />
    </div>
  </TextField>
  <HelperText
    label="Changes to the email are used to send notifications for this hearing only"
  >
    <span
      data-css-tgxxqt=""
    >
      Changes to the email are used to send notifications for this hearing only
    </span>
  </HelperText>
</VirtualHearingEmail>
`;
