// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HearingTime Matches snapshot when other time is not selected 1`] = `
<HearingTime
  componentIndex={0}
  value="12:30"
>
  <span
    data-css-1042gbc=""
  >
    <RadioField
      className={
        Array [
          "usa-fieldset-inputs",
        ]
      }
      label="Time"
      name="hearingTime0"
      onChange={[Function]}
      options={
        Array [
          Object {
            "disabled": undefined,
            "displayText": "8:30 am",
            "value": "08:30",
          },
          Object {
            "disabled": undefined,
            "displayText": "12:30 pm",
            "value": "12:30",
          },
          Object {
            "disabled": undefined,
            "displayText": "Other",
            "value": "other",
          },
        ]
      }
      required={false}
      strongLabel={true}
      value="12:30"
    >
      <fieldset
        className="usa-fieldset-inputs cf-form-radio "
      >
        <legend
          className=""
        >
          <strong>
            <span>
              Time
               
            </span>
          </strong>
        </legend>
        <div
          className="cf-form-radio-options"
        >
          <div
            className="cf-form-radio-option"
            key="hearingTime0-08:30-0"
          >
            <input
              checked={false}
              disabled={false}
              id="hearingTime0_08:30"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="08:30"
            />
            <label
              className=""
              htmlFor="hearingTime0_08:30"
            >
              8:30 am
            </label>
          </div>
          <div
            className="cf-form-radio-option"
            key="hearingTime0-12:30-1"
          >
            <input
              checked={true}
              disabled={false}
              id="hearingTime0_12:30"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="12:30"
            />
            <label
              className=""
              htmlFor="hearingTime0_12:30"
            >
              12:30 pm
            </label>
          </div>
          <div
            className="cf-form-radio-option"
            key="hearingTime0-other-2"
          >
            <input
              checked={false}
              disabled={false}
              id="hearingTime0_other"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="other"
            />
            <label
              className=""
              htmlFor="hearingTime0_other"
            >
              Other
            </label>
          </div>
        </div>
      </fieldset>
    </RadioField>
  </span>
</HearingTime>
`;

exports[`HearingTime Matches snapshot when other time is selected 1`] = `
<HearingTime
  componentIndex={0}
  value="13:45"
>
  <span
    data-css-1042gbc=""
  >
    <RadioField
      className={
        Array [
          "usa-fieldset-inputs",
        ]
      }
      label="Time"
      name="hearingTime0"
      onChange={[Function]}
      options={
        Array [
          Object {
            "disabled": undefined,
            "displayText": "8:30 am",
            "value": "08:30",
          },
          Object {
            "disabled": undefined,
            "displayText": "12:30 pm",
            "value": "12:30",
          },
          Object {
            "disabled": undefined,
            "displayText": "Other",
            "value": "other",
          },
        ]
      }
      required={false}
      strongLabel={true}
      value="other"
    >
      <fieldset
        className="usa-fieldset-inputs cf-form-radio "
      >
        <legend
          className=""
        >
          <strong>
            <span>
              Time
               
            </span>
          </strong>
        </legend>
        <div
          className="cf-form-radio-options"
        >
          <div
            className="cf-form-radio-option"
            key="hearingTime0-08:30-0"
          >
            <input
              checked={false}
              disabled={false}
              id="hearingTime0_08:30"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="08:30"
            />
            <label
              className=""
              htmlFor="hearingTime0_08:30"
            >
              8:30 am
            </label>
          </div>
          <div
            className="cf-form-radio-option"
            key="hearingTime0-12:30-1"
          >
            <input
              checked={false}
              disabled={false}
              id="hearingTime0_12:30"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="12:30"
            />
            <label
              className=""
              htmlFor="hearingTime0_12:30"
            >
              12:30 pm
            </label>
          </div>
          <div
            className="cf-form-radio-option"
            key="hearingTime0-other-2"
          >
            <input
              checked={true}
              disabled={false}
              id="hearingTime0_other"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="other"
            />
            <label
              className=""
              htmlFor="hearingTime0_other"
            >
              Other
            </label>
          </div>
        </div>
      </fieldset>
    </RadioField>
  </span>
  <SearchableDropdown
    hideLabel={true}
    loading={false}
    name="optionalHearingTime0"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "8:15 am",
          "value": "08:15",
        },
        Object {
          "label": "8:30 am",
          "value": "08:30",
        },
        Object {
          "label": "8:45 am",
          "value": "08:45",
        },
        Object {
          "label": "9:00 am",
          "value": "09:00",
        },
        Object {
          "label": "9:15 am",
          "value": "09:15",
        },
        Object {
          "label": "9:30 am",
          "value": "09:30",
        },
        Object {
          "label": "9:45 am",
          "value": "09:45",
        },
        Object {
          "label": "10:00 am",
          "value": "10:00",
        },
        Object {
          "label": "10:15 am",
          "value": "10:15",
        },
        Object {
          "label": "10:30 am",
          "value": "10:30",
        },
        Object {
          "label": "10:45 am",
          "value": "10:45",
        },
        Object {
          "label": "11:00 am",
          "value": "11:00",
        },
        Object {
          "label": "11:15 am",
          "value": "11:15",
        },
        Object {
          "label": "11:30 am",
          "value": "11:30",
        },
        Object {
          "label": "11:45 am",
          "value": "11:45",
        },
        Object {
          "label": "12:00 pm",
          "value": "12:00",
        },
        Object {
          "label": "12:15 pm",
          "value": "12:15",
        },
        Object {
          "label": "12:30 pm",
          "value": "12:30",
        },
        Object {
          "label": "12:45 pm",
          "value": "12:45",
        },
        Object {
          "label": "1:00 pm",
          "value": "13:00",
        },
        Object {
          "label": "1:15 pm",
          "value": "13:15",
        },
        Object {
          "label": "1:30 pm",
          "value": "13:30",
        },
        Object {
          "label": "1:45 pm",
          "value": "13:45",
        },
        Object {
          "label": "2:00 pm",
          "value": "14:00",
        },
        Object {
          "label": "2:15 pm",
          "value": "14:15",
        },
        Object {
          "label": "2:30 pm",
          "value": "14:30",
        },
        Object {
          "label": "2:45 pm",
          "value": "14:45",
        },
        Object {
          "label": "3:00 pm",
          "value": "15:00",
        },
        Object {
          "label": "3:15 pm",
          "value": "15:15",
        },
        Object {
          "label": "3:30 pm",
          "value": "15:30",
        },
        Object {
          "label": "3:45 pm",
          "value": "15:45",
        },
        Object {
          "label": "4:00 pm",
          "value": "16:00",
        },
        Object {
          "label": "4:15 pm",
          "value": "16:15",
        },
        Object {
          "label": "4:30 pm",
          "value": "16:30",
        },
        Object {
          "label": "4:45 pm",
          "value": "16:45",
        },
      ]
    }
    placeholder="Select a time"
    value="13:45"
  >
    <div
      className="cf-form-dropdown dropdown-optionalHearingTime0"
    >
      <label
        className="question-label usa-sr-only"
        htmlFor="optionalHearingTime0"
      >
        <span>
          optionalHearingTime0
        </span>
      </label>
      <div
        className=""
      >
        <Select
          addLabelText="Add \\"{label}\\"?"
          arrowRenderer={[Function]}
          autosize={true}
          backspaceRemoves={true}
          backspaceToRemoveMessage="Press backspace to remove {label}"
          cache={false}
          clearAllText="Clear all"
          clearRenderer={[Function]}
          clearValueText="Clear value"
          clearable={false}
          deleteRemoves={true}
          delimiter=","
          disabled={false}
          escapeClearsValue={true}
          filterOptions={[Function]}
          ignoreAccents={true}
          ignoreCase={true}
          inputProps={
            Object {
              "autoComplete": "off",
              "id": "optionalHearingTime0",
            }
          }
          isLoading={false}
          joinValues={false}
          labelKey="label"
          matchPos="any"
          matchProp="any"
          menuBuffer={0}
          menuRenderer={[Function]}
          multi={false}
          noResultsText="Not an option"
          onBlurResetsInput={false}
          onChange={[Function]}
          onCloseResetsInput={true}
          optionComponent={[Function]}
          options={
            Array [
              Object {
                "label": "8:15 am",
                "value": "08:15",
              },
              Object {
                "label": "8:30 am",
                "value": "08:30",
              },
              Object {
                "label": "8:45 am",
                "value": "08:45",
              },
              Object {
                "label": "9:00 am",
                "value": "09:00",
              },
              Object {
                "label": "9:15 am",
                "value": "09:15",
              },
              Object {
                "label": "9:30 am",
                "value": "09:30",
              },
              Object {
                "label": "9:45 am",
                "value": "09:45",
              },
              Object {
                "label": "10:00 am",
                "value": "10:00",
              },
              Object {
                "label": "10:15 am",
                "value": "10:15",
              },
              Object {
                "label": "10:30 am",
                "value": "10:30",
              },
              Object {
                "label": "10:45 am",
                "value": "10:45",
              },
              Object {
                "label": "11:00 am",
                "value": "11:00",
              },
              Object {
                "label": "11:15 am",
                "value": "11:15",
              },
              Object {
                "label": "11:30 am",
                "value": "11:30",
              },
              Object {
                "label": "11:45 am",
                "value": "11:45",
              },
              Object {
                "label": "12:00 pm",
                "value": "12:00",
              },
              Object {
                "label": "12:15 pm",
                "value": "12:15",
              },
              Object {
                "label": "12:30 pm",
                "value": "12:30",
              },
              Object {
                "label": "12:45 pm",
                "value": "12:45",
              },
              Object {
                "label": "1:00 pm",
                "value": "13:00",
              },
              Object {
                "label": "1:15 pm",
                "value": "13:15",
              },
              Object {
                "label": "1:30 pm",
                "value": "13:30",
              },
              Object {
                "label": "1:45 pm",
                "value": "13:45",
              },
              Object {
                "label": "2:00 pm",
                "value": "14:00",
              },
              Object {
                "label": "2:15 pm",
                "value": "14:15",
              },
              Object {
                "label": "2:30 pm",
                "value": "14:30",
              },
              Object {
                "label": "2:45 pm",
                "value": "14:45",
              },
              Object {
                "label": "3:00 pm",
                "value": "15:00",
              },
              Object {
                "label": "3:15 pm",
                "value": "15:15",
              },
              Object {
                "label": "3:30 pm",
                "value": "15:30",
              },
              Object {
                "label": "3:45 pm",
                "value": "15:45",
              },
              Object {
                "label": "4:00 pm",
                "value": "16:00",
              },
              Object {
                "label": "4:15 pm",
                "value": "16:15",
              },
              Object {
                "label": "4:30 pm",
                "value": "16:30",
              },
              Object {
                "label": "4:45 pm",
                "value": "16:45",
              },
            ]
          }
          pageSize={5}
          placeholder="Select a time"
          required={false}
          scrollMenuIntoView={true}
          searchable={true}
          shouldKeyDownEventCreateNewOption={[Function]}
          simpleValue={false}
          tabSelectsValue={true}
          value="13:45"
          valueComponent={[Function]}
          valueKey="value"
        >
          <div
            className="Select Select--single is-searchable has-value"
          >
            <div
              className="Select-control"
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              <span
                className="Select-multi-value-wrapper"
                id="react-select-3--value"
              >
                <Value
                  disabled={false}
                  id="react-select-3--value-item"
                  instancePrefix="react-select-3-"
                  onClick={null}
                  value={
                    Object {
                      "label": "1:45 pm",
                      "value": "13:45",
                    }
                  }
                >
                  <div
                    className="Select-value"
                  >
                    <span
                      aria-selected="true"
                      className="Select-value-label"
                      id="react-select-3--value-item"
                      role="option"
                    >
                      1:45 pm
                    </span>
                  </div>
                </Value>
                <Component
                  aria-activedescendant="react-select-3--value"
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-owns=""
                  autoComplete="off"
                  className="Select-input"
                  id="optionalHearingTime0"
                  minWidth="5"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  value=""
                >
                  <div
                    className="Select-input"
                    style={
                      Object {
                        "display": "inline-block",
                      }
                    }
                  >
                    <style
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "input#undefined::-ms-clear {display: none;}",
                        }
                      }
                    />
                    <input
                      aria-activedescendant="react-select-3--value"
                      aria-expanded="false"
                      aria-haspopup="false"
                      aria-owns=""
                      autoComplete="off"
                      id="optionalHearingTime0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      required={false}
                      role="combobox"
                      style={
                        Object {
                          "boxSizing": "content-box",
                          "width": "5px",
                        }
                      }
                      value=""
                    />
                    <div
                      style={
                        Object {
                          "height": 0,
                          "left": 0,
                          "overflow": "scroll",
                          "position": "absolute",
                          "top": 0,
                          "visibility": "hidden",
                          "whiteSpace": "pre",
                        }
                      }
                    />
                  </div>
                </Component>
              </span>
              <span
                className="Select-arrow-zone"
                onMouseDown={[Function]}
              >
                <span
                  className="Select-arrow"
                  onMouseDown={[Function]}
                />
              </span>
            </div>
          </div>
        </Select>
      </div>
    </div>
  </SearchableDropdown>
</HearingTime>
`;

exports[`HearingTime Matches snapshot when readonly prop is set 1`] = `
<HearingTime
  componentIndex={0}
>
  <span
    data-css-1042gbc=""
  >
    <RadioField
      className={
        Array [
          "usa-fieldset-inputs",
        ]
      }
      label="Time"
      name="hearingTime0"
      onChange={[Function]}
      options={
        Array [
          Object {
            "disabled": undefined,
            "displayText": "8:30 am",
            "value": "08:30",
          },
          Object {
            "disabled": undefined,
            "displayText": "12:30 pm",
            "value": "12:30",
          },
          Object {
            "disabled": undefined,
            "displayText": "Other",
            "value": "other",
          },
        ]
      }
      required={false}
      strongLabel={true}
      value="other"
    >
      <fieldset
        className="usa-fieldset-inputs cf-form-radio "
      >
        <legend
          className=""
        >
          <strong>
            <span>
              Time
               
            </span>
          </strong>
        </legend>
        <div
          className="cf-form-radio-options"
        >
          <div
            className="cf-form-radio-option"
            key="hearingTime0-08:30-0"
          >
            <input
              checked={false}
              disabled={false}
              id="hearingTime0_08:30"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="08:30"
            />
            <label
              className=""
              htmlFor="hearingTime0_08:30"
            >
              8:30 am
            </label>
          </div>
          <div
            className="cf-form-radio-option"
            key="hearingTime0-12:30-1"
          >
            <input
              checked={false}
              disabled={false}
              id="hearingTime0_12:30"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="12:30"
            />
            <label
              className=""
              htmlFor="hearingTime0_12:30"
            >
              12:30 pm
            </label>
          </div>
          <div
            className="cf-form-radio-option"
            key="hearingTime0-other-2"
          >
            <input
              checked={true}
              disabled={false}
              id="hearingTime0_other"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="other"
            />
            <label
              className=""
              htmlFor="hearingTime0_other"
            >
              Other
            </label>
          </div>
        </div>
      </fieldset>
    </RadioField>
  </span>
  <SearchableDropdown
    hideLabel={true}
    loading={false}
    name="optionalHearingTime0"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "8:15 am",
          "value": "08:15",
        },
        Object {
          "label": "8:30 am",
          "value": "08:30",
        },
        Object {
          "label": "8:45 am",
          "value": "08:45",
        },
        Object {
          "label": "9:00 am",
          "value": "09:00",
        },
        Object {
          "label": "9:15 am",
          "value": "09:15",
        },
        Object {
          "label": "9:30 am",
          "value": "09:30",
        },
        Object {
          "label": "9:45 am",
          "value": "09:45",
        },
        Object {
          "label": "10:00 am",
          "value": "10:00",
        },
        Object {
          "label": "10:15 am",
          "value": "10:15",
        },
        Object {
          "label": "10:30 am",
          "value": "10:30",
        },
        Object {
          "label": "10:45 am",
          "value": "10:45",
        },
        Object {
          "label": "11:00 am",
          "value": "11:00",
        },
        Object {
          "label": "11:15 am",
          "value": "11:15",
        },
        Object {
          "label": "11:30 am",
          "value": "11:30",
        },
        Object {
          "label": "11:45 am",
          "value": "11:45",
        },
        Object {
          "label": "12:00 pm",
          "value": "12:00",
        },
        Object {
          "label": "12:15 pm",
          "value": "12:15",
        },
        Object {
          "label": "12:30 pm",
          "value": "12:30",
        },
        Object {
          "label": "12:45 pm",
          "value": "12:45",
        },
        Object {
          "label": "1:00 pm",
          "value": "13:00",
        },
        Object {
          "label": "1:15 pm",
          "value": "13:15",
        },
        Object {
          "label": "1:30 pm",
          "value": "13:30",
        },
        Object {
          "label": "1:45 pm",
          "value": "13:45",
        },
        Object {
          "label": "2:00 pm",
          "value": "14:00",
        },
        Object {
          "label": "2:15 pm",
          "value": "14:15",
        },
        Object {
          "label": "2:30 pm",
          "value": "14:30",
        },
        Object {
          "label": "2:45 pm",
          "value": "14:45",
        },
        Object {
          "label": "3:00 pm",
          "value": "15:00",
        },
        Object {
          "label": "3:15 pm",
          "value": "15:15",
        },
        Object {
          "label": "3:30 pm",
          "value": "15:30",
        },
        Object {
          "label": "3:45 pm",
          "value": "15:45",
        },
        Object {
          "label": "4:00 pm",
          "value": "16:00",
        },
        Object {
          "label": "4:15 pm",
          "value": "16:15",
        },
        Object {
          "label": "4:30 pm",
          "value": "16:30",
        },
        Object {
          "label": "4:45 pm",
          "value": "16:45",
        },
      ]
    }
    placeholder="Select a time"
  >
    <div
      className="cf-form-dropdown dropdown-optionalHearingTime0"
    >
      <label
        className="question-label usa-sr-only"
        htmlFor="optionalHearingTime0"
      >
        <span>
          optionalHearingTime0
        </span>
      </label>
      <div
        className=""
      >
        <Select
          addLabelText="Add \\"{label}\\"?"
          arrowRenderer={[Function]}
          autosize={true}
          backspaceRemoves={true}
          backspaceToRemoveMessage="Press backspace to remove {label}"
          cache={false}
          clearAllText="Clear all"
          clearRenderer={[Function]}
          clearValueText="Clear value"
          clearable={false}
          deleteRemoves={true}
          delimiter=","
          disabled={false}
          escapeClearsValue={true}
          filterOptions={[Function]}
          ignoreAccents={true}
          ignoreCase={true}
          inputProps={
            Object {
              "autoComplete": "off",
              "id": "optionalHearingTime0",
            }
          }
          isLoading={false}
          joinValues={false}
          labelKey="label"
          matchPos="any"
          matchProp="any"
          menuBuffer={0}
          menuRenderer={[Function]}
          multi={false}
          noResultsText="Not an option"
          onBlurResetsInput={false}
          onChange={[Function]}
          onCloseResetsInput={true}
          optionComponent={[Function]}
          options={
            Array [
              Object {
                "label": "8:15 am",
                "value": "08:15",
              },
              Object {
                "label": "8:30 am",
                "value": "08:30",
              },
              Object {
                "label": "8:45 am",
                "value": "08:45",
              },
              Object {
                "label": "9:00 am",
                "value": "09:00",
              },
              Object {
                "label": "9:15 am",
                "value": "09:15",
              },
              Object {
                "label": "9:30 am",
                "value": "09:30",
              },
              Object {
                "label": "9:45 am",
                "value": "09:45",
              },
              Object {
                "label": "10:00 am",
                "value": "10:00",
              },
              Object {
                "label": "10:15 am",
                "value": "10:15",
              },
              Object {
                "label": "10:30 am",
                "value": "10:30",
              },
              Object {
                "label": "10:45 am",
                "value": "10:45",
              },
              Object {
                "label": "11:00 am",
                "value": "11:00",
              },
              Object {
                "label": "11:15 am",
                "value": "11:15",
              },
              Object {
                "label": "11:30 am",
                "value": "11:30",
              },
              Object {
                "label": "11:45 am",
                "value": "11:45",
              },
              Object {
                "label": "12:00 pm",
                "value": "12:00",
              },
              Object {
                "label": "12:15 pm",
                "value": "12:15",
              },
              Object {
                "label": "12:30 pm",
                "value": "12:30",
              },
              Object {
                "label": "12:45 pm",
                "value": "12:45",
              },
              Object {
                "label": "1:00 pm",
                "value": "13:00",
              },
              Object {
                "label": "1:15 pm",
                "value": "13:15",
              },
              Object {
                "label": "1:30 pm",
                "value": "13:30",
              },
              Object {
                "label": "1:45 pm",
                "value": "13:45",
              },
              Object {
                "label": "2:00 pm",
                "value": "14:00",
              },
              Object {
                "label": "2:15 pm",
                "value": "14:15",
              },
              Object {
                "label": "2:30 pm",
                "value": "14:30",
              },
              Object {
                "label": "2:45 pm",
                "value": "14:45",
              },
              Object {
                "label": "3:00 pm",
                "value": "15:00",
              },
              Object {
                "label": "3:15 pm",
                "value": "15:15",
              },
              Object {
                "label": "3:30 pm",
                "value": "15:30",
              },
              Object {
                "label": "3:45 pm",
                "value": "15:45",
              },
              Object {
                "label": "4:00 pm",
                "value": "16:00",
              },
              Object {
                "label": "4:15 pm",
                "value": "16:15",
              },
              Object {
                "label": "4:30 pm",
                "value": "16:30",
              },
              Object {
                "label": "4:45 pm",
                "value": "16:45",
              },
            ]
          }
          pageSize={5}
          placeholder="Select a time"
          required={false}
          scrollMenuIntoView={true}
          searchable={true}
          shouldKeyDownEventCreateNewOption={[Function]}
          simpleValue={false}
          tabSelectsValue={true}
          valueComponent={[Function]}
          valueKey="value"
        >
          <div
            className="Select Select--single is-searchable"
          >
            <div
              className="Select-control"
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              <span
                className="Select-multi-value-wrapper"
                id="react-select-4--value"
              >
                <div
                  className="Select-placeholder"
                >
                  Select a time
                </div>
                <Component
                  aria-activedescendant="react-select-4--value"
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-owns=""
                  autoComplete="off"
                  className="Select-input"
                  id="optionalHearingTime0"
                  minWidth="5"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  value=""
                >
                  <div
                    className="Select-input"
                    style={
                      Object {
                        "display": "inline-block",
                      }
                    }
                  >
                    <style
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "input#undefined::-ms-clear {display: none;}",
                        }
                      }
                    />
                    <input
                      aria-activedescendant="react-select-4--value"
                      aria-expanded="false"
                      aria-haspopup="false"
                      aria-owns=""
                      autoComplete="off"
                      id="optionalHearingTime0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      required={false}
                      role="combobox"
                      style={
                        Object {
                          "boxSizing": "content-box",
                          "width": "5px",
                        }
                      }
                      value=""
                    />
                    <div
                      style={
                        Object {
                          "height": 0,
                          "left": 0,
                          "overflow": "scroll",
                          "position": "absolute",
                          "top": 0,
                          "visibility": "hidden",
                          "whiteSpace": "pre",
                        }
                      }
                    />
                  </div>
                </Component>
              </span>
              <span
                className="Select-arrow-zone"
                onMouseDown={[Function]}
              >
                <span
                  className="Select-arrow"
                  onMouseDown={[Function]}
                />
              </span>
            </div>
          </div>
        </Select>
      </div>
    </div>
  </SearchableDropdown>
</HearingTime>
`;

exports[`HearingTime Matches snapshot with default props when passed in 1`] = `
<HearingTime
  componentIndex={0}
>
  <span
    data-css-1042gbc=""
  >
    <RadioField
      className={
        Array [
          "usa-fieldset-inputs",
        ]
      }
      label="Time"
      name="hearingTime0"
      onChange={[Function]}
      options={
        Array [
          Object {
            "disabled": undefined,
            "displayText": "8:30 am",
            "value": "08:30",
          },
          Object {
            "disabled": undefined,
            "displayText": "12:30 pm",
            "value": "12:30",
          },
          Object {
            "disabled": undefined,
            "displayText": "Other",
            "value": "other",
          },
        ]
      }
      required={false}
      strongLabel={true}
      value="other"
    >
      <fieldset
        className="usa-fieldset-inputs cf-form-radio "
      >
        <legend
          className=""
        >
          <strong>
            <span>
              Time
               
            </span>
          </strong>
        </legend>
        <div
          className="cf-form-radio-options"
        >
          <div
            className="cf-form-radio-option"
            key="hearingTime0-08:30-0"
          >
            <input
              checked={false}
              disabled={false}
              id="hearingTime0_08:30"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="08:30"
            />
            <label
              className=""
              htmlFor="hearingTime0_08:30"
            >
              8:30 am
            </label>
          </div>
          <div
            className="cf-form-radio-option"
            key="hearingTime0-12:30-1"
          >
            <input
              checked={false}
              disabled={false}
              id="hearingTime0_12:30"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="12:30"
            />
            <label
              className=""
              htmlFor="hearingTime0_12:30"
            >
              12:30 pm
            </label>
          </div>
          <div
            className="cf-form-radio-option"
            key="hearingTime0-other-2"
          >
            <input
              checked={true}
              disabled={false}
              id="hearingTime0_other"
              name="hearingTime0"
              onChange={[Function]}
              type="radio"
              value="other"
            />
            <label
              className=""
              htmlFor="hearingTime0_other"
            >
              Other
            </label>
          </div>
        </div>
      </fieldset>
    </RadioField>
  </span>
  <SearchableDropdown
    hideLabel={true}
    loading={false}
    name="optionalHearingTime0"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "8:15 am",
          "value": "08:15",
        },
        Object {
          "label": "8:30 am",
          "value": "08:30",
        },
        Object {
          "label": "8:45 am",
          "value": "08:45",
        },
        Object {
          "label": "9:00 am",
          "value": "09:00",
        },
        Object {
          "label": "9:15 am",
          "value": "09:15",
        },
        Object {
          "label": "9:30 am",
          "value": "09:30",
        },
        Object {
          "label": "9:45 am",
          "value": "09:45",
        },
        Object {
          "label": "10:00 am",
          "value": "10:00",
        },
        Object {
          "label": "10:15 am",
          "value": "10:15",
        },
        Object {
          "label": "10:30 am",
          "value": "10:30",
        },
        Object {
          "label": "10:45 am",
          "value": "10:45",
        },
        Object {
          "label": "11:00 am",
          "value": "11:00",
        },
        Object {
          "label": "11:15 am",
          "value": "11:15",
        },
        Object {
          "label": "11:30 am",
          "value": "11:30",
        },
        Object {
          "label": "11:45 am",
          "value": "11:45",
        },
        Object {
          "label": "12:00 pm",
          "value": "12:00",
        },
        Object {
          "label": "12:15 pm",
          "value": "12:15",
        },
        Object {
          "label": "12:30 pm",
          "value": "12:30",
        },
        Object {
          "label": "12:45 pm",
          "value": "12:45",
        },
        Object {
          "label": "1:00 pm",
          "value": "13:00",
        },
        Object {
          "label": "1:15 pm",
          "value": "13:15",
        },
        Object {
          "label": "1:30 pm",
          "value": "13:30",
        },
        Object {
          "label": "1:45 pm",
          "value": "13:45",
        },
        Object {
          "label": "2:00 pm",
          "value": "14:00",
        },
        Object {
          "label": "2:15 pm",
          "value": "14:15",
        },
        Object {
          "label": "2:30 pm",
          "value": "14:30",
        },
        Object {
          "label": "2:45 pm",
          "value": "14:45",
        },
        Object {
          "label": "3:00 pm",
          "value": "15:00",
        },
        Object {
          "label": "3:15 pm",
          "value": "15:15",
        },
        Object {
          "label": "3:30 pm",
          "value": "15:30",
        },
        Object {
          "label": "3:45 pm",
          "value": "15:45",
        },
        Object {
          "label": "4:00 pm",
          "value": "16:00",
        },
        Object {
          "label": "4:15 pm",
          "value": "16:15",
        },
        Object {
          "label": "4:30 pm",
          "value": "16:30",
        },
        Object {
          "label": "4:45 pm",
          "value": "16:45",
        },
      ]
    }
    placeholder="Select a time"
  >
    <div
      className="cf-form-dropdown dropdown-optionalHearingTime0"
    >
      <label
        className="question-label usa-sr-only"
        htmlFor="optionalHearingTime0"
      >
        <span>
          optionalHearingTime0
        </span>
      </label>
      <div
        className=""
      >
        <Select
          addLabelText="Add \\"{label}\\"?"
          arrowRenderer={[Function]}
          autosize={true}
          backspaceRemoves={true}
          backspaceToRemoveMessage="Press backspace to remove {label}"
          cache={false}
          clearAllText="Clear all"
          clearRenderer={[Function]}
          clearValueText="Clear value"
          clearable={false}
          deleteRemoves={true}
          delimiter=","
          disabled={false}
          escapeClearsValue={true}
          filterOptions={[Function]}
          ignoreAccents={true}
          ignoreCase={true}
          inputProps={
            Object {
              "autoComplete": "off",
              "id": "optionalHearingTime0",
            }
          }
          isLoading={false}
          joinValues={false}
          labelKey="label"
          matchPos="any"
          matchProp="any"
          menuBuffer={0}
          menuRenderer={[Function]}
          multi={false}
          noResultsText="Not an option"
          onBlurResetsInput={false}
          onChange={[Function]}
          onCloseResetsInput={true}
          optionComponent={[Function]}
          options={
            Array [
              Object {
                "label": "8:15 am",
                "value": "08:15",
              },
              Object {
                "label": "8:30 am",
                "value": "08:30",
              },
              Object {
                "label": "8:45 am",
                "value": "08:45",
              },
              Object {
                "label": "9:00 am",
                "value": "09:00",
              },
              Object {
                "label": "9:15 am",
                "value": "09:15",
              },
              Object {
                "label": "9:30 am",
                "value": "09:30",
              },
              Object {
                "label": "9:45 am",
                "value": "09:45",
              },
              Object {
                "label": "10:00 am",
                "value": "10:00",
              },
              Object {
                "label": "10:15 am",
                "value": "10:15",
              },
              Object {
                "label": "10:30 am",
                "value": "10:30",
              },
              Object {
                "label": "10:45 am",
                "value": "10:45",
              },
              Object {
                "label": "11:00 am",
                "value": "11:00",
              },
              Object {
                "label": "11:15 am",
                "value": "11:15",
              },
              Object {
                "label": "11:30 am",
                "value": "11:30",
              },
              Object {
                "label": "11:45 am",
                "value": "11:45",
              },
              Object {
                "label": "12:00 pm",
                "value": "12:00",
              },
              Object {
                "label": "12:15 pm",
                "value": "12:15",
              },
              Object {
                "label": "12:30 pm",
                "value": "12:30",
              },
              Object {
                "label": "12:45 pm",
                "value": "12:45",
              },
              Object {
                "label": "1:00 pm",
                "value": "13:00",
              },
              Object {
                "label": "1:15 pm",
                "value": "13:15",
              },
              Object {
                "label": "1:30 pm",
                "value": "13:30",
              },
              Object {
                "label": "1:45 pm",
                "value": "13:45",
              },
              Object {
                "label": "2:00 pm",
                "value": "14:00",
              },
              Object {
                "label": "2:15 pm",
                "value": "14:15",
              },
              Object {
                "label": "2:30 pm",
                "value": "14:30",
              },
              Object {
                "label": "2:45 pm",
                "value": "14:45",
              },
              Object {
                "label": "3:00 pm",
                "value": "15:00",
              },
              Object {
                "label": "3:15 pm",
                "value": "15:15",
              },
              Object {
                "label": "3:30 pm",
                "value": "15:30",
              },
              Object {
                "label": "3:45 pm",
                "value": "15:45",
              },
              Object {
                "label": "4:00 pm",
                "value": "16:00",
              },
              Object {
                "label": "4:15 pm",
                "value": "16:15",
              },
              Object {
                "label": "4:30 pm",
                "value": "16:30",
              },
              Object {
                "label": "4:45 pm",
                "value": "16:45",
              },
            ]
          }
          pageSize={5}
          placeholder="Select a time"
          required={false}
          scrollMenuIntoView={true}
          searchable={true}
          shouldKeyDownEventCreateNewOption={[Function]}
          simpleValue={false}
          tabSelectsValue={true}
          valueComponent={[Function]}
          valueKey="value"
        >
          <div
            className="Select Select--single is-searchable"
          >
            <div
              className="Select-control"
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              <span
                className="Select-multi-value-wrapper"
                id="react-select-2--value"
              >
                <div
                  className="Select-placeholder"
                >
                  Select a time
                </div>
                <Component
                  aria-activedescendant="react-select-2--value"
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-owns=""
                  autoComplete="off"
                  className="Select-input"
                  id="optionalHearingTime0"
                  minWidth="5"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  value=""
                >
                  <div
                    className="Select-input"
                    style={
                      Object {
                        "display": "inline-block",
                      }
                    }
                  >
                    <style
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "input#undefined::-ms-clear {display: none;}",
                        }
                      }
                    />
                    <input
                      aria-activedescendant="react-select-2--value"
                      aria-expanded="false"
                      aria-haspopup="false"
                      aria-owns=""
                      autoComplete="off"
                      id="optionalHearingTime0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      required={false}
                      role="combobox"
                      style={
                        Object {
                          "boxSizing": "content-box",
                          "width": "5px",
                        }
                      }
                      value=""
                    />
                    <div
                      style={
                        Object {
                          "height": 0,
                          "left": 0,
                          "overflow": "scroll",
                          "position": "absolute",
                          "top": 0,
                          "visibility": "hidden",
                          "whiteSpace": "pre",
                        }
                      }
                    />
                  </div>
                </Component>
              </span>
              <span
                className="Select-arrow-zone"
                onMouseDown={[Function]}
              >
                <span
                  className="Select-arrow"
                  onMouseDown={[Function]}
                />
              </span>
            </div>
          </div>
        </Select>
      </div>
    </div>
  </SearchableDropdown>
</HearingTime>
`;
