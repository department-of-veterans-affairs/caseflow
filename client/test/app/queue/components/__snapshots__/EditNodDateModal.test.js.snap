// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditNodDateModal renders correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <section
        aria-describedby="modal_id-desc"
        aria-labelledby="modal_id-title"
        aria-modal="true"
        class="cf-modal active "
        id="modal_id"
        role="alertdialog"
      >
        <div
          class="cf-modal-body"
          id=""
        >
          <button
            class="cf-modal-close"
            id="Edit-NOD-Date-button-id-close"
            type="button"
          >
            <span
              class="usa-sr-only"
            >
              Close
            </span>
            <svg
              class="cf-icon-close"
              height="55"
              viewBox="0 0 55 55"
              width="55"
              xmlns="http://www.w3.org/2000/svg"
            >
              <title>
                close
              </title>
              <path
                d="M52.6 46.9l-6 6c-.8.8-1.9 1.2-3 1.2s-2.2-.4-3-1.2l-13-13-13 13c-.8.8-1.9 1.2-3 1.2s-2.2-.4-3-1.2l-6-6c-.8-.8-1.2-1.9-1.2-3s.4-2.2 1.2-3l13-13-13-13c-.8-.8-1.2-1.9-1.2-3s.4-2.2 1.2-3l6-6c.8-.8 1.9-1.2 3-1.2s2.2.4 3 1.2l13 13 13-13c.8-.8 1.9-1.2 3-1.2s2.2.4 3 1.2l6 6c.8.8 1.2 1.9 1.2 3s-.4 2.2-1.2 3l-13 13 13 13c.8.8 1.2 1.9 1.2 3s-.4 2.2-1.2 3z"
              />
            </svg>
          </button>
          <div
            style="display: flex;"
          >
            <div
              data-css-1gs0ko2=""
            >
              <h1
                id="modal_id-title"
              >
                Edit NOD Date
              </h1>
              <div
                data-css-o98ubo=""
              >
                <div>
                  <p>
                    <strong>
                      Editing NOD date affects the case timeline and may change when the case is assigned for hearing.
                    </strong>
                  </p>
                </div>
                <div
                  class="cf-form-textinput   "
                >
                  <label
                    for="NOD Date"
                  >
                    <strong>
                      <span>
                        NOD Date
                      </span>
                    </strong>
                  </label>
                  <input
                    class="cf-form-textinput"
                    id="NOD Date"
                    max="9999-12-31"
                    name="NOD Date"
                    placeholder="mm/dd/yyyy"
                    type="date"
                    value="2020-10-31"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="cf-modal-divider"
          />
          <div
            class="cf-modal-controls"
          >
            <span>
              <button
                class="cf-modal-link cf-btn-link cf-push-left usa-button"
                id="Edit-NOD-Date-button-id-0"
                type="button"
              >
                Cancel
              </button>
            </span>
            <span>
              <button
                class="usa-button usa-button-primary cf-push-right usa-button"
                id="Edit-NOD-Date-button-id-1"
                type="button"
              >
                Submit
              </button>
            </span>
          </div>
        </div>
      </section>
    </div>
  </body>,
  "container": <div>
    <section
      aria-describedby="modal_id-desc"
      aria-labelledby="modal_id-title"
      aria-modal="true"
      class="cf-modal active "
      id="modal_id"
      role="alertdialog"
    >
      <div
        class="cf-modal-body"
        id=""
      >
        <button
          class="cf-modal-close"
          id="Edit-NOD-Date-button-id-close"
          type="button"
        >
          <span
            class="usa-sr-only"
          >
            Close
          </span>
          <svg
            class="cf-icon-close"
            height="55"
            viewBox="0 0 55 55"
            width="55"
            xmlns="http://www.w3.org/2000/svg"
          >
            <title>
              close
            </title>
            <path
              d="M52.6 46.9l-6 6c-.8.8-1.9 1.2-3 1.2s-2.2-.4-3-1.2l-13-13-13 13c-.8.8-1.9 1.2-3 1.2s-2.2-.4-3-1.2l-6-6c-.8-.8-1.2-1.9-1.2-3s.4-2.2 1.2-3l13-13-13-13c-.8-.8-1.2-1.9-1.2-3s.4-2.2 1.2-3l6-6c.8-.8 1.9-1.2 3-1.2s2.2.4 3 1.2l13 13 13-13c.8-.8 1.9-1.2 3-1.2s2.2.4 3 1.2l6 6c.8.8 1.2 1.9 1.2 3s-.4 2.2-1.2 3l-13 13 13 13c.8.8 1.2 1.9 1.2 3s-.4 2.2-1.2 3z"
            />
          </svg>
        </button>
        <div
          style="display: flex;"
        >
          <div
            data-css-1gs0ko2=""
          >
            <h1
              id="modal_id-title"
            >
              Edit NOD Date
            </h1>
            <div
              data-css-o98ubo=""
            >
              <div>
                <p>
                  <strong>
                    Editing NOD date affects the case timeline and may change when the case is assigned for hearing.
                  </strong>
                </p>
              </div>
              <div
                class="cf-form-textinput   "
              >
                <label
                  for="NOD Date"
                >
                  <strong>
                    <span>
                      NOD Date
                    </span>
                  </strong>
                </label>
                <input
                  class="cf-form-textinput"
                  id="NOD Date"
                  max="9999-12-31"
                  name="NOD Date"
                  placeholder="mm/dd/yyyy"
                  type="date"
                  value="2020-10-31"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class="cf-modal-divider"
        />
        <div
          class="cf-modal-controls"
        >
          <span>
            <button
              class="cf-modal-link cf-btn-link cf-push-left usa-button"
              id="Edit-NOD-Date-button-id-0"
              type="button"
            >
              Cancel
            </button>
          </span>
          <span>
            <button
              class="usa-button usa-button-primary cf-push-right usa-button"
              id="Edit-NOD-Date-button-id-1"
              type="button"
            >
              Submit
            </button>
          </span>
        </div>
      </div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`EditNodDateModal should give error when future date is given 1`] = `
<EditNodDateModal
  errorMessage={null}
  nodDate="2020-10-31"
  onCancel={[MockFunction]}
  onSubmit={[MockFunction]}
>
  <Modal
    buttons={
      Array [
        Object {
          "classNames": Array [
            "cf-modal-link",
            "cf-btn-link",
          ],
          "name": "Cancel",
          "onClick": [MockFunction],
        },
        Object {
          "classNames": Array [
            "usa-button",
            "usa-button-primary",
          ],
          "disabled": false,
          "name": "Submit",
          "onClick": [Function],
        },
      ]
    }
    className=""
    closeHandler={[MockFunction]}
    onCancel={[MockFunction]}
    onSubmit={[MockFunction]}
    scrollLock={true}
    title="Edit NOD Date"
  >
    <section
      aria-describedby="modal_id-desc"
      aria-labelledby="modal_id-title"
      aria-modal="true"
      className="cf-modal active "
      id="modal_id"
      role="alertdialog"
    >
      <TouchProvider>
        <ScrollLock
          accountForScrollbars={true}
        >
          <Sheet
            styles="body {
      box-sizing: border-box !important;
      overflow: hidden !important;
      position: relative !important;
      
      padding-right: 1024px !important;
    }"
          />
        </ScrollLock>
      </TouchProvider>
      <div
        className="cf-modal-body"
        id=""
      >
        <button
          className="cf-modal-close"
          id="Edit-NOD-Date-button-id-close"
          onClick={[MockFunction]}
          type="button"
        >
          <span
            className="usa-sr-only"
          >
            Close
          </span>
          <svg
            className="cf-icon-close"
            height="55"
            viewBox="0 0 55 55"
            width="55"
            xmlns="http://www.w3.org/2000/svg"
          >
            <title>
              close
            </title>
            <path
              d="M52.6 46.9l-6 6c-.8.8-1.9 1.2-3 1.2s-2.2-.4-3-1.2l-13-13-13 13c-.8.8-1.9 1.2-3 1.2s-2.2-.4-3-1.2l-6-6c-.8-.8-1.2-1.9-1.2-3s.4-2.2 1.2-3l13-13-13-13c-.8-.8-1.2-1.9-1.2-3s.4-2.2 1.2-3l6-6c.8-.8 1.9-1.2 3-1.2s2.2.4 3 1.2l13 13 13-13c.8-.8 1.9-1.2 3-1.2s2.2.4 3 1.2l6 6c.8.8 1.2 1.9 1.2 3s-.4 2.2-1.2 3l-13 13 13 13c.8.8 1.2 1.9 1.2 3s-.4 2.2-1.2 3z"
            />
          </svg>
        </button>
        <div
          style={
            Object {
              "display": "flex",
            }
          }
        >
          <div
            data-css-1gs0ko2=""
          >
            <h1
              id="modal_id-title"
            >
              Edit NOD Date
            </h1>
            <div
              data-css-o98ubo=""
            >
              <div>
                <ReactMarkdown
                  source="**Editing NOD date affects the case timeline and may change when the case is assigned for hearing.**"
                  transformLinkUri={[Function]}
                >
                  <Root
                    key="root-1-1-0"
                    node={
                      Object {
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "children": Array [
                                  Object {
                                    "position": Object {
                                      "end": Object {
                                        "column": 99,
                                        "line": 1,
                                        "offset": 98,
                                      },
                                      "start": Object {
                                        "column": 3,
                                        "line": 1,
                                        "offset": 2,
                                      },
                                    },
                                    "type": "text",
                                    "value": "Editing NOD date affects the case timeline and may change when the case is assigned for hearing.",
                                  },
                                ],
                                "position": Object {
                                  "end": Object {
                                    "column": 101,
                                    "line": 1,
                                    "offset": 100,
                                  },
                                  "start": Object {
                                    "column": 1,
                                    "line": 1,
                                    "offset": 0,
                                  },
                                },
                                "type": "strong",
                              },
                            ],
                            "position": Object {
                              "end": Object {
                                "column": 101,
                                "line": 1,
                                "offset": 100,
                              },
                              "start": Object {
                                "column": 1,
                                "line": 1,
                                "offset": 0,
                              },
                            },
                            "type": "paragraph",
                          },
                        ],
                        "position": Object {
                          "end": Object {
                            "column": 101,
                            "line": 1,
                            "offset": 100,
                          },
                          "start": Object {
                            "column": 1,
                            "line": 1,
                            "offset": 0,
                          },
                        },
                        "type": "root",
                      }
                    }
                  >
                    <p
                      key="paragraph-1-1-0"
                    >
                      <strong
                        key="strong-1-1-0"
                      >
                        <TextRenderer
                          key="text-1-3-0"
                          node={
                            Object {
                              "position": Object {
                                "end": Object {
                                  "column": 99,
                                  "line": 1,
                                  "offset": 98,
                                },
                                "start": Object {
                                  "column": 3,
                                  "line": 1,
                                  "offset": 2,
                                },
                              },
                              "type": "text",
                              "value": "Editing NOD date affects the case timeline and may change when the case is assigned for hearing.",
                            }
                          }
                          nodeKey="text-1-3-0"
                          value="Editing NOD date affects the case timeline and may change when the case is assigned for hearing."
                        >
                          Editing NOD date affects the case timeline and may change when the case is assigned for hearing.
                        </TextRenderer>
                      </strong>
                    </p>
                  </Root>
                </ReactMarkdown>
              </div>
              <DateSelector
                errorMessage={null}
                name="NOD Date"
                onChange={[Function]}
                strongLabel={true}
                type="date"
                value="2020-10-31"
              >
                <TextField
                  className={
                    Array [
                      "cf-form-textinput",
                    ]
                  }
                  errorMessage={null}
                  max="9999-12-31"
                  name="NOD Date"
                  onChange={[Function]}
                  optional={false}
                  placeholder="mm/dd/yyyy"
                  required={false}
                  strongLabel={true}
                  type="date"
                  useAriaLabel={false}
                  value="2020-10-31"
                >
                  <div
                    className="cf-form-textinput   "
                  >
                    <label
                      htmlFor="NOD Date"
                    >
                      <strong>
                        <FormLabel
                          name="NOD Date"
                          optional={false}
                          required={false}
                        >
                          <span>
                            NOD Date
                          </span>
                        </FormLabel>
                      </strong>
                    </label>
                    <input
                      className={
                        Array [
                          "cf-form-textinput",
                        ]
                      }
                      id="NOD Date"
                      max="9999-12-31"
                      name="NOD Date"
                      onChange={[Function]}
                      placeholder="mm/dd/yyyy"
                      type="date"
                      value="2020-10-31"
                    />
                  </div>
                </TextField>
              </DateSelector>
            </div>
          </div>
        </div>
        <div
          className="cf-modal-divider"
        />
        <div
          className="cf-modal-controls"
        >
          <Button
            classNames={
              Array [
                "cf-modal-link",
                "cf-btn-link",
                "cf-push-left",
              ]
            }
            id="Edit-NOD-Date-button-id-0"
            key="0"
            linkStyling={false}
            loading={false}
            name="Cancel"
            onClick={[MockFunction]}
            type="button"
            willNeverBeLoading={false}
          >
            <span>
              <button
                className="cf-modal-link cf-btn-link cf-push-left usa-button"
                id="Edit-NOD-Date-button-id-0"
                onClick={[MockFunction]}
                type="button"
              >
                Cancel
              </button>
            </span>
          </Button>
          <Button
            classNames={
              Array [
                "usa-button",
                "usa-button-primary",
                "cf-push-right",
              ]
            }
            disabled={false}
            id="Edit-NOD-Date-button-id-1"
            key="1"
            linkStyling={false}
            loading={false}
            name="Submit"
            onClick={[Function]}
            type="button"
            willNeverBeLoading={false}
          >
            <span>
              <button
                className="usa-button usa-button-primary cf-push-right usa-button"
                disabled={false}
                id="Edit-NOD-Date-button-id-1"
                onClick={[Function]}
                type="button"
              >
                Submit
              </button>
            </span>
          </Button>
        </div>
      </div>
    </section>
  </Modal>
</EditNodDateModal>
`;

exports[`EditNodDateModal should give error when future date is given 2`] = `
<EditNodDateModal
  errorMessage="The new NOD date cannot be after today's date"
  nodDate="2020-10-31"
  onCancel={[MockFunction]}
  onSubmit={[MockFunction]}
>
  <Modal
    buttons={
      Array [
        Object {
          "classNames": Array [
            "cf-modal-link",
            "cf-btn-link",
          ],
          "name": "Cancel",
          "onClick": [MockFunction],
        },
        Object {
          "classNames": Array [
            "usa-button",
            "usa-button-primary",
          ],
          "disabled": false,
          "name": "Submit",
          "onClick": [Function],
        },
      ]
    }
    className=""
    closeHandler={[MockFunction]}
    onCancel={[MockFunction]}
    onSubmit={[MockFunction]}
    scrollLock={true}
    title="Edit NOD Date"
  >
    <section
      aria-describedby="modal_id-desc"
      aria-labelledby="modal_id-title"
      aria-modal="true"
      className="cf-modal active "
      id="modal_id"
      role="alertdialog"
    >
      <TouchProvider>
        <ScrollLock
          accountForScrollbars={true}
        >
          <Sheet
            styles="body {
      box-sizing: border-box !important;
      overflow: hidden !important;
      position: relative !important;
      
      padding-right: 1024px !important;
    }"
          />
        </ScrollLock>
      </TouchProvider>
      <div
        className="cf-modal-body"
        id=""
      >
        <button
          className="cf-modal-close"
          id="Edit-NOD-Date-button-id-close"
          onClick={[MockFunction]}
          type="button"
        >
          <span
            className="usa-sr-only"
          >
            Close
          </span>
          <svg
            className="cf-icon-close"
            height="55"
            viewBox="0 0 55 55"
            width="55"
            xmlns="http://www.w3.org/2000/svg"
          >
            <title>
              close
            </title>
            <path
              d="M52.6 46.9l-6 6c-.8.8-1.9 1.2-3 1.2s-2.2-.4-3-1.2l-13-13-13 13c-.8.8-1.9 1.2-3 1.2s-2.2-.4-3-1.2l-6-6c-.8-.8-1.2-1.9-1.2-3s.4-2.2 1.2-3l13-13-13-13c-.8-.8-1.2-1.9-1.2-3s.4-2.2 1.2-3l6-6c.8-.8 1.9-1.2 3-1.2s2.2.4 3 1.2l13 13 13-13c.8-.8 1.9-1.2 3-1.2s2.2.4 3 1.2l6 6c.8.8 1.2 1.9 1.2 3s-.4 2.2-1.2 3l-13 13 13 13c.8.8 1.2 1.9 1.2 3s-.4 2.2-1.2 3z"
            />
          </svg>
        </button>
        <div
          style={
            Object {
              "display": "flex",
            }
          }
        >
          <div
            data-css-1gs0ko2=""
          >
            <h1
              id="modal_id-title"
            >
              Edit NOD Date
            </h1>
            <div
              data-css-o98ubo=""
            >
              <div>
                <ReactMarkdown
                  source="**Editing NOD date affects the case timeline and may change when the case is assigned for hearing.**"
                  transformLinkUri={[Function]}
                >
                  <Root
                    key="root-1-1-0"
                    node={
                      Object {
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "children": Array [
                                  Object {
                                    "position": Object {
                                      "end": Object {
                                        "column": 99,
                                        "line": 1,
                                        "offset": 98,
                                      },
                                      "start": Object {
                                        "column": 3,
                                        "line": 1,
                                        "offset": 2,
                                      },
                                    },
                                    "type": "text",
                                    "value": "Editing NOD date affects the case timeline and may change when the case is assigned for hearing.",
                                  },
                                ],
                                "position": Object {
                                  "end": Object {
                                    "column": 101,
                                    "line": 1,
                                    "offset": 100,
                                  },
                                  "start": Object {
                                    "column": 1,
                                    "line": 1,
                                    "offset": 0,
                                  },
                                },
                                "type": "strong",
                              },
                            ],
                            "position": Object {
                              "end": Object {
                                "column": 101,
                                "line": 1,
                                "offset": 100,
                              },
                              "start": Object {
                                "column": 1,
                                "line": 1,
                                "offset": 0,
                              },
                            },
                            "type": "paragraph",
                          },
                        ],
                        "position": Object {
                          "end": Object {
                            "column": 101,
                            "line": 1,
                            "offset": 100,
                          },
                          "start": Object {
                            "column": 1,
                            "line": 1,
                            "offset": 0,
                          },
                        },
                        "type": "root",
                      }
                    }
                  >
                    <p
                      key="paragraph-1-1-0"
                    >
                      <strong
                        key="strong-1-1-0"
                      >
                        <TextRenderer
                          key="text-1-3-0"
                          node={
                            Object {
                              "position": Object {
                                "end": Object {
                                  "column": 99,
                                  "line": 1,
                                  "offset": 98,
                                },
                                "start": Object {
                                  "column": 3,
                                  "line": 1,
                                  "offset": 2,
                                },
                              },
                              "type": "text",
                              "value": "Editing NOD date affects the case timeline and may change when the case is assigned for hearing.",
                            }
                          }
                          nodeKey="text-1-3-0"
                          value="Editing NOD date affects the case timeline and may change when the case is assigned for hearing."
                        >
                          Editing NOD date affects the case timeline and may change when the case is assigned for hearing.
                        </TextRenderer>
                      </strong>
                    </p>
                  </Root>
                </ReactMarkdown>
              </div>
              <DateSelector
                errorMessage={null}
                name="NOD Date"
                onChange={[Function]}
                strongLabel={true}
                type="date"
                value="2020-10-31"
              >
                <TextField
                  className={
                    Array [
                      "cf-form-textinput",
                    ]
                  }
                  errorMessage={null}
                  max="9999-12-31"
                  name="NOD Date"
                  onChange={[Function]}
                  optional={false}
                  placeholder="mm/dd/yyyy"
                  required={false}
                  strongLabel={true}
                  type="date"
                  useAriaLabel={false}
                  value="2020-10-31"
                >
                  <div
                    className="cf-form-textinput   "
                  >
                    <label
                      htmlFor="NOD Date"
                    >
                      <strong>
                        <FormLabel
                          name="NOD Date"
                          optional={false}
                          required={false}
                        >
                          <span>
                            NOD Date
                          </span>
                        </FormLabel>
                      </strong>
                    </label>
                    <input
                      className={
                        Array [
                          "cf-form-textinput",
                        ]
                      }
                      id="NOD Date"
                      max="9999-12-31"
                      name="NOD Date"
                      onChange={[Function]}
                      placeholder="mm/dd/yyyy"
                      type="date"
                      value="2020-10-31"
                    />
                  </div>
                </TextField>
              </DateSelector>
            </div>
          </div>
        </div>
        <div
          className="cf-modal-divider"
        />
        <div
          className="cf-modal-controls"
        >
          <Button
            classNames={
              Array [
                "cf-modal-link",
                "cf-btn-link",
                "cf-push-left",
              ]
            }
            id="Edit-NOD-Date-button-id-0"
            key="0"
            linkStyling={false}
            loading={false}
            name="Cancel"
            onClick={[MockFunction]}
            type="button"
            willNeverBeLoading={false}
          >
            <span>
              <button
                className="cf-modal-link cf-btn-link cf-push-left usa-button"
                id="Edit-NOD-Date-button-id-0"
                onClick={[MockFunction]}
                type="button"
              >
                Cancel
              </button>
            </span>
          </Button>
          <Button
            classNames={
              Array [
                "usa-button",
                "usa-button-primary",
                "cf-push-right",
              ]
            }
            disabled={false}
            id="Edit-NOD-Date-button-id-1"
            key="1"
            linkStyling={false}
            loading={false}
            name="Submit"
            onClick={[Function]}
            type="button"
            willNeverBeLoading={false}
          >
            <span>
              <button
                className="usa-button usa-button-primary cf-push-right usa-button"
                disabled={false}
                id="Edit-NOD-Date-button-id-1"
                onClick={[Function]}
                type="button"
              >
                Submit
              </button>
            </span>
          </Button>
        </div>
      </div>
    </section>
  </Modal>
</EditNodDateModal>
`;
