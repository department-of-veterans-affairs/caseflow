// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddCavcRemandView renders correctly 1`] = `
<withRouter(Connect(AddCavcRemandView))
  appealId="2afefa82-5736-47c8-a977-0b4b8586f73e"
>
  <Connect(AddCavcRemandView)
    appealId="2afefa82-5736-47c8-a977-0b4b8586f73e"
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <AddCavcRemandView
      appealId="2afefa82-5736-47c8-a977-0b4b8586f73e"
      decisionIssues={
        Array [
          Object {
            "description": "This is a description of the decision",
            "id": 1,
          },
          Object {
            "description": "This is a description of another decision",
            "id": 2,
          },
        ]
      }
      featureToggles={
        Object {
          "dismissal_cavc_remand": undefined,
          "mdr_cavc_remand": undefined,
          "reversal_cavc_remand": undefined,
        }
      }
      highlightInvalid={false}
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        }
      }
      match={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      requestSave={[Function]}
      showErrorMessage={[Function]}
    >
      <withRouter(Connect(QueueFlowPage))
        appealId="2afefa82-5736-47c8-a977-0b4b8586f73e"
        continueBtnText="Submit"
        goToNextStep={[Function]}
        hideCancelButton={true}
        location={
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          }
        }
        requestSave={[Function]}
        showErrorMessage={[Function]}
        validateForm={[Function]}
      >
        <Connect(QueueFlowPage)
          appealId="2afefa82-5736-47c8-a977-0b4b8586f73e"
          continueBtnText="Submit"
          goToNextStep={[Function]}
          hideCancelButton={true}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          requestSave={[Function]}
          showErrorMessage={[Function]}
          validateForm={[Function]}
        >
          <QueueFlowPage
            appealId="2afefa82-5736-47c8-a977-0b4b8586f73e"
            checkoutStagedAppeal={[Function]}
            continueBtnText="Submit"
            disableNext={false}
            getNextStepUrl={null}
            getPrevStepUrl={null}
            goToNextStep={[Function]}
            goToPrevStep={null}
            hideCancelButton={true}
            hideModal={[Function]}
            highlightInvalidFormItems={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            requestSave={[Function]}
            resetDecisionOptions={[Function]}
            showErrorMessage={[Function]}
            showModal={[Function]}
            stagedAppeals={Array []}
            validateForm={[Function]}
          >
            <AppSegment
              filledBackground={true}
            >
              <section
                className="cf-app-segment cf-app-segment--alt"
              >
                <h1>
                  Add a Court remand
                </h1>
                <p>
                  Complete the details below to intake this Court remand for further processing
                </p>
                <TextField
                  className={
                    Array [
                      "cf-form-textinput",
                    ]
                  }
                  errorMessage={null}
                  label="What is the court docket number?"
                  name="docket-number"
                  onChange={[Function]}
                  optional={false}
                  required={false}
                  strongLabel={true}
                  type="text"
                  useAriaLabel={false}
                  value={null}
                >
                  <div
                    className="cf-form-textinput   "
                  >
                    <label
                      htmlFor="docket-number"
                    >
                      <strong>
                        <FormLabel
                          label="What is the court docket number?"
                          name="docket-number"
                          optional={false}
                          required={false}
                        >
                          <span>
                            What is the court docket number?
                          </span>
                        </FormLabel>
                      </strong>
                    </label>
                    <input
                      className={
                        Array [
                          "cf-form-textinput",
                        ]
                      }
                      id="docket-number"
                      name="docket-number"
                      onBlur={[Function]}
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </div>
                </TextField>
                <RadioField
                  className={
                    Array [
                      "usa-fieldset-inputs",
                    ]
                  }
                  label="Was the appellant represented by an attorney?"
                  name="attorney-options"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "displayText": "Yes",
                        "value": "1",
                      },
                      Object {
                        "displayText": "No",
                        "value": "2",
                      },
                    ]
                  }
                  required={false}
                  strongLabel={true}
                  value="1"
                >
                  <fieldset
                    className="usa-fieldset-inputs cf-form-radio-inline "
                  >
                    <legend
                      className=""
                    >
                      <strong>
                        <span>
                          Was the appellant represented by an attorney?
                           
                        </span>
                      </strong>
                    </legend>
                    <div
                      className="cf-form-radio-options"
                    >
                      <div
                        className="cf-form-radio-option"
                        key="attorney-options-1-0"
                      >
                        <input
                          checked={true}
                          disabled={false}
                          id="attorney-options_1"
                          name="attorney-options"
                          onChange={[Function]}
                          type="radio"
                          value="1"
                        />
                        <label
                          className=""
                          htmlFor="attorney-options_1"
                        >
                          Yes
                        </label>
                      </div>
                      <div
                        className="cf-form-radio-option"
                        key="attorney-options-2-1"
                      >
                        <input
                          checked={false}
                          disabled={false}
                          id="attorney-options_2"
                          name="attorney-options"
                          onChange={[Function]}
                          type="radio"
                          value="2"
                        />
                        <label
                          className=""
                          htmlFor="attorney-options_2"
                        >
                          No
                        </label>
                      </div>
                    </div>
                  </fieldset>
                </RadioField>
                <SearchableDropdown
                  clearOnSelect={false}
                  errorMessage={null}
                  label="What is the CAVC judge's name?"
                  loading={false}
                  name="judge-dropdown"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "Clerk",
                        "value": "Clerk",
                      },
                      Object {
                        "label": "Panel",
                        "value": "Panel",
                      },
                      Object {
                        "label": "Per curiam",
                        "value": "Per curiam",
                      },
                      Object {
                        "label": "Alan G. Lance, Sr.",
                        "value": "Alan G. Lance, Sr.",
                      },
                      Object {
                        "label": "Amanda L. Meredith",
                        "value": "Amanda L. Meredith",
                      },
                      Object {
                        "label": "Bruce E. Kasold",
                        "value": "Bruce E. Kasold",
                      },
                      Object {
                        "label": "Coral W. Pietsch",
                        "value": "Coral W. Pietsch",
                      },
                      Object {
                        "label": "Frank Q. Nebeker",
                        "value": "Frank Q. Nebeker",
                      },
                      Object {
                        "label": "Grant C. Jaquith",
                        "value": "Grant C. Jaquith",
                      },
                      Object {
                        "label": "Joseph L. Falvey, Jr.",
                        "value": "Joseph L. Falvey, Jr.",
                      },
                      Object {
                        "label": "Joseph L. Toth",
                        "value": "Joseph L. Toth",
                      },
                      Object {
                        "label": "Kenneth B. Kramer",
                        "value": "Kenneth B. Kramer",
                      },
                      Object {
                        "label": "Lawrence B. Hagel",
                        "value": "Lawrence B. Hagel",
                      },
                      Object {
                        "label": "Margaret Bartley",
                        "value": "Margaret Bartley",
                      },
                      Object {
                        "label": "Mary J. Schoelen",
                        "value": "Mary J. Schoelen",
                      },
                      Object {
                        "label": "Michael P. Allen",
                        "value": "Michael P. Allen",
                      },
                      Object {
                        "label": "Robert N. Davis",
                        "value": "Robert N. Davis",
                      },
                      Object {
                        "label": "Ronald M. Holdaway",
                        "value": "Ronald M. Holdaway",
                      },
                      Object {
                        "label": "Scott J. Laurer",
                        "value": "Scott J. Laurer",
                      },
                      Object {
                        "label": "William A. Moorman",
                        "value": "William A. Moorman",
                      },
                      Object {
                        "label": "William P. Greene, Jr.",
                        "value": "William P. Greene, Jr.",
                      },
                      Object {
                        "label": "William S. Greenberg",
                        "value": "William S. Greenberg",
                      },
                    ]
                  }
                  searchable={true}
                  strongLabel={true}
                  value={null}
                >
                  <div
                    className=""
                  >
                    <div
                      className="cf-form-dropdown dropdown-judge-dropdown"
                    >
                      <label
                        className="question-label"
                        htmlFor="judge-dropdown"
                        id="judge-dropdown-label"
                      >
                        <strong>
                          <FormLabel
                            label="What is the CAVC judge's name?"
                            name="What is the CAVC judge's name?"
                          >
                            <span>
                              What is the CAVC judge's name?
                            </span>
                          </FormLabel>
                        </strong>
                      </label>
                      <div
                        className="cf-select"
                      >
                        <StateManager
                          cache={false}
                          classNamePrefix="cf-select"
                          components={
                            Object {
                              "Input": [Function],
                              "MenuList": [Function],
                              "Option": [Function],
                            }
                          }
                          defaultInputValue=""
                          defaultMenuIsOpen={false}
                          defaultValue={null}
                          inputId="judge-dropdown"
                          isLoading={false}
                          isSearchable={true}
                          name="judge-dropdown"
                          noOptionsMessage={[Function]}
                          onBlurResetsInput={false}
                          onChange={[Function]}
                          onMenuClose={[Function]}
                          onMenuOpen={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Clerk",
                                "value": "Clerk",
                              },
                              Object {
                                "label": "Panel",
                                "value": "Panel",
                              },
                              Object {
                                "label": "Per curiam",
                                "value": "Per curiam",
                              },
                              Object {
                                "label": "Alan G. Lance, Sr.",
                                "value": "Alan G. Lance, Sr.",
                              },
                              Object {
                                "label": "Amanda L. Meredith",
                                "value": "Amanda L. Meredith",
                              },
                              Object {
                                "label": "Bruce E. Kasold",
                                "value": "Bruce E. Kasold",
                              },
                              Object {
                                "label": "Coral W. Pietsch",
                                "value": "Coral W. Pietsch",
                              },
                              Object {
                                "label": "Frank Q. Nebeker",
                                "value": "Frank Q. Nebeker",
                              },
                              Object {
                                "label": "Grant C. Jaquith",
                                "value": "Grant C. Jaquith",
                              },
                              Object {
                                "label": "Joseph L. Falvey, Jr.",
                                "value": "Joseph L. Falvey, Jr.",
                              },
                              Object {
                                "label": "Joseph L. Toth",
                                "value": "Joseph L. Toth",
                              },
                              Object {
                                "label": "Kenneth B. Kramer",
                                "value": "Kenneth B. Kramer",
                              },
                              Object {
                                "label": "Lawrence B. Hagel",
                                "value": "Lawrence B. Hagel",
                              },
                              Object {
                                "label": "Margaret Bartley",
                                "value": "Margaret Bartley",
                              },
                              Object {
                                "label": "Mary J. Schoelen",
                                "value": "Mary J. Schoelen",
                              },
                              Object {
                                "label": "Michael P. Allen",
                                "value": "Michael P. Allen",
                              },
                              Object {
                                "label": "Robert N. Davis",
                                "value": "Robert N. Davis",
                              },
                              Object {
                                "label": "Ronald M. Holdaway",
                                "value": "Ronald M. Holdaway",
                              },
                              Object {
                                "label": "Scott J. Laurer",
                                "value": "Scott J. Laurer",
                              },
                              Object {
                                "label": "William A. Moorman",
                                "value": "William A. Moorman",
                              },
                              Object {
                                "label": "William P. Greene, Jr.",
                                "value": "William P. Greene, Jr.",
                              },
                              Object {
                                "label": "William S. Greenberg",
                                "value": "William S. Greenberg",
                              },
                            ]
                          }
                          searchable={true}
                          shouldKeyDownEventCreateNewOption={[Function]}
                          styles={
                            Object {
                              "input": [Function],
                            }
                          }
                          value={null}
                        >
                          <Select
                            backspaceRemovesValue={true}
                            blurInputOnSelect={true}
                            cache={false}
                            captureMenuScroll={false}
                            classNamePrefix="cf-select"
                            closeMenuOnScroll={false}
                            closeMenuOnSelect={true}
                            components={
                              Object {
                                "Input": [Function],
                                "MenuList": [Function],
                                "Option": [Function],
                              }
                            }
                            controlShouldRenderValue={true}
                            escapeClearsValue={false}
                            filterOption={[Function]}
                            formatGroupLabel={[Function]}
                            getOptionLabel={[Function]}
                            getOptionValue={[Function]}
                            inputId="judge-dropdown"
                            inputValue=""
                            isDisabled={false}
                            isLoading={false}
                            isMulti={false}
                            isOptionDisabled={[Function]}
                            isRtl={false}
                            isSearchable={true}
                            loadingMessage={[Function]}
                            maxMenuHeight={300}
                            menuIsOpen={false}
                            menuPlacement="bottom"
                            menuPosition="absolute"
                            menuShouldBlockScroll={false}
                            menuShouldScrollIntoView={true}
                            minMenuHeight={140}
                            name="judge-dropdown"
                            noOptionsMessage={[Function]}
                            onBlurResetsInput={false}
                            onChange={[Function]}
                            onInputChange={[Function]}
                            onMenuClose={[Function]}
                            onMenuOpen={[Function]}
                            openMenuOnClick={true}
                            openMenuOnFocus={false}
                            options={
                              Array [
                                Object {
                                  "label": "Clerk",
                                  "value": "Clerk",
                                },
                                Object {
                                  "label": "Panel",
                                  "value": "Panel",
                                },
                                Object {
                                  "label": "Per curiam",
                                  "value": "Per curiam",
                                },
                                Object {
                                  "label": "Alan G. Lance, Sr.",
                                  "value": "Alan G. Lance, Sr.",
                                },
                                Object {
                                  "label": "Amanda L. Meredith",
                                  "value": "Amanda L. Meredith",
                                },
                                Object {
                                  "label": "Bruce E. Kasold",
                                  "value": "Bruce E. Kasold",
                                },
                                Object {
                                  "label": "Coral W. Pietsch",
                                  "value": "Coral W. Pietsch",
                                },
                                Object {
                                  "label": "Frank Q. Nebeker",
                                  "value": "Frank Q. Nebeker",
                                },
                                Object {
                                  "label": "Grant C. Jaquith",
                                  "value": "Grant C. Jaquith",
                                },
                                Object {
                                  "label": "Joseph L. Falvey, Jr.",
                                  "value": "Joseph L. Falvey, Jr.",
                                },
                                Object {
                                  "label": "Joseph L. Toth",
                                  "value": "Joseph L. Toth",
                                },
                                Object {
                                  "label": "Kenneth B. Kramer",
                                  "value": "Kenneth B. Kramer",
                                },
                                Object {
                                  "label": "Lawrence B. Hagel",
                                  "value": "Lawrence B. Hagel",
                                },
                                Object {
                                  "label": "Margaret Bartley",
                                  "value": "Margaret Bartley",
                                },
                                Object {
                                  "label": "Mary J. Schoelen",
                                  "value": "Mary J. Schoelen",
                                },
                                Object {
                                  "label": "Michael P. Allen",
                                  "value": "Michael P. Allen",
                                },
                                Object {
                                  "label": "Robert N. Davis",
                                  "value": "Robert N. Davis",
                                },
                                Object {
                                  "label": "Ronald M. Holdaway",
                                  "value": "Ronald M. Holdaway",
                                },
                                Object {
                                  "label": "Scott J. Laurer",
                                  "value": "Scott J. Laurer",
                                },
                                Object {
                                  "label": "William A. Moorman",
                                  "value": "William A. Moorman",
                                },
                                Object {
                                  "label": "William P. Greene, Jr.",
                                  "value": "William P. Greene, Jr.",
                                },
                                Object {
                                  "label": "William S. Greenberg",
                                  "value": "William S. Greenberg",
                                },
                              ]
                            }
                            pageSize={5}
                            placeholder="Select..."
                            screenReaderStatus={[Function]}
                            searchable={true}
                            shouldKeyDownEventCreateNewOption={[Function]}
                            styles={
                              Object {
                                "input": [Function],
                              }
                            }
                            tabIndex="0"
                            tabSelectsValue={true}
                            value={null}
                          >
                            <SelectContainer
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              innerProps={
                                Object {
                                  "id": undefined,
                                  "onKeyDown": [Function],
                                }
                              }
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={
                                Array [
                                  Object {
                                    "label": "Clerk",
                                    "value": "Clerk",
                                  },
                                  Object {
                                    "label": "Panel",
                                    "value": "Panel",
                                  },
                                  Object {
                                    "label": "Per curiam",
                                    "value": "Per curiam",
                                  },
                                  Object {
                                    "label": "Alan G. Lance, Sr.",
                                    "value": "Alan G. Lance, Sr.",
                                  },
                                  Object {
                                    "label": "Amanda L. Meredith",
                                    "value": "Amanda L. Meredith",
                                  },
                                  Object {
                                    "label": "Bruce E. Kasold",
                                    "value": "Bruce E. Kasold",
                                  },
                                  Object {
                                    "label": "Coral W. Pietsch",
                                    "value": "Coral W. Pietsch",
                                  },
                                  Object {
                                    "label": "Frank Q. Nebeker",
                                    "value": "Frank Q. Nebeker",
                                  },
                                  Object {
                                    "label": "Grant C. Jaquith",
                                    "value": "Grant C. Jaquith",
                                  },
                                  Object {
                                    "label": "Joseph L. Falvey, Jr.",
                                    "value": "Joseph L. Falvey, Jr.",
                                  },
                                  Object {
                                    "label": "Joseph L. Toth",
                                    "value": "Joseph L. Toth",
                                  },
                                  Object {
                                    "label": "Kenneth B. Kramer",
                                    "value": "Kenneth B. Kramer",
                                  },
                                  Object {
                                    "label": "Lawrence B. Hagel",
                                    "value": "Lawrence B. Hagel",
                                  },
                                  Object {
                                    "label": "Margaret Bartley",
                                    "value": "Margaret Bartley",
                                  },
                                  Object {
                                    "label": "Mary J. Schoelen",
                                    "value": "Mary J. Schoelen",
                                  },
                                  Object {
                                    "label": "Michael P. Allen",
                                    "value": "Michael P. Allen",
                                  },
                                  Object {
                                    "label": "Robert N. Davis",
                                    "value": "Robert N. Davis",
                                  },
                                  Object {
                                    "label": "Ronald M. Holdaway",
                                    "value": "Ronald M. Holdaway",
                                  },
                                  Object {
                                    "label": "Scott J. Laurer",
                                    "value": "Scott J. Laurer",
                                  },
                                  Object {
                                    "label": "William A. Moorman",
                                    "value": "William A. Moorman",
                                  },
                                  Object {
                                    "label": "William P. Greene, Jr.",
                                    "value": "William P. Greene, Jr.",
                                  },
                                  Object {
                                    "label": "William S. Greenberg",
                                    "value": "William S. Greenberg",
                                  },
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "cache": false,
                                  "captureMenuScroll": false,
                                  "classNamePrefix": "cf-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "Input": [Function],
                                    "MenuList": [Function],
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "defaultOptions": undefined,
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputId": "judge-dropdown",
                                  "inputValue": "",
                                  "isClearable": undefined,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadOptions": undefined,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "name": "judge-dropdown",
                                  "noOptionsMessage": [Function],
                                  "onBlurResetsInput": false,
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "label": "Clerk",
                                      "value": "Clerk",
                                    },
                                    Object {
                                      "label": "Panel",
                                      "value": "Panel",
                                    },
                                    Object {
                                      "label": "Per curiam",
                                      "value": "Per curiam",
                                    },
                                    Object {
                                      "label": "Alan G. Lance, Sr.",
                                      "value": "Alan G. Lance, Sr.",
                                    },
                                    Object {
                                      "label": "Amanda L. Meredith",
                                      "value": "Amanda L. Meredith",
                                    },
                                    Object {
                                      "label": "Bruce E. Kasold",
                                      "value": "Bruce E. Kasold",
                                    },
                                    Object {
                                      "label": "Coral W. Pietsch",
                                      "value": "Coral W. Pietsch",
                                    },
                                    Object {
                                      "label": "Frank Q. Nebeker",
                                      "value": "Frank Q. Nebeker",
                                    },
                                    Object {
                                      "label": "Grant C. Jaquith",
                                      "value": "Grant C. Jaquith",
                                    },
                                    Object {
                                      "label": "Joseph L. Falvey, Jr.",
                                      "value": "Joseph L. Falvey, Jr.",
                                    },
                                    Object {
                                      "label": "Joseph L. Toth",
                                      "value": "Joseph L. Toth",
                                    },
                                    Object {
                                      "label": "Kenneth B. Kramer",
                                      "value": "Kenneth B. Kramer",
                                    },
                                    Object {
                                      "label": "Lawrence B. Hagel",
                                      "value": "Lawrence B. Hagel",
                                    },
                                    Object {
                                      "label": "Margaret Bartley",
                                      "value": "Margaret Bartley",
                                    },
                                    Object {
                                      "label": "Mary J. Schoelen",
                                      "value": "Mary J. Schoelen",
                                    },
                                    Object {
                                      "label": "Michael P. Allen",
                                      "value": "Michael P. Allen",
                                    },
                                    Object {
                                      "label": "Robert N. Davis",
                                      "value": "Robert N. Davis",
                                    },
                                    Object {
                                      "label": "Ronald M. Holdaway",
                                      "value": "Ronald M. Holdaway",
                                    },
                                    Object {
                                      "label": "Scott J. Laurer",
                                      "value": "Scott J. Laurer",
                                    },
                                    Object {
                                      "label": "William A. Moorman",
                                      "value": "William A. Moorman",
                                    },
                                    Object {
                                      "label": "William P. Greene, Jr.",
                                      "value": "William P. Greene, Jr.",
                                    },
                                    Object {
                                      "label": "William S. Greenberg",
                                      "value": "William S. Greenberg",
                                    },
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "Select...",
                                  "screenReaderStatus": [Function],
                                  "searchable": true,
                                  "shouldKeyDownEventCreateNewOption": [Function],
                                  "styles": Object {
                                    "input": [Function],
                                  },
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "value": null,
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className=""
                                css={
                                  Object {
                                    "boxSizing": "border-box",
                                    "direction": null,
                                    "label": "container",
                                    "pointerEvents": null,
                                    "position": "relative",
                                  }
                                }
                                onKeyDown={[Function]}
                              >
                                <div
                                  className=" css-2b097c-container"
                                  onKeyDown={[Function]}
                                >
                                  <Control
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={false}
                                    innerProps={
                                      Object {
                                        "onMouseDown": [Function],
                                        "onTouchEnd": [Function],
                                      }
                                    }
                                    innerRef={[Function]}
                                    isDisabled={false}
                                    isFocused={false}
                                    isMulti={false}
                                    isRtl={false}
                                    menuIsOpen={false}
                                    options={
                                      Array [
                                        Object {
                                          "label": "Clerk",
                                          "value": "Clerk",
                                        },
                                        Object {
                                          "label": "Panel",
                                          "value": "Panel",
                                        },
                                        Object {
                                          "label": "Per curiam",
                                          "value": "Per curiam",
                                        },
                                        Object {
                                          "label": "Alan G. Lance, Sr.",
                                          "value": "Alan G. Lance, Sr.",
                                        },
                                        Object {
                                          "label": "Amanda L. Meredith",
                                          "value": "Amanda L. Meredith",
                                        },
                                        Object {
                                          "label": "Bruce E. Kasold",
                                          "value": "Bruce E. Kasold",
                                        },
                                        Object {
                                          "label": "Coral W. Pietsch",
                                          "value": "Coral W. Pietsch",
                                        },
                                        Object {
                                          "label": "Frank Q. Nebeker",
                                          "value": "Frank Q. Nebeker",
                                        },
                                        Object {
                                          "label": "Grant C. Jaquith",
                                          "value": "Grant C. Jaquith",
                                        },
                                        Object {
                                          "label": "Joseph L. Falvey, Jr.",
                                          "value": "Joseph L. Falvey, Jr.",
                                        },
                                        Object {
                                          "label": "Joseph L. Toth",
                                          "value": "Joseph L. Toth",
                                        },
                                        Object {
                                          "label": "Kenneth B. Kramer",
                                          "value": "Kenneth B. Kramer",
                                        },
                                        Object {
                                          "label": "Lawrence B. Hagel",
                                          "value": "Lawrence B. Hagel",
                                        },
                                        Object {
                                          "label": "Margaret Bartley",
                                          "value": "Margaret Bartley",
                                        },
                                        Object {
                                          "label": "Mary J. Schoelen",
                                          "value": "Mary J. Schoelen",
                                        },
                                        Object {
                                          "label": "Michael P. Allen",
                                          "value": "Michael P. Allen",
                                        },
                                        Object {
                                          "label": "Robert N. Davis",
                                          "value": "Robert N. Davis",
                                        },
                                        Object {
                                          "label": "Ronald M. Holdaway",
                                          "value": "Ronald M. Holdaway",
                                        },
                                        Object {
                                          "label": "Scott J. Laurer",
                                          "value": "Scott J. Laurer",
                                        },
                                        Object {
                                          "label": "William A. Moorman",
                                          "value": "William A. Moorman",
                                        },
                                        Object {
                                          "label": "William P. Greene, Jr.",
                                          "value": "William P. Greene, Jr.",
                                        },
                                        Object {
                                          "label": "William S. Greenberg",
                                          "value": "William S. Greenberg",
                                        },
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "cache": false,
                                        "captureMenuScroll": false,
                                        "classNamePrefix": "cf-select",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Input": [Function],
                                          "MenuList": [Function],
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "defaultOptions": undefined,
                                        "escapeClearsValue": false,
                                        "filterOption": [Function],
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "inputId": "judge-dropdown",
                                        "inputValue": "",
                                        "isClearable": undefined,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadOptions": undefined,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "name": "judge-dropdown",
                                        "noOptionsMessage": [Function],
                                        "onBlurResetsInput": false,
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "label": "Clerk",
                                            "value": "Clerk",
                                          },
                                          Object {
                                            "label": "Panel",
                                            "value": "Panel",
                                          },
                                          Object {
                                            "label": "Per curiam",
                                            "value": "Per curiam",
                                          },
                                          Object {
                                            "label": "Alan G. Lance, Sr.",
                                            "value": "Alan G. Lance, Sr.",
                                          },
                                          Object {
                                            "label": "Amanda L. Meredith",
                                            "value": "Amanda L. Meredith",
                                          },
                                          Object {
                                            "label": "Bruce E. Kasold",
                                            "value": "Bruce E. Kasold",
                                          },
                                          Object {
                                            "label": "Coral W. Pietsch",
                                            "value": "Coral W. Pietsch",
                                          },
                                          Object {
                                            "label": "Frank Q. Nebeker",
                                            "value": "Frank Q. Nebeker",
                                          },
                                          Object {
                                            "label": "Grant C. Jaquith",
                                            "value": "Grant C. Jaquith",
                                          },
                                          Object {
                                            "label": "Joseph L. Falvey, Jr.",
                                            "value": "Joseph L. Falvey, Jr.",
                                          },
                                          Object {
                                            "label": "Joseph L. Toth",
                                            "value": "Joseph L. Toth",
                                          },
                                          Object {
                                            "label": "Kenneth B. Kramer",
                                            "value": "Kenneth B. Kramer",
                                          },
                                          Object {
                                            "label": "Lawrence B. Hagel",
                                            "value": "Lawrence B. Hagel",
                                          },
                                          Object {
                                            "label": "Margaret Bartley",
                                            "value": "Margaret Bartley",
                                          },
                                          Object {
                                            "label": "Mary J. Schoelen",
                                            "value": "Mary J. Schoelen",
                                          },
                                          Object {
                                            "label": "Michael P. Allen",
                                            "value": "Michael P. Allen",
                                          },
                                          Object {
                                            "label": "Robert N. Davis",
                                            "value": "Robert N. Davis",
                                          },
                                          Object {
                                            "label": "Ronald M. Holdaway",
                                            "value": "Ronald M. Holdaway",
                                          },
                                          Object {
                                            "label": "Scott J. Laurer",
                                            "value": "Scott J. Laurer",
                                          },
                                          Object {
                                            "label": "William A. Moorman",
                                            "value": "William A. Moorman",
                                          },
                                          Object {
                                            "label": "William P. Greene, Jr.",
                                            "value": "William P. Greene, Jr.",
                                          },
                                          Object {
                                            "label": "William S. Greenberg",
                                            "value": "William S. Greenberg",
                                          },
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "Select...",
                                        "screenReaderStatus": [Function],
                                        "searchable": true,
                                        "shouldKeyDownEventCreateNewOption": [Function],
                                        "styles": Object {
                                          "input": [Function],
                                        },
                                        "tabIndex": "0",
                                        "tabSelectsValue": true,
                                        "value": null,
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="cf-select__control"
                                      css={
                                        Object {
                                          "&:hover": Object {
                                            "borderColor": "hsl(0, 0%, 70%)",
                                          },
                                          "alignItems": "center",
                                          "backgroundColor": "hsl(0, 0%, 100%)",
                                          "borderColor": "hsl(0, 0%, 80%)",
                                          "borderRadius": 4,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "boxShadow": null,
                                          "boxSizing": "border-box",
                                          "cursor": "default",
                                          "display": "flex",
                                          "flexWrap": "wrap",
                                          "justifyContent": "space-between",
                                          "label": "control",
                                          "minHeight": 38,
                                          "outline": "0 !important",
                                          "position": "relative",
                                          "transition": "all 100ms",
                                        }
                                      }
                                      onMouseDown={[Function]}
                                      onTouchEnd={[Function]}
                                    >
                                      <div
                                        className="cf-select__control css-yk16xz-control"
                                        onMouseDown={[Function]}
                                        onTouchEnd={[Function]}
                                      >
                                        <ValueContainer
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Clerk",
                                                "value": "Clerk",
                                              },
                                              Object {
                                                "label": "Panel",
                                                "value": "Panel",
                                              },
                                              Object {
                                                "label": "Per curiam",
                                                "value": "Per curiam",
                                              },
                                              Object {
                                                "label": "Alan G. Lance, Sr.",
                                                "value": "Alan G. Lance, Sr.",
                                              },
                                              Object {
                                                "label": "Amanda L. Meredith",
                                                "value": "Amanda L. Meredith",
                                              },
                                              Object {
                                                "label": "Bruce E. Kasold",
                                                "value": "Bruce E. Kasold",
                                              },
                                              Object {
                                                "label": "Coral W. Pietsch",
                                                "value": "Coral W. Pietsch",
                                              },
                                              Object {
                                                "label": "Frank Q. Nebeker",
                                                "value": "Frank Q. Nebeker",
                                              },
                                              Object {
                                                "label": "Grant C. Jaquith",
                                                "value": "Grant C. Jaquith",
                                              },
                                              Object {
                                                "label": "Joseph L. Falvey, Jr.",
                                                "value": "Joseph L. Falvey, Jr.",
                                              },
                                              Object {
                                                "label": "Joseph L. Toth",
                                                "value": "Joseph L. Toth",
                                              },
                                              Object {
                                                "label": "Kenneth B. Kramer",
                                                "value": "Kenneth B. Kramer",
                                              },
                                              Object {
                                                "label": "Lawrence B. Hagel",
                                                "value": "Lawrence B. Hagel",
                                              },
                                              Object {
                                                "label": "Margaret Bartley",
                                                "value": "Margaret Bartley",
                                              },
                                              Object {
                                                "label": "Mary J. Schoelen",
                                                "value": "Mary J. Schoelen",
                                              },
                                              Object {
                                                "label": "Michael P. Allen",
                                                "value": "Michael P. Allen",
                                              },
                                              Object {
                                                "label": "Robert N. Davis",
                                                "value": "Robert N. Davis",
                                              },
                                              Object {
                                                "label": "Ronald M. Holdaway",
                                                "value": "Ronald M. Holdaway",
                                              },
                                              Object {
                                                "label": "Scott J. Laurer",
                                                "value": "Scott J. Laurer",
                                              },
                                              Object {
                                                "label": "William A. Moorman",
                                                "value": "William A. Moorman",
                                              },
                                              Object {
                                                "label": "William P. Greene, Jr.",
                                                "value": "William P. Greene, Jr.",
                                              },
                                              Object {
                                                "label": "William S. Greenberg",
                                                "value": "William S. Greenberg",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "cache": false,
                                              "captureMenuScroll": false,
                                              "classNamePrefix": "cf-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Input": [Function],
                                                "MenuList": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "defaultOptions": undefined,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "inputId": "judge-dropdown",
                                              "inputValue": "",
                                              "isClearable": undefined,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadOptions": undefined,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "judge-dropdown",
                                              "noOptionsMessage": [Function],
                                              "onBlurResetsInput": false,
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Clerk",
                                                  "value": "Clerk",
                                                },
                                                Object {
                                                  "label": "Panel",
                                                  "value": "Panel",
                                                },
                                                Object {
                                                  "label": "Per curiam",
                                                  "value": "Per curiam",
                                                },
                                                Object {
                                                  "label": "Alan G. Lance, Sr.",
                                                  "value": "Alan G. Lance, Sr.",
                                                },
                                                Object {
                                                  "label": "Amanda L. Meredith",
                                                  "value": "Amanda L. Meredith",
                                                },
                                                Object {
                                                  "label": "Bruce E. Kasold",
                                                  "value": "Bruce E. Kasold",
                                                },
                                                Object {
                                                  "label": "Coral W. Pietsch",
                                                  "value": "Coral W. Pietsch",
                                                },
                                                Object {
                                                  "label": "Frank Q. Nebeker",
                                                  "value": "Frank Q. Nebeker",
                                                },
                                                Object {
                                                  "label": "Grant C. Jaquith",
                                                  "value": "Grant C. Jaquith",
                                                },
                                                Object {
                                                  "label": "Joseph L. Falvey, Jr.",
                                                  "value": "Joseph L. Falvey, Jr.",
                                                },
                                                Object {
                                                  "label": "Joseph L. Toth",
                                                  "value": "Joseph L. Toth",
                                                },
                                                Object {
                                                  "label": "Kenneth B. Kramer",
                                                  "value": "Kenneth B. Kramer",
                                                },
                                                Object {
                                                  "label": "Lawrence B. Hagel",
                                                  "value": "Lawrence B. Hagel",
                                                },
                                                Object {
                                                  "label": "Margaret Bartley",
                                                  "value": "Margaret Bartley",
                                                },
                                                Object {
                                                  "label": "Mary J. Schoelen",
                                                  "value": "Mary J. Schoelen",
                                                },
                                                Object {
                                                  "label": "Michael P. Allen",
                                                  "value": "Michael P. Allen",
                                                },
                                                Object {
                                                  "label": "Robert N. Davis",
                                                  "value": "Robert N. Davis",
                                                },
                                                Object {
                                                  "label": "Ronald M. Holdaway",
                                                  "value": "Ronald M. Holdaway",
                                                },
                                                Object {
                                                  "label": "Scott J. Laurer",
                                                  "value": "Scott J. Laurer",
                                                },
                                                Object {
                                                  "label": "William A. Moorman",
                                                  "value": "William A. Moorman",
                                                },
                                                Object {
                                                  "label": "William P. Greene, Jr.",
                                                  "value": "William P. Greene, Jr.",
                                                },
                                                Object {
                                                  "label": "William S. Greenberg",
                                                  "value": "William S. Greenberg",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "searchable": true,
                                              "shouldKeyDownEventCreateNewOption": [Function],
                                              "styles": Object {
                                                "input": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "value": null,
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="cf-select__value-container"
                                            css={
                                              Object {
                                                "WebkitOverflowScrolling": "touch",
                                                "alignItems": "center",
                                                "boxSizing": "border-box",
                                                "display": "flex",
                                                "flex": 1,
                                                "flexWrap": "wrap",
                                                "overflow": "hidden",
                                                "padding": "2px 8px",
                                                "position": "relative",
                                              }
                                            }
                                          >
                                            <div
                                              className="cf-select__value-container css-g1d714-ValueContainer"
                                            >
                                              <Placeholder
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={false}
                                                isDisabled={false}
                                                isFocused={false}
                                                isMulti={false}
                                                isRtl={false}
                                                key="placeholder"
                                                options={
                                                  Array [
                                                    Object {
                                                      "label": "Clerk",
                                                      "value": "Clerk",
                                                    },
                                                    Object {
                                                      "label": "Panel",
                                                      "value": "Panel",
                                                    },
                                                    Object {
                                                      "label": "Per curiam",
                                                      "value": "Per curiam",
                                                    },
                                                    Object {
                                                      "label": "Alan G. Lance, Sr.",
                                                      "value": "Alan G. Lance, Sr.",
                                                    },
                                                    Object {
                                                      "label": "Amanda L. Meredith",
                                                      "value": "Amanda L. Meredith",
                                                    },
                                                    Object {
                                                      "label": "Bruce E. Kasold",
                                                      "value": "Bruce E. Kasold",
                                                    },
                                                    Object {
                                                      "label": "Coral W. Pietsch",
                                                      "value": "Coral W. Pietsch",
                                                    },
                                                    Object {
                                                      "label": "Frank Q. Nebeker",
                                                      "value": "Frank Q. Nebeker",
                                                    },
                                                    Object {
                                                      "label": "Grant C. Jaquith",
                                                      "value": "Grant C. Jaquith",
                                                    },
                                                    Object {
                                                      "label": "Joseph L. Falvey, Jr.",
                                                      "value": "Joseph L. Falvey, Jr.",
                                                    },
                                                    Object {
                                                      "label": "Joseph L. Toth",
                                                      "value": "Joseph L. Toth",
                                                    },
                                                    Object {
                                                      "label": "Kenneth B. Kramer",
                                                      "value": "Kenneth B. Kramer",
                                                    },
                                                    Object {
                                                      "label": "Lawrence B. Hagel",
                                                      "value": "Lawrence B. Hagel",
                                                    },
                                                    Object {
                                                      "label": "Margaret Bartley",
                                                      "value": "Margaret Bartley",
                                                    },
                                                    Object {
                                                      "label": "Mary J. Schoelen",
                                                      "value": "Mary J. Schoelen",
                                                    },
                                                    Object {
                                                      "label": "Michael P. Allen",
                                                      "value": "Michael P. Allen",
                                                    },
                                                    Object {
                                                      "label": "Robert N. Davis",
                                                      "value": "Robert N. Davis",
                                                    },
                                                    Object {
                                                      "label": "Ronald M. Holdaway",
                                                      "value": "Ronald M. Holdaway",
                                                    },
                                                    Object {
                                                      "label": "Scott J. Laurer",
                                                      "value": "Scott J. Laurer",
                                                    },
                                                    Object {
                                                      "label": "William A. Moorman",
                                                      "value": "William A. Moorman",
                                                    },
                                                    Object {
                                                      "label": "William P. Greene, Jr.",
                                                      "value": "William P. Greene, Jr.",
                                                    },
                                                    Object {
                                                      "label": "William S. Greenberg",
                                                      "value": "William S. Greenberg",
                                                    },
                                                  ]
                                                }
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cache": false,
                                                    "captureMenuScroll": false,
                                                    "classNamePrefix": "cf-select",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "Input": [Function],
                                                      "MenuList": [Function],
                                                      "Option": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputId": "judge-dropdown",
                                                    "inputValue": "",
                                                    "isClearable": undefined,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadOptions": undefined,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "judge-dropdown",
                                                    "noOptionsMessage": [Function],
                                                    "onBlurResetsInput": false,
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "Clerk",
                                                        "value": "Clerk",
                                                      },
                                                      Object {
                                                        "label": "Panel",
                                                        "value": "Panel",
                                                      },
                                                      Object {
                                                        "label": "Per curiam",
                                                        "value": "Per curiam",
                                                      },
                                                      Object {
                                                        "label": "Alan G. Lance, Sr.",
                                                        "value": "Alan G. Lance, Sr.",
                                                      },
                                                      Object {
                                                        "label": "Amanda L. Meredith",
                                                        "value": "Amanda L. Meredith",
                                                      },
                                                      Object {
                                                        "label": "Bruce E. Kasold",
                                                        "value": "Bruce E. Kasold",
                                                      },
                                                      Object {
                                                        "label": "Coral W. Pietsch",
                                                        "value": "Coral W. Pietsch",
                                                      },
                                                      Object {
                                                        "label": "Frank Q. Nebeker",
                                                        "value": "Frank Q. Nebeker",
                                                      },
                                                      Object {
                                                        "label": "Grant C. Jaquith",
                                                        "value": "Grant C. Jaquith",
                                                      },
                                                      Object {
                                                        "label": "Joseph L. Falvey, Jr.",
                                                        "value": "Joseph L. Falvey, Jr.",
                                                      },
                                                      Object {
                                                        "label": "Joseph L. Toth",
                                                        "value": "Joseph L. Toth",
                                                      },
                                                      Object {
                                                        "label": "Kenneth B. Kramer",
                                                        "value": "Kenneth B. Kramer",
                                                      },
                                                      Object {
                                                        "label": "Lawrence B. Hagel",
                                                        "value": "Lawrence B. Hagel",
                                                      },
                                                      Object {
                                                        "label": "Margaret Bartley",
                                                        "value": "Margaret Bartley",
                                                      },
                                                      Object {
                                                        "label": "Mary J. Schoelen",
                                                        "value": "Mary J. Schoelen",
                                                      },
                                                      Object {
                                                        "label": "Michael P. Allen",
                                                        "value": "Michael P. Allen",
                                                      },
                                                      Object {
                                                        "label": "Robert N. Davis",
                                                        "value": "Robert N. Davis",
                                                      },
                                                      Object {
                                                        "label": "Ronald M. Holdaway",
                                                        "value": "Ronald M. Holdaway",
                                                      },
                                                      Object {
                                                        "label": "Scott J. Laurer",
                                                        "value": "Scott J. Laurer",
                                                      },
                                                      Object {
                                                        "label": "William A. Moorman",
                                                        "value": "William A. Moorman",
                                                      },
                                                      Object {
                                                        "label": "William P. Greene, Jr.",
                                                        "value": "William P. Greene, Jr.",
                                                      },
                                                      Object {
                                                        "label": "William S. Greenberg",
                                                        "value": "William S. Greenberg",
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "searchable": true,
                                                    "shouldKeyDownEventCreateNewOption": [Function],
                                                    "styles": Object {
                                                      "input": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": null,
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  className="cf-select__placeholder"
                                                  css={
                                                    Object {
                                                      "boxSizing": "border-box",
                                                      "color": "hsl(0, 0%, 50%)",
                                                      "label": "placeholder",
                                                      "marginLeft": 2,
                                                      "marginRight": 2,
                                                      "position": "absolute",
                                                      "top": "50%",
                                                      "transform": "translateY(-50%)",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="cf-select__placeholder css-1wa3eu0-placeholder"
                                                  >
                                                    Select...
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </Placeholder>
                                              <CustomInput
                                                aria-autocomplete="list"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                id="judge-dropdown"
                                                innerRef={[Function]}
                                                isDisabled={false}
                                                isHidden={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cache": false,
                                                    "captureMenuScroll": false,
                                                    "classNamePrefix": "cf-select",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "Input": [Function],
                                                      "MenuList": [Function],
                                                      "Option": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputId": "judge-dropdown",
                                                    "inputValue": "",
                                                    "isClearable": undefined,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadOptions": undefined,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "judge-dropdown",
                                                    "noOptionsMessage": [Function],
                                                    "onBlurResetsInput": false,
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "Clerk",
                                                        "value": "Clerk",
                                                      },
                                                      Object {
                                                        "label": "Panel",
                                                        "value": "Panel",
                                                      },
                                                      Object {
                                                        "label": "Per curiam",
                                                        "value": "Per curiam",
                                                      },
                                                      Object {
                                                        "label": "Alan G. Lance, Sr.",
                                                        "value": "Alan G. Lance, Sr.",
                                                      },
                                                      Object {
                                                        "label": "Amanda L. Meredith",
                                                        "value": "Amanda L. Meredith",
                                                      },
                                                      Object {
                                                        "label": "Bruce E. Kasold",
                                                        "value": "Bruce E. Kasold",
                                                      },
                                                      Object {
                                                        "label": "Coral W. Pietsch",
                                                        "value": "Coral W. Pietsch",
                                                      },
                                                      Object {
                                                        "label": "Frank Q. Nebeker",
                                                        "value": "Frank Q. Nebeker",
                                                      },
                                                      Object {
                                                        "label": "Grant C. Jaquith",
                                                        "value": "Grant C. Jaquith",
                                                      },
                                                      Object {
                                                        "label": "Joseph L. Falvey, Jr.",
                                                        "value": "Joseph L. Falvey, Jr.",
                                                      },
                                                      Object {
                                                        "label": "Joseph L. Toth",
                                                        "value": "Joseph L. Toth",
                                                      },
                                                      Object {
                                                        "label": "Kenneth B. Kramer",
                                                        "value": "Kenneth B. Kramer",
                                                      },
                                                      Object {
                                                        "label": "Lawrence B. Hagel",
                                                        "value": "Lawrence B. Hagel",
                                                      },
                                                      Object {
                                                        "label": "Margaret Bartley",
                                                        "value": "Margaret Bartley",
                                                      },
                                                      Object {
                                                        "label": "Mary J. Schoelen",
                                                        "value": "Mary J. Schoelen",
                                                      },
                                                      Object {
                                                        "label": "Michael P. Allen",
                                                        "value": "Michael P. Allen",
                                                      },
                                                      Object {
                                                        "label": "Robert N. Davis",
                                                        "value": "Robert N. Davis",
                                                      },
                                                      Object {
                                                        "label": "Ronald M. Holdaway",
                                                        "value": "Ronald M. Holdaway",
                                                      },
                                                      Object {
                                                        "label": "Scott J. Laurer",
                                                        "value": "Scott J. Laurer",
                                                      },
                                                      Object {
                                                        "label": "William A. Moorman",
                                                        "value": "William A. Moorman",
                                                      },
                                                      Object {
                                                        "label": "William P. Greene, Jr.",
                                                        "value": "William P. Greene, Jr.",
                                                      },
                                                      Object {
                                                        "label": "William S. Greenberg",
                                                        "value": "William S. Greenberg",
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "searchable": true,
                                                    "shouldKeyDownEventCreateNewOption": [Function],
                                                    "styles": Object {
                                                      "input": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": null,
                                                  }
                                                }
                                                spellCheck="false"
                                                tabIndex="0"
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                                type="text"
                                                value=""
                                              >
                                                <Input
                                                  aria-autocomplete="list"
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-labelledby="judge-dropdown-label"
                                                  aria-owns="judge-dropdown-listbox"
                                                  autoCapitalize="none"
                                                  autoComplete="off"
                                                  autoCorrect="off"
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  id="judge-dropdown"
                                                  innerRef={[Function]}
                                                  isDisabled={false}
                                                  isHidden={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  role="combobox"
                                                  selectProps={
                                                    Object {
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "cache": false,
                                                      "captureMenuScroll": false,
                                                      "classNamePrefix": "cf-select",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {
                                                        "Input": [Function],
                                                        "MenuList": [Function],
                                                        "Option": [Function],
                                                      },
                                                      "controlShouldRenderValue": true,
                                                      "defaultOptions": undefined,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "inputId": "judge-dropdown",
                                                      "inputValue": "",
                                                      "isClearable": undefined,
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": true,
                                                      "loadOptions": undefined,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "bottom",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "judge-dropdown",
                                                      "noOptionsMessage": [Function],
                                                      "onBlurResetsInput": false,
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [
                                                        Object {
                                                          "label": "Clerk",
                                                          "value": "Clerk",
                                                        },
                                                        Object {
                                                          "label": "Panel",
                                                          "value": "Panel",
                                                        },
                                                        Object {
                                                          "label": "Per curiam",
                                                          "value": "Per curiam",
                                                        },
                                                        Object {
                                                          "label": "Alan G. Lance, Sr.",
                                                          "value": "Alan G. Lance, Sr.",
                                                        },
                                                        Object {
                                                          "label": "Amanda L. Meredith",
                                                          "value": "Amanda L. Meredith",
                                                        },
                                                        Object {
                                                          "label": "Bruce E. Kasold",
                                                          "value": "Bruce E. Kasold",
                                                        },
                                                        Object {
                                                          "label": "Coral W. Pietsch",
                                                          "value": "Coral W. Pietsch",
                                                        },
                                                        Object {
                                                          "label": "Frank Q. Nebeker",
                                                          "value": "Frank Q. Nebeker",
                                                        },
                                                        Object {
                                                          "label": "Grant C. Jaquith",
                                                          "value": "Grant C. Jaquith",
                                                        },
                                                        Object {
                                                          "label": "Joseph L. Falvey, Jr.",
                                                          "value": "Joseph L. Falvey, Jr.",
                                                        },
                                                        Object {
                                                          "label": "Joseph L. Toth",
                                                          "value": "Joseph L. Toth",
                                                        },
                                                        Object {
                                                          "label": "Kenneth B. Kramer",
                                                          "value": "Kenneth B. Kramer",
                                                        },
                                                        Object {
                                                          "label": "Lawrence B. Hagel",
                                                          "value": "Lawrence B. Hagel",
                                                        },
                                                        Object {
                                                          "label": "Margaret Bartley",
                                                          "value": "Margaret Bartley",
                                                        },
                                                        Object {
                                                          "label": "Mary J. Schoelen",
                                                          "value": "Mary J. Schoelen",
                                                        },
                                                        Object {
                                                          "label": "Michael P. Allen",
                                                          "value": "Michael P. Allen",
                                                        },
                                                        Object {
                                                          "label": "Robert N. Davis",
                                                          "value": "Robert N. Davis",
                                                        },
                                                        Object {
                                                          "label": "Ronald M. Holdaway",
                                                          "value": "Ronald M. Holdaway",
                                                        },
                                                        Object {
                                                          "label": "Scott J. Laurer",
                                                          "value": "Scott J. Laurer",
                                                        },
                                                        Object {
                                                          "label": "William A. Moorman",
                                                          "value": "William A. Moorman",
                                                        },
                                                        Object {
                                                          "label": "William P. Greene, Jr.",
                                                          "value": "William P. Greene, Jr.",
                                                        },
                                                        Object {
                                                          "label": "William S. Greenberg",
                                                          "value": "William S. Greenberg",
                                                        },
                                                      ],
                                                      "pageSize": 5,
                                                      "placeholder": "Select...",
                                                      "screenReaderStatus": [Function],
                                                      "searchable": true,
                                                      "shouldKeyDownEventCreateNewOption": [Function],
                                                      "styles": Object {
                                                        "input": [Function],
                                                      },
                                                      "tabIndex": "0",
                                                      "tabSelectsValue": true,
                                                      "value": null,
                                                    }
                                                  }
                                                  spellCheck="false"
                                                  tabIndex="0"
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                  type="text"
                                                  value=""
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                    css={
                                                      Object {
                                                        "height": "44px",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="css-81nyic-Input"
                                                    >
                                                      <AutosizeInput
                                                        aria-autocomplete="list"
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-labelledby="judge-dropdown-label"
                                                        aria-owns="judge-dropdown-listbox"
                                                        autoCapitalize="none"
                                                        autoComplete="off"
                                                        autoCorrect="off"
                                                        className="cf-select__input"
                                                        disabled={false}
                                                        id="judge-dropdown"
                                                        injectStyles={true}
                                                        inputRef={[Function]}
                                                        inputStyle={
                                                          Object {
                                                            "background": 0,
                                                            "border": 0,
                                                            "color": "inherit",
                                                            "fontSize": "inherit",
                                                            "label": "input",
                                                            "opacity": 1,
                                                            "outline": 0,
                                                            "padding": 0,
                                                          }
                                                        }
                                                        minWidth={1}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        role="combobox"
                                                        spellCheck="false"
                                                        tabIndex="0"
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="cf-select__input"
                                                          style={
                                                            Object {
                                                              "display": "inline-block",
                                                            }
                                                          }
                                                        >
                                                          <input
                                                            aria-autocomplete="list"
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-labelledby="judge-dropdown-label"
                                                            aria-owns="judge-dropdown-listbox"
                                                            autoCapitalize="none"
                                                            autoComplete="off"
                                                            autoCorrect="off"
                                                            disabled={false}
                                                            id="judge-dropdown"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            spellCheck="false"
                                                            style={
                                                              Object {
                                                                "background": 0,
                                                                "border": 0,
                                                                "boxSizing": "content-box",
                                                                "color": "inherit",
                                                                "fontSize": "inherit",
                                                                "label": "input",
                                                                "opacity": 1,
                                                                "outline": 0,
                                                                "padding": 0,
                                                                "width": "2px",
                                                              }
                                                            }
                                                            tabIndex="0"
                                                            type="text"
                                                            value=""
                                                          />
                                                          <div
                                                            style={
                                                              Object {
                                                                "height": 0,
                                                                "left": 0,
                                                                "overflow": "scroll",
                                                                "position": "absolute",
                                                                "top": 0,
                                                                "visibility": "hidden",
                                                                "whiteSpace": "pre",
                                                              }
                                                            }
                                                          />
                                                        </div>
                                                      </AutosizeInput>
                                                    </div>
                                                  </EmotionCssPropInternal>
                                                </Input>
                                              </CustomInput>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </ValueContainer>
                                        <IndicatorsContainer
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Clerk",
                                                "value": "Clerk",
                                              },
                                              Object {
                                                "label": "Panel",
                                                "value": "Panel",
                                              },
                                              Object {
                                                "label": "Per curiam",
                                                "value": "Per curiam",
                                              },
                                              Object {
                                                "label": "Alan G. Lance, Sr.",
                                                "value": "Alan G. Lance, Sr.",
                                              },
                                              Object {
                                                "label": "Amanda L. Meredith",
                                                "value": "Amanda L. Meredith",
                                              },
                                              Object {
                                                "label": "Bruce E. Kasold",
                                                "value": "Bruce E. Kasold",
                                              },
                                              Object {
                                                "label": "Coral W. Pietsch",
                                                "value": "Coral W. Pietsch",
                                              },
                                              Object {
                                                "label": "Frank Q. Nebeker",
                                                "value": "Frank Q. Nebeker",
                                              },
                                              Object {
                                                "label": "Grant C. Jaquith",
                                                "value": "Grant C. Jaquith",
                                              },
                                              Object {
                                                "label": "Joseph L. Falvey, Jr.",
                                                "value": "Joseph L. Falvey, Jr.",
                                              },
                                              Object {
                                                "label": "Joseph L. Toth",
                                                "value": "Joseph L. Toth",
                                              },
                                              Object {
                                                "label": "Kenneth B. Kramer",
                                                "value": "Kenneth B. Kramer",
                                              },
                                              Object {
                                                "label": "Lawrence B. Hagel",
                                                "value": "Lawrence B. Hagel",
                                              },
                                              Object {
                                                "label": "Margaret Bartley",
                                                "value": "Margaret Bartley",
                                              },
                                              Object {
                                                "label": "Mary J. Schoelen",
                                                "value": "Mary J. Schoelen",
                                              },
                                              Object {
                                                "label": "Michael P. Allen",
                                                "value": "Michael P. Allen",
                                              },
                                              Object {
                                                "label": "Robert N. Davis",
                                                "value": "Robert N. Davis",
                                              },
                                              Object {
                                                "label": "Ronald M. Holdaway",
                                                "value": "Ronald M. Holdaway",
                                              },
                                              Object {
                                                "label": "Scott J. Laurer",
                                                "value": "Scott J. Laurer",
                                              },
                                              Object {
                                                "label": "William A. Moorman",
                                                "value": "William A. Moorman",
                                              },
                                              Object {
                                                "label": "William P. Greene, Jr.",
                                                "value": "William P. Greene, Jr.",
                                              },
                                              Object {
                                                "label": "William S. Greenberg",
                                                "value": "William S. Greenberg",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "cache": false,
                                              "captureMenuScroll": false,
                                              "classNamePrefix": "cf-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Input": [Function],
                                                "MenuList": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "defaultOptions": undefined,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "inputId": "judge-dropdown",
                                              "inputValue": "",
                                              "isClearable": undefined,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadOptions": undefined,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "judge-dropdown",
                                              "noOptionsMessage": [Function],
                                              "onBlurResetsInput": false,
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Clerk",
                                                  "value": "Clerk",
                                                },
                                                Object {
                                                  "label": "Panel",
                                                  "value": "Panel",
                                                },
                                                Object {
                                                  "label": "Per curiam",
                                                  "value": "Per curiam",
                                                },
                                                Object {
                                                  "label": "Alan G. Lance, Sr.",
                                                  "value": "Alan G. Lance, Sr.",
                                                },
                                                Object {
                                                  "label": "Amanda L. Meredith",
                                                  "value": "Amanda L. Meredith",
                                                },
                                                Object {
                                                  "label": "Bruce E. Kasold",
                                                  "value": "Bruce E. Kasold",
                                                },
                                                Object {
                                                  "label": "Coral W. Pietsch",
                                                  "value": "Coral W. Pietsch",
                                                },
                                                Object {
                                                  "label": "Frank Q. Nebeker",
                                                  "value": "Frank Q. Nebeker",
                                                },
                                                Object {
                                                  "label": "Grant C. Jaquith",
                                                  "value": "Grant C. Jaquith",
                                                },
                                                Object {
                                                  "label": "Joseph L. Falvey, Jr.",
                                                  "value": "Joseph L. Falvey, Jr.",
                                                },
                                                Object {
                                                  "label": "Joseph L. Toth",
                                                  "value": "Joseph L. Toth",
                                                },
                                                Object {
                                                  "label": "Kenneth B. Kramer",
                                                  "value": "Kenneth B. Kramer",
                                                },
                                                Object {
                                                  "label": "Lawrence B. Hagel",
                                                  "value": "Lawrence B. Hagel",
                                                },
                                                Object {
                                                  "label": "Margaret Bartley",
                                                  "value": "Margaret Bartley",
                                                },
                                                Object {
                                                  "label": "Mary J. Schoelen",
                                                  "value": "Mary J. Schoelen",
                                                },
                                                Object {
                                                  "label": "Michael P. Allen",
                                                  "value": "Michael P. Allen",
                                                },
                                                Object {
                                                  "label": "Robert N. Davis",
                                                  "value": "Robert N. Davis",
                                                },
                                                Object {
                                                  "label": "Ronald M. Holdaway",
                                                  "value": "Ronald M. Holdaway",
                                                },
                                                Object {
                                                  "label": "Scott J. Laurer",
                                                  "value": "Scott J. Laurer",
                                                },
                                                Object {
                                                  "label": "William A. Moorman",
                                                  "value": "William A. Moorman",
                                                },
                                                Object {
                                                  "label": "William P. Greene, Jr.",
                                                  "value": "William P. Greene, Jr.",
                                                },
                                                Object {
                                                  "label": "William S. Greenberg",
                                                  "value": "William S. Greenberg",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "searchable": true,
                                              "shouldKeyDownEventCreateNewOption": [Function],
                                              "styles": Object {
                                                "input": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "value": null,
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="cf-select__indicators"
                                            css={
                                              Object {
                                                "alignItems": "center",
                                                "alignSelf": "stretch",
                                                "boxSizing": "border-box",
                                                "display": "flex",
                                                "flexShrink": 0,
                                              }
                                            }
                                          >
                                            <div
                                              className="cf-select__indicators css-1hb7zxy-IndicatorsContainer"
                                            >
                                              <IndicatorSeparator
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={false}
                                                isDisabled={false}
                                                isFocused={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "label": "Clerk",
                                                      "value": "Clerk",
                                                    },
                                                    Object {
                                                      "label": "Panel",
                                                      "value": "Panel",
                                                    },
                                                    Object {
                                                      "label": "Per curiam",
                                                      "value": "Per curiam",
                                                    },
                                                    Object {
                                                      "label": "Alan G. Lance, Sr.",
                                                      "value": "Alan G. Lance, Sr.",
                                                    },
                                                    Object {
                                                      "label": "Amanda L. Meredith",
                                                      "value": "Amanda L. Meredith",
                                                    },
                                                    Object {
                                                      "label": "Bruce E. Kasold",
                                                      "value": "Bruce E. Kasold",
                                                    },
                                                    Object {
                                                      "label": "Coral W. Pietsch",
                                                      "value": "Coral W. Pietsch",
                                                    },
                                                    Object {
                                                      "label": "Frank Q. Nebeker",
                                                      "value": "Frank Q. Nebeker",
                                                    },
                                                    Object {
                                                      "label": "Grant C. Jaquith",
                                                      "value": "Grant C. Jaquith",
                                                    },
                                                    Object {
                                                      "label": "Joseph L. Falvey, Jr.",
                                                      "value": "Joseph L. Falvey, Jr.",
                                                    },
                                                    Object {
                                                      "label": "Joseph L. Toth",
                                                      "value": "Joseph L. Toth",
                                                    },
                                                    Object {
                                                      "label": "Kenneth B. Kramer",
                                                      "value": "Kenneth B. Kramer",
                                                    },
                                                    Object {
                                                      "label": "Lawrence B. Hagel",
                                                      "value": "Lawrence B. Hagel",
                                                    },
                                                    Object {
                                                      "label": "Margaret Bartley",
                                                      "value": "Margaret Bartley",
                                                    },
                                                    Object {
                                                      "label": "Mary J. Schoelen",
                                                      "value": "Mary J. Schoelen",
                                                    },
                                                    Object {
                                                      "label": "Michael P. Allen",
                                                      "value": "Michael P. Allen",
                                                    },
                                                    Object {
                                                      "label": "Robert N. Davis",
                                                      "value": "Robert N. Davis",
                                                    },
                                                    Object {
                                                      "label": "Ronald M. Holdaway",
                                                      "value": "Ronald M. Holdaway",
                                                    },
                                                    Object {
                                                      "label": "Scott J. Laurer",
                                                      "value": "Scott J. Laurer",
                                                    },
                                                    Object {
                                                      "label": "William A. Moorman",
                                                      "value": "William A. Moorman",
                                                    },
                                                    Object {
                                                      "label": "William P. Greene, Jr.",
                                                      "value": "William P. Greene, Jr.",
                                                    },
                                                    Object {
                                                      "label": "William S. Greenberg",
                                                      "value": "William S. Greenberg",
                                                    },
                                                  ]
                                                }
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cache": false,
                                                    "captureMenuScroll": false,
                                                    "classNamePrefix": "cf-select",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "Input": [Function],
                                                      "MenuList": [Function],
                                                      "Option": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputId": "judge-dropdown",
                                                    "inputValue": "",
                                                    "isClearable": undefined,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadOptions": undefined,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "judge-dropdown",
                                                    "noOptionsMessage": [Function],
                                                    "onBlurResetsInput": false,
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "Clerk",
                                                        "value": "Clerk",
                                                      },
                                                      Object {
                                                        "label": "Panel",
                                                        "value": "Panel",
                                                      },
                                                      Object {
                                                        "label": "Per curiam",
                                                        "value": "Per curiam",
                                                      },
                                                      Object {
                                                        "label": "Alan G. Lance, Sr.",
                                                        "value": "Alan G. Lance, Sr.",
                                                      },
                                                      Object {
                                                        "label": "Amanda L. Meredith",
                                                        "value": "Amanda L. Meredith",
                                                      },
                                                      Object {
                                                        "label": "Bruce E. Kasold",
                                                        "value": "Bruce E. Kasold",
                                                      },
                                                      Object {
                                                        "label": "Coral W. Pietsch",
                                                        "value": "Coral W. Pietsch",
                                                      },
                                                      Object {
                                                        "label": "Frank Q. Nebeker",
                                                        "value": "Frank Q. Nebeker",
                                                      },
                                                      Object {
                                                        "label": "Grant C. Jaquith",
                                                        "value": "Grant C. Jaquith",
                                                      },
                                                      Object {
                                                        "label": "Joseph L. Falvey, Jr.",
                                                        "value": "Joseph L. Falvey, Jr.",
                                                      },
                                                      Object {
                                                        "label": "Joseph L. Toth",
                                                        "value": "Joseph L. Toth",
                                                      },
                                                      Object {
                                                        "label": "Kenneth B. Kramer",
                                                        "value": "Kenneth B. Kramer",
                                                      },
                                                      Object {
                                                        "label": "Lawrence B. Hagel",
                                                        "value": "Lawrence B. Hagel",
                                                      },
                                                      Object {
                                                        "label": "Margaret Bartley",
                                                        "value": "Margaret Bartley",
                                                      },
                                                      Object {
                                                        "label": "Mary J. Schoelen",
                                                        "value": "Mary J. Schoelen",
                                                      },
                                                      Object {
                                                        "label": "Michael P. Allen",
                                                        "value": "Michael P. Allen",
                                                      },
                                                      Object {
                                                        "label": "Robert N. Davis",
                                                        "value": "Robert N. Davis",
                                                      },
                                                      Object {
                                                        "label": "Ronald M. Holdaway",
                                                        "value": "Ronald M. Holdaway",
                                                      },
                                                      Object {
                                                        "label": "Scott J. Laurer",
                                                        "value": "Scott J. Laurer",
                                                      },
                                                      Object {
                                                        "label": "William A. Moorman",
                                                        "value": "William A. Moorman",
                                                      },
                                                      Object {
                                                        "label": "William P. Greene, Jr.",
                                                        "value": "William P. Greene, Jr.",
                                                      },
                                                      Object {
                                                        "label": "William S. Greenberg",
                                                        "value": "William S. Greenberg",
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "searchable": true,
                                                    "shouldKeyDownEventCreateNewOption": [Function],
                                                    "styles": Object {
                                                      "input": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": null,
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                  className="cf-select__indicator-separator"
                                                  css={
                                                    Object {
                                                      "alignSelf": "stretch",
                                                      "backgroundColor": "hsl(0, 0%, 80%)",
                                                      "boxSizing": "border-box",
                                                      "label": "indicatorSeparator",
                                                      "marginBottom": 8,
                                                      "marginTop": 8,
                                                      "width": 1,
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="cf-select__indicator-separator css-1okebmr-indicatorSeparator"
                                                  />
                                                </EmotionCssPropInternal>
                                              </IndicatorSeparator>
                                              <DropdownIndicator
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={false}
                                                innerProps={
                                                  Object {
                                                    "aria-hidden": "true",
                                                    "onMouseDown": [Function],
                                                    "onTouchEnd": [Function],
                                                  }
                                                }
                                                isDisabled={false}
                                                isFocused={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "label": "Clerk",
                                                      "value": "Clerk",
                                                    },
                                                    Object {
                                                      "label": "Panel",
                                                      "value": "Panel",
                                                    },
                                                    Object {
                                                      "label": "Per curiam",
                                                      "value": "Per curiam",
                                                    },
                                                    Object {
                                                      "label": "Alan G. Lance, Sr.",
                                                      "value": "Alan G. Lance, Sr.",
                                                    },
                                                    Object {
                                                      "label": "Amanda L. Meredith",
                                                      "value": "Amanda L. Meredith",
                                                    },
                                                    Object {
                                                      "label": "Bruce E. Kasold",
                                                      "value": "Bruce E. Kasold",
                                                    },
                                                    Object {
                                                      "label": "Coral W. Pietsch",
                                                      "value": "Coral W. Pietsch",
                                                    },
                                                    Object {
                                                      "label": "Frank Q. Nebeker",
                                                      "value": "Frank Q. Nebeker",
                                                    },
                                                    Object {
                                                      "label": "Grant C. Jaquith",
                                                      "value": "Grant C. Jaquith",
                                                    },
                                                    Object {
                                                      "label": "Joseph L. Falvey, Jr.",
                                                      "value": "Joseph L. Falvey, Jr.",
                                                    },
                                                    Object {
                                                      "label": "Joseph L. Toth",
                                                      "value": "Joseph L. Toth",
                                                    },
                                                    Object {
                                                      "label": "Kenneth B. Kramer",
                                                      "value": "Kenneth B. Kramer",
                                                    },
                                                    Object {
                                                      "label": "Lawrence B. Hagel",
                                                      "value": "Lawrence B. Hagel",
                                                    },
                                                    Object {
                                                      "label": "Margaret Bartley",
                                                      "value": "Margaret Bartley",
                                                    },
                                                    Object {
                                                      "label": "Mary J. Schoelen",
                                                      "value": "Mary J. Schoelen",
                                                    },
                                                    Object {
                                                      "label": "Michael P. Allen",
                                                      "value": "Michael P. Allen",
                                                    },
                                                    Object {
                                                      "label": "Robert N. Davis",
                                                      "value": "Robert N. Davis",
                                                    },
                                                    Object {
                                                      "label": "Ronald M. Holdaway",
                                                      "value": "Ronald M. Holdaway",
                                                    },
                                                    Object {
                                                      "label": "Scott J. Laurer",
                                                      "value": "Scott J. Laurer",
                                                    },
                                                    Object {
                                                      "label": "William A. Moorman",
                                                      "value": "William A. Moorman",
                                                    },
                                                    Object {
                                                      "label": "William P. Greene, Jr.",
                                                      "value": "William P. Greene, Jr.",
                                                    },
                                                    Object {
                                                      "label": "William S. Greenberg",
                                                      "value": "William S. Greenberg",
                                                    },
                                                  ]
                                                }
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cache": false,
                                                    "captureMenuScroll": false,
                                                    "classNamePrefix": "cf-select",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "Input": [Function],
                                                      "MenuList": [Function],
                                                      "Option": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputId": "judge-dropdown",
                                                    "inputValue": "",
                                                    "isClearable": undefined,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadOptions": undefined,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "judge-dropdown",
                                                    "noOptionsMessage": [Function],
                                                    "onBlurResetsInput": false,
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "Clerk",
                                                        "value": "Clerk",
                                                      },
                                                      Object {
                                                        "label": "Panel",
                                                        "value": "Panel",
                                                      },
                                                      Object {
                                                        "label": "Per curiam",
                                                        "value": "Per curiam",
                                                      },
                                                      Object {
                                                        "label": "Alan G. Lance, Sr.",
                                                        "value": "Alan G. Lance, Sr.",
                                                      },
                                                      Object {
                                                        "label": "Amanda L. Meredith",
                                                        "value": "Amanda L. Meredith",
                                                      },
                                                      Object {
                                                        "label": "Bruce E. Kasold",
                                                        "value": "Bruce E. Kasold",
                                                      },
                                                      Object {
                                                        "label": "Coral W. Pietsch",
                                                        "value": "Coral W. Pietsch",
                                                      },
                                                      Object {
                                                        "label": "Frank Q. Nebeker",
                                                        "value": "Frank Q. Nebeker",
                                                      },
                                                      Object {
                                                        "label": "Grant C. Jaquith",
                                                        "value": "Grant C. Jaquith",
                                                      },
                                                      Object {
                                                        "label": "Joseph L. Falvey, Jr.",
                                                        "value": "Joseph L. Falvey, Jr.",
                                                      },
                                                      Object {
                                                        "label": "Joseph L. Toth",
                                                        "value": "Joseph L. Toth",
                                                      },
                                                      Object {
                                                        "label": "Kenneth B. Kramer",
                                                        "value": "Kenneth B. Kramer",
                                                      },
                                                      Object {
                                                        "label": "Lawrence B. Hagel",
                                                        "value": "Lawrence B. Hagel",
                                                      },
                                                      Object {
                                                        "label": "Margaret Bartley",
                                                        "value": "Margaret Bartley",
                                                      },
                                                      Object {
                                                        "label": "Mary J. Schoelen",
                                                        "value": "Mary J. Schoelen",
                                                      },
                                                      Object {
                                                        "label": "Michael P. Allen",
                                                        "value": "Michael P. Allen",
                                                      },
                                                      Object {
                                                        "label": "Robert N. Davis",
                                                        "value": "Robert N. Davis",
                                                      },
                                                      Object {
                                                        "label": "Ronald M. Holdaway",
                                                        "value": "Ronald M. Holdaway",
                                                      },
                                                      Object {
                                                        "label": "Scott J. Laurer",
                                                        "value": "Scott J. Laurer",
                                                      },
                                                      Object {
                                                        "label": "William A. Moorman",
                                                        "value": "William A. Moorman",
                                                      },
                                                      Object {
                                                        "label": "William P. Greene, Jr.",
                                                        "value": "William P. Greene, Jr.",
                                                      },
                                                      Object {
                                                        "label": "William S. Greenberg",
                                                        "value": "William S. Greenberg",
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "searchable": true,
                                                    "shouldKeyDownEventCreateNewOption": [Function],
                                                    "styles": Object {
                                                      "input": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": null,
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  aria-hidden="true"
                                                  className="cf-select__indicator cf-select__dropdown-indicator"
                                                  css={
                                                    Object {
                                                      ":hover": Object {
                                                        "color": "hsl(0, 0%, 60%)",
                                                      },
                                                      "boxSizing": "border-box",
                                                      "color": "hsl(0, 0%, 80%)",
                                                      "display": "flex",
                                                      "label": "indicatorContainer",
                                                      "padding": 8,
                                                      "transition": "color 150ms",
                                                    }
                                                  }
                                                  onMouseDown={[Function]}
                                                  onTouchEnd={[Function]}
                                                >
                                                  <div
                                                    aria-hidden="true"
                                                    className="cf-select__indicator cf-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                    onMouseDown={[Function]}
                                                    onTouchEnd={[Function]}
                                                  >
                                                    <DownChevron>
                                                      <Svg
                                                        size={20}
                                                      >
                                                        <EmotionCssPropInternal
                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                          aria-hidden="true"
                                                          css={
                                                            Object {
                                                              "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                              "name": "19bqh2r",
                                                              "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                              "toString": [Function],
                                                            }
                                                          }
                                                          focusable="false"
                                                          height={20}
                                                          viewBox="0 0 20 20"
                                                          width={20}
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className="css-6q0nyr-Svg"
                                                            focusable="false"
                                                            height={20}
                                                            viewBox="0 0 20 20"
                                                            width={20}
                                                          >
                                                            <path
                                                              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                            />
                                                          </svg>
                                                        </EmotionCssPropInternal>
                                                      </Svg>
                                                    </DownChevron>
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </DropdownIndicator>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </IndicatorsContainer>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </Control>
                                  <input
                                    name="judge-dropdown"
                                    type="hidden"
                                    value=""
                                  />
                                </div>
                              </EmotionCssPropInternal>
                            </SelectContainer>
                          </Select>
                        </StateManager>
                      </div>
                    </div>
                  </div>
                </SearchableDropdown>
                <RadioField
                  className={
                    Array [
                      "usa-fieldset-inputs",
                    ]
                  }
                  label="How are you proceeding?"
                  name="type-options"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "displayText": "Remand",
                        "value": "remand",
                      },
                      Object {
                        "displayText": "Dismissal, other than Death",
                        "value": "other_dismissal",
                      },
                      Object {
                        "displayText": "Affirmed",
                        "value": "affirmed",
                      },
                      Object {
                        "displayText": "Settlement",
                        "value": "settlement",
                      },
                    ]
                  }
                  required={false}
                  strongLabel={true}
                  styling={
                    Object {
                      "data-css-1m3edv2": "",
                    }
                  }
                  value="remand"
                  vertical={true}
                >
                  <fieldset
                    className="usa-fieldset-inputs cf-form-radio "
                    data-css-1m3edv2=""
                  >
                    <legend
                      className=""
                    >
                      <strong>
                        <span>
                          How are you proceeding?
                           
                        </span>
                      </strong>
                    </legend>
                    <div
                      className="cf-form-radio-options"
                    >
                      <div
                        className="cf-form-radio-option"
                        key="type-options-remand-0"
                      >
                        <input
                          checked={true}
                          disabled={false}
                          id="type-options_remand"
                          name="type-options"
                          onChange={[Function]}
                          type="radio"
                          value="remand"
                        />
                        <label
                          className=""
                          htmlFor="type-options_remand"
                        >
                          Remand
                        </label>
                      </div>
                      <div
                        className="cf-form-radio-option"
                        key="type-options-other_dismissal-1"
                      >
                        <input
                          checked={false}
                          disabled={false}
                          id="type-options_other_dismissal"
                          name="type-options"
                          onChange={[Function]}
                          type="radio"
                          value="other_dismissal"
                        />
                        <label
                          className=""
                          htmlFor="type-options_other_dismissal"
                        >
                          Dismissal, other than Death
                        </label>
                      </div>
                      <div
                        className="cf-form-radio-option"
                        key="type-options-affirmed-2"
                      >
                        <input
                          checked={false}
                          disabled={false}
                          id="type-options_affirmed"
                          name="type-options"
                          onChange={[Function]}
                          type="radio"
                          value="affirmed"
                        />
                        <label
                          className=""
                          htmlFor="type-options_affirmed"
                        >
                          Affirmed
                        </label>
                      </div>
                      <div
                        className="cf-form-radio-option"
                        key="type-options-settlement-3"
                      >
                        <input
                          checked={false}
                          disabled={false}
                          id="type-options_settlement"
                          name="type-options"
                          onChange={[Function]}
                          type="radio"
                          value="settlement"
                        />
                        <label
                          className=""
                          htmlFor="type-options_settlement"
                        >
                          Settlement
                        </label>
                      </div>
                    </div>
                  </fieldset>
                </RadioField>
                <RadioField
                  className={
                    Array [
                      "usa-fieldset-inputs",
                    ]
                  }
                  label="What type of remand is this?"
                  name="sub-type-options"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "displayText": "Joint Motion for Remand (JMR) / Joint Motion for Partial Remand (JMPR)",
                        "value": "jmr_jmpr",
                      },
                    ]
                  }
                  required={false}
                  strongLabel={true}
                  styling={
                    Object {
                      "data-css-1m3edv2": "",
                    }
                  }
                  value="jmr_jmpr"
                  vertical={true}
                >
                  <fieldset
                    className="usa-fieldset-inputs cf-form-radio "
                    data-css-1m3edv2=""
                  >
                    <legend
                      className=""
                    >
                      <strong>
                        <span>
                          What type of remand is this?
                           
                        </span>
                      </strong>
                    </legend>
                    <div
                      className="cf-form-radio-options"
                    >
                      <div
                        className="cf-form-radio-option"
                        key="sub-type-options-jmr_jmpr-0"
                      >
                        <input
                          checked={true}
                          disabled={false}
                          id="sub-type-options_jmr_jmpr"
                          name="sub-type-options"
                          onChange={[Function]}
                          type="radio"
                          value="jmr_jmpr"
                        />
                        <label
                          className=""
                          htmlFor="sub-type-options_jmr_jmpr"
                        >
                          Joint Motion for Remand (JMR) / Joint Motion for Partial Remand (JMPR)
                        </label>
                      </div>
                    </div>
                  </fieldset>
                </RadioField>
                <DateSelector
                  errorMessage={null}
                  label="What is the Court's decision date?"
                  name="decision-date"
                  onChange={[Function]}
                  strongLabel={true}
                  type="date"
                  value={null}
                >
                  <TextField
                    className={
                      Array [
                        "cf-form-textinput",
                      ]
                    }
                    errorMessage={null}
                    label="What is the Court's decision date?"
                    max="9999-12-31"
                    name="decision-date"
                    onChange={[Function]}
                    optional={false}
                    placeholder="mm/dd/yyyy"
                    required={false}
                    strongLabel={true}
                    type="date"
                    useAriaLabel={false}
                    validationError={null}
                    value={null}
                  >
                    <div
                      className="cf-form-textinput   "
                    >
                      <label
                        htmlFor="decision-date"
                      >
                        <strong>
                          <FormLabel
                            label="What is the Court's decision date?"
                            name="decision-date"
                            optional={false}
                            required={false}
                          >
                            <span>
                              What is the Court's decision date?
                            </span>
                          </FormLabel>
                        </strong>
                      </label>
                      <input
                        className={
                          Array [
                            "cf-form-textinput",
                          ]
                        }
                        id="decision-date"
                        max="9999-12-31"
                        name="decision-date"
                        onBlur={[Function]}
                        onChange={[Function]}
                        placeholder="mm/dd/yyyy"
                        type="date"
                        value=""
                      />
                    </div>
                  </TextField>
                </DateSelector>
                <legend>
                  <strong>
                    Judgement and mandate date
                  </strong>
                </legend>
                <Checkbox
                  label="Same as Court's decision date"
                  name="mandate-dates-same-toggle"
                  onChange={[Function]}
                  required={false}
                  value={true}
                >
                  <div
                    className="checkbox-wrapper-mandate-dates-same-toggle cf-form-checkboxes"
                  >
                    <div
                      className="cf-form-checkbox"
                    >
                      <input
                        aria-label="mandate-dates-same-toggle"
                        checked={true}
                        id="mandate-dates-same-toggle"
                        name="mandate-dates-same-toggle"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <label
                        htmlFor="mandate-dates-same-toggle"
                      >
                        <span
                          className=""
                        >
                          Same as Court's decision date
                        </span>
                         
                      </label>
                    </div>
                  </div>
                </Checkbox>
                <legend>
                  <strong>
                    Which issues are being addressed by the court?
                  </strong>
                </legend>
                <Button
                  classNames={
                    Array [
                      "cf-submit",
                    ]
                  }
                  linkStyling={true}
                  loading={false}
                  name="Unselect all"
                  onClick={[Function]}
                  styling={
                    Object {
                      "data-css-prix5f": "",
                    }
                  }
                  type="button"
                  willNeverBeLoading={false}
                >
                  <span>
                    <button
                      className="cf-submit cf-btn-link usa-button"
                      data-css-prix5f=""
                      id="button-Unselect-all"
                      onClick={[Function]}
                      type="button"
                    >
                      Unselect all
                    </button>
                  </span>
                </Button>
                <CheckboxGroup
                  errorMessage={null}
                  getCheckbox={[Function]}
                  hideErrorMessage={false}
                  hideLabel={true}
                  name="issuesList"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "id": "1",
                        "label": "This is a description of the decision",
                      },
                      Object {
                        "id": "2",
                        "label": "This is a description of another decision",
                      },
                    ]
                  }
                  required={false}
                  styling={
                    Object {
                      "data-css-13g2xn1": "",
                    }
                  }
                  values={
                    Object {
                      "1": true,
                      "2": true,
                    }
                  }
                >
                  <fieldset
                    className="checkbox-wrapper-issuesList cf-form-checkboxes cf-checkbox-group-inline"
                    data-css-13g2xn1=""
                  >
                    <legend
                      className="hidden-field"
                    >
                      <span>
                        issuesList
                      </span>
                    </legend>
                    <div
                      className="checkbox"
                      key="1"
                    >
                      <input
                        checked={true}
                        disabled=""
                        id="1"
                        name="1"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <label
                        htmlFor="1"
                      >
                        This is a description of the decision
                      </label>
                    </div>
                    <div
                      className="checkbox"
                      key="2"
                    >
                      <input
                        checked={true}
                        disabled=""
                        id="2"
                        name="2"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <label
                        htmlFor="2"
                      >
                        This is a description of another decision
                      </label>
                    </div>
                  </fieldset>
                </CheckboxGroup>
                <TextareaField
                  characterLimitTopRight={false}
                  disabled={false}
                  errorMessage={null}
                  label="Provide context and instructions for this action"
                  name="context-and-instructions-textBox"
                  onChange={[Function]}
                  optional={false}
                  required={false}
                  strongLabel={true}
                  value=""
                >
                  <div
                    className="cf-form-textarea"
                  >
                    <label
                      className="question-label"
                      htmlFor="context-and-instructions-textBox"
                    >
                      <strong>
                        <FormLabel
                          label="Provide context and instructions for this action"
                          name="context-and-instructions-textBox"
                          optional={false}
                          required={false}
                        >
                          <span>
                            Provide context and instructions for this action
                          </span>
                        </FormLabel>
                      </strong>
                    </label>
                    <textarea
                      disabled={false}
                      id="context-and-instructions-textBox"
                      name="context-and-instructions-textBox"
                      onChange={[Function]}
                      value=""
                    />
                  </div>
                </TextareaField>
              </section>
            </AppSegment>
            <DecisionViewFooter
              buttons={
                Array [
                  Object {
                    "callback": [Function],
                    "classNames": Array [
                      "cf-prev-step",
                      "usa-button-secondary",
                      "button-back-button",
                    ],
                    "displayText": "Cancel",
                    "name": "back-button",
                    "willNeverBeLoading": true,
                  },
                  Object {
                    "callback": [Function],
                    "classNames": Array [
                      "cf-right-side",
                    ],
                    "disabled": false,
                    "displayText": "Submit",
                    "loading": undefined,
                    "loadingText": "Submitting...",
                    "name": "next-button",
                    "styling": Object {
                      "data-css-wn5k45": "",
                    },
                  },
                ]
              }
            >
              <div
                data-css-63oe3q=""
              >
                <Button
                  callback={[Function]}
                  classNames={
                    Array [
                      "cf-prev-step",
                      "usa-button-secondary",
                      "button-back-button",
                    ]
                  }
                  displayText="Cancel"
                  key="0"
                  linkStyling={false}
                  loading={false}
                  name="back-button"
                  onClick={[Function]}
                  type="button"
                  willNeverBeLoading={true}
                >
                  <button
                    className="cf-prev-step usa-button-secondary button-back-button usa-button"
                    id="button-back-button"
                    onClick={[Function]}
                    type="button"
                  >
                    Cancel
                  </button>
                </Button>
                <Button
                  callback={[Function]}
                  classNames={
                    Array [
                      "cf-right-side",
                    ]
                  }
                  disabled={false}
                  displayText="Submit"
                  key="1"
                  linkStyling={false}
                  loading={false}
                  loadingText="Submitting..."
                  name="next-button"
                  onClick={[Function]}
                  styling={
                    Object {
                      "data-css-wn5k45": "",
                    }
                  }
                  type="button"
                  willNeverBeLoading={false}
                >
                  <span>
                    <button
                      className="cf-right-side usa-button"
                      data-css-wn5k45=""
                      disabled={false}
                      id="button-next-button"
                      onClick={[Function]}
                      type="button"
                    >
                      Submit
                    </button>
                  </span>
                </Button>
              </div>
            </DecisionViewFooter>
          </QueueFlowPage>
        </Connect(QueueFlowPage)>
      </withRouter(Connect(QueueFlowPage))>
    </AddCavcRemandView>
  </Connect(AddCavcRemandView)>
</withRouter(Connect(AddCavcRemandView))>
`;
