podTemplate(cloud:'minikube', label:'caseflow', containers: [
  containerTemplate(
    name: 'postgres', 
    image: 'postgres:9.5',
    ttyEnabled: true,
    privileged: false,
    alwaysPullImage: false
    ),
  containerTemplate(
    name: 'redis', 
    image: 'redis:3.2.9-alpine', 
    ttyEnabled: true,
    privileged: false,
    alwaysPullImage: false
  ),
  containerTemplate(
     name: 'caseflow-test-runner',
     image: 'kube-registry.kube-system.svc.cluster.local:31000/caseflow',
     ttyEnabled: true,
     alwaysPullImage: true,
     command: 'cat',
     envVars: [
      containerEnvVar(key: 'DATABASE_URL', value: 'postgres://postgres@localhost:5432/caseflow_certification'),
      containerEnvVar(key: 'RAILS_ENV', value: 'test'),
      containerEnvVar(key: 'DISPLAY', value: ':99'),
      containerEnvVar(key: 'CHROME_BIN', value: 'chromium-browser'),
      containerEnvVar(key: 'CHROME_ARGS', value: '--no-sandbox')
     ],
  )]) {
  node('caseflow') {

    def WORKSPACE_DIR = '/home/jenkins/workspace'
    def CASEFLOW_DIR = WORKSPACE_DIR + '/caseflow'
    
    stage('git clone') {
      container('caseflow-test-runner') {
        sh """
        cd ${WORKSPACE_DIR}
        git clone https://github.com/department-of-veterans-affairs/caseflow.git
        cd caseflow && git checkout ${env.BRANCH_NAME}
        """
      }
    }

    stage('install') {
      parallel(
        npm: {
          stage('npm') {
            container('caseflow-test-runner') {
              sh """
              cd ${CASEFLOW_DIR}/client && npm install --no-optional
              """
            }
          }
        },

        bundle: {
          stage('bundle') {
            container('caseflow-test-runner') {
              sh """
              cd ${CASEFLOW_DIR} && bundle install --without production staging
              """
            }
          }
        }
      )
    }

    stage('run test') {
      parallel (
        frontend: {
          stage('npm test') {
            container('caseflow-test-runner') {
              sh """
              cd ${CASEFLOW_DIR}/client && npm run test
              """
            }
          }
        },

        lint: {
          stage('rake lint/security') {
            container('caseflow-test-runner') {
              sh """
              cd ${CASEFLOW_DIR}
              rake lint
              rake security
              """
            }
          }
        },

        backend: {
          stage('setup') {
            container('caseflow-test-runner') {
              sh """
              cd ${CASEFLOW_DIR}
              Xvfb +extension RANDR :99 -screen 0 1024x768x16 &
              """
            }
          }

          stage('db:create') {
            container('caseflow-test-runner') {
              sh """
              cd ${CASEFLOW_DIR}
              rake db:create
              rake db:schema:load
              """
            }
          }

          stage('rake spec') {
            container('caseflow-test-runner') {
              sh """
              cd ${CASEFLOW_DIR}
              rake spec
              """
            }
          }

          stage('rake coverage') {
            container('caseflow-test-runner') {
              sh """
              cd ${CASEFLOW_DIR}
              rake ci:verify_code_coverage
              rake konacha:run
              """
            }
          }
        }
      )
    }
  }
}