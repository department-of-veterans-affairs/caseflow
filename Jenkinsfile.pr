podTemplate(cloud:'minikube', label:'caseflow', containers: [
  containerTemplate(
    name: 'postgres', 
    image: 'postgres:9.5',
    ttyEnabled: true,
    privileged: false,
    alwaysPullImage: false
    ),
  containerTemplate(
    name: 'redis', 
    image: 'redis:3.2.9-alpine', 
    ttyEnabled: true,
    privileged: false,
    alwaysPullImage: false
  ),
  containerTemplate(
     name: 'caseflow-test-runner',
     image: 'registry.dsatva.com/caseflow',
     ttyEnabled: true,
     alwaysPullImage: true,
     command: 'cat',
     resourceRequestCpu: '7',
     resourceLimitCpu: '7.5',
     resourceRequestMemory: '10000Mi',
     resourceLimitMemory: '10000Mi',
     envVars: [
      containerEnvVar(key: 'POSTGRES_USER', value: 'postgres'),
      containerEnvVar(key: 'POSTGRES_HOST', value: 'localhost'),
      containerEnvVar(key: 'RAILS_ENV', value: 'test'),
      containerEnvVar(key: 'DISPLAY', value: ':99'),
      containerEnvVar(key: 'CHROME_BIN', value: 'chromium-browser'),
      containerEnvVar(key: 'CI', value: 'true'),
      containerEnvVar(key: 'CHROME_ARGS', value: '--no-sandbox')
     ],
  )]) {
  node('caseflow') {
    container('caseflow-test-runner') {
    // /home/jenkins is a shared volume called workspace-volume for this k8s Pod.
    // To keep the path short and avoid the "Chrome socket path too long" issue, we
    // can force Jenkins to checkout code to this directory.
    // See also: https://bugs.chromium.org/p/chromium/issues/detail?id=469065
    def CASEFLOW_DIR = '/home/jenkins/workspace/caseflow-parallel-test'
    
    stage('git clone') {      
       dir(CASEFLOW_DIR) {
         checkout scm
       }
    }

    stage('install') {
      parallel(
        npm: {
          stage('npm') {
              sh """
              cd ${CASEFLOW_DIR}/client && npm install --no-optional
              """
          }
        },

        bundle: {
          stage('bundle') {
              sh """
              cd ${CASEFLOW_DIR} && bundle install --without production staging
              """
          }
        }
      )
    }

    stage('setup') {
        sh """
        Xvfb +extension RANDR :99 -screen 0 1600x900x16 &
        """
    }

    stage('backend') {
      parallel (
        certification: {
          stage('certification test') {
              sh """
              cd ${CASEFLOW_DIR}
              export DATABASE_URL=postgres://postgres@localhost:5432/caseflow_certification_certification
              bundle exec rake spec:parallel:setup:certification
              bundle exec rake spec:parallel:certification
              """
          }
        },
        reader: {
          stage('reader test') {
              sh """
              cd ${CASEFLOW_DIR}
              export DATABASE_URL=postgres://postgres@localhost:5432/caseflow_certification_reader
              bundle exec rake spec:parallel:setup:reader
              bundle exec rake spec:parallel:reader
              """
          }
        },
        dispatch: {
          stage('dispatch test') {
              sh """
              cd ${CASEFLOW_DIR}
              export DATABASE_URL=postgres://postgres@localhost:5432/caseflow_certification_dispatch
              bundle exec rake spec:parallel:setup:dispatch
              bundle exec rake spec:parallel:dispatch
              """
          }
        },

        other: {
          stage('other test') {
              sh """
              cd ${CASEFLOW_DIR}
              export DATABASE_URL=postgres://postgres@localhost:5432/caseflow_certification_other
              bundle exec rake spec:parallel:setup:other
              bundle exec rake spec:parallel:other
              """
          }
        },
        javascript: {
          stage('javascript test') {
              sh """
              cd ${CASEFLOW_DIR}
              bundle exec rake mocha
              """
            }
        },
        unit: {
          stage('unit test') {
              sh """
              cd ${CASEFLOW_DIR}
              export DATABASE_URL=postgres://postgres@localhost:5432/caseflow_certification_unit
              bundle exec rake spec:parallel:setup:unit
              bundle exec rake spec:parallel:unit
              """
            }
        },
        api: {
          stage('api test') {
              sh """
              cd ${CASEFLOW_DIR}
              export DATABASE_URL=postgres://postgres@localhost:5432/caseflow_certification_api
              bundle exec rake spec:parallel:setup:api
              bundle exec rake spec:parallel:api
              """
          }
        },
        frontend: {
          stage('npm test') {
              sh """
              cd ${CASEFLOW_DIR}/client && npm run test
              """
          }
        },
	
        lint: {
          stage('rake lint/security') {
              sh """
              cd ${CASEFLOW_DIR}
              rake security
              """
          }
        }
      )
    }

    stage('coverage') {
        sh """
        cd ${CASEFLOW_DIR}
        rake ci:verify_code_coverage
        rake konacha:run
        """
    }
  }
  }
}
